<TreeSpice version 4.0>

node lv=0 id=91 art=91 nm=Manual of LuaFAR 2M
node lv=1 id=214 art=214 nm=Generic LuaFAR plugin
node lv=2 id=425 art=425 nm=Customizing the generic plugin
node lv=2 id=426 art=426 nm=Extra exported functions
node lv=3 id=577 art=571 nm=GetLuaState
node lv=3 id=578 art=572 nm=luaopen_luaplug
node lv=1 id=329 art=329 nm=Flags
node lv=1 id=515 art=513 nm=Lua engine
node lv=0 id=92 art=92 nm=LuaFAR plugin-exported functions
node lv=1 id=122 art=122 nm=Common functions
node lv=2 id=96 art=96 nm=export.Configure
node lv=2 id=98 art=98 nm=export.ExitFAR
node lv=2 id=105 art=105 nm=export.GetPluginInfo
node lv=2 id=447 art=447 nm=export.MayExitFAR
node lv=2 id=109 art=109 nm=export.Open
node lv=2 id=485 art=485 nm=export.ProcessConsoleInput
node lv=2 id=580 art=574 nm=export.ProcessSynchroEvent
node lv=1 id=123 art=123 nm=Panel functions
node lv=2 id=94 art=94 nm=export.ClosePanel
node lv=2 id=95 art=95 nm=export.Compare
node lv=2 id=97 art=97 nm=export.DeleteFiles
node lv=2 id=364 art=364 nm=export.GetCustomData
node lv=2 id=101 art=101 nm=export.GetFiles
node lv=2 id=102 art=102 nm=export.GetFindData
node lv=2 id=591 art=584 nm=export.GetLinkTarget
node lv=2 id=104 art=104 nm=export.GetOpenPanelInfo
node lv=2 id=106 art=106 nm=export.GetVirtualFindData
node lv=2 id=107 art=107 nm=export.MakeDirectory
node lv=2 id=108 art=108 nm=export.OpenFilePlugin
node lv=2 id=113 art=113 nm=export.ProcessHostFile
node lv=2 id=114 art=114 nm=export.ProcessKey
node lv=2 id=112 art=112 nm=export.ProcessPanelEvent
node lv=2 id=115 art=115 nm=export.PutFiles
node lv=2 id=116 art=116 nm=export.SetDirectory
node lv=2 id=117 art=117 nm=export.SetFindList
node lv=1 id=124 art=124 nm=Editor functions
node lv=2 id=110 art=110 nm=export.ProcessEditorEvent
node lv=2 id=111 art=111 nm=export.ProcessEditorInput
node lv=1 id=125 art=125 nm=Viewer functions
node lv=2 id=127 art=127 nm=export.ProcessViewerEvent
node lv=1 id=220 art=220 nm=Dialog functions
node lv=2 id=221 art=221 nm=export.ProcessDialogEvent
node lv=1 id=151 art=151 nm=Other functions
node lv=2 id=150 art=150 nm=export.OnError
node lv=1 id=486 art=486 nm=C-functions
node lv=2 id=467 art=467 nm=GetGlobalInfoW
node lv=2 id=103 art=103 nm=GetMinFarVersionW
node lv=2 id=319 art=319 nm=ProcessSynchroEventW
node lv=2 id=118 art=118 nm=SetStartupInfoW
node lv=0 id=131 art=131 nm=LuaFAR Far libraries
node lv=1 id=78 art=78 nm=Common functions
node lv=2 id=524 art=522 nm=far.FreeScreen
node lv=2 id=53 art=53 nm=far.GetDirList
node lv=2 id=58 art=58 nm=far.GetMsg
node lv=2 id=60 art=60 nm=far.GetPluginDirList
node lv=2 id=64 art=64 nm=far.Menu
node lv=2 id=69 art=69 nm=far.RestoreScreen
node lv=2 id=70 art=70 nm=far.SaveScreen
node lv=2 id=74 art=74 nm=far.ShowHelp
node lv=2 id=76 art=76 nm=far.Text
node lv=1 id=561 art=559 nm=Advanced Control
node lv=2 id=153 art=153 nm=far.AdvControl
node lv=3 id=530 art=528 nm=ACTL_COMMIT
node lv=3 id=532 art=530 nm=ACTL_GETARRAYCOLOR
node lv=3 id=533 art=531 nm=ACTL_GETCOLOR
node lv=3 id=534 art=532 nm=ACTL_GETCONFIRMATIONS
node lv=3 id=535 art=533 nm=ACTL_GETCURSORPOS
node lv=3 id=536 art=534 nm=ACTL_GETDESCSETTINGS
node lv=3 id=537 art=535 nm=ACTL_GETDIALOGSETTINGS
node lv=3 id=539 art=537 nm=ACTL_GETFARRECT
node lv=3 id=540 art=538 nm=ACTL_GETFARVERSION
node lv=3 id=541 art=539 nm=ACTL_GETINTERFACESETTINGS
node lv=3 id=542 art=540 nm=ACTL_GETPANELSETTINGS
node lv=3 id=543 art=541 nm=ACTL_GETPLUGINMAXREADDATA
node lv=3 id=544 art=542 nm=ACTL_GETSHORTWINDOWINFO
node lv=3 id=545 art=543 nm=ACTL_GETSYSTEMSETTINGS
node lv=3 id=546 art=544 nm=ACTL_GETSYSWORDDIV
node lv=3 id=547 art=545 nm=ACTL_GETWINDOWCOUNT
node lv=3 id=548 art=546 nm=ACTL_GETWINDOWINFO
node lv=3 id=549 art=547 nm=ACTL_KEYMACRO
node lv=3 id=551 art=549 nm=ACTL_QUIT
node lv=3 id=552 art=550 nm=ACTL_REDRAWALL
node lv=3 id=553 art=551 nm=ACTL_SETARRAYCOLOR
node lv=3 id=554 art=552 nm=ACTL_SETCURRENTWINDOW
node lv=3 id=555 art=553 nm=ACTL_SETCURSORPOS
node lv=3 id=558 art=556 nm=ACTL_SYNCHRO
node lv=3 id=559 art=557 nm=ACTL_WAITKEY
node lv=3 id=560 art=558 nm=ACTL_WINPORTBACKEND
node lv=2 id=463 art=463 nm=actl namespace
node lv=1 id=81 art=81 nm=Dialog functions
node lv=2 id=479 art=479 nm=far.ColorDialog
node lv=2 id=438 art=438 nm=far.CreateUserControl
node lv=2 id=20 art=20 nm=far.Dialog
node lv=2 id=380 art=380 nm=far.DialogFree
node lv=2 id=378 art=378 nm=far.DialogInit
node lv=2 id=379 art=379 nm=far.DialogRun
node lv=2 id=566 art=564 nm=far.GetDlgItem
node lv=2 id=62 art=62 nm=far.InputBox
node lv=2 id=65 art=65 nm=far.Message
node lv=2 id=71 art=71 nm=far.SendDlgMessage
node lv=3 id=462 art=462 nm=Methods of dialog handle
node lv=2 id=567 art=565 nm=far.SetDlgItem
node lv=2 id=573 art=568 nm=far.SubscribeDialogDrawEvents
node lv=1 id=285 art=285 nm=Dialog Events
node lv=2 id=297 art=297 nm=DN_BTNCLICK
node lv=2 id=298 art=298 nm=DN_CLOSE
node lv=2 id=299 art=299 nm=DN_CTLCOLORDIALOG
node lv=2 id=300 art=300 nm=DN_CTLCOLORDLGITEM
node lv=2 id=286 art=286 nm=DN_CTLCOLORDLGLIST
node lv=2 id=301 art=301 nm=DN_DRAGGED
node lv=2 id=302 art=302 nm=DN_DRAWDIALOG
node lv=2 id=303 art=303 nm=DN_DRAWDIALOGDONE
node lv=2 id=287 art=287 nm=DN_DRAWDLGITEM
node lv=2 id=288 art=288 nm=DN_EDITCHANGE
node lv=2 id=304 art=304 nm=DN_ENTERIDLE
node lv=2 id=305 art=305 nm=DN_GETDIALOGINFO
node lv=2 id=306 art=306 nm=DN_GOTFOCUS
node lv=2 id=289 art=289 nm=DN_HELP
node lv=2 id=307 art=307 nm=DN_HOTKEY
node lv=2 id=308 art=308 nm=DN_INITDIALOG
node lv=2 id=309 art=309 nm=DN_KEY
node lv=2 id=310 art=310 nm=DN_KILLFOCUS
node lv=2 id=311 art=311 nm=DN_LISTCHANGE
node lv=2 id=312 art=312 nm=DN_LISTHOTKEY
node lv=2 id=290 art=290 nm=DN_MOUSECLICK
node lv=2 id=291 art=291 nm=DN_MOUSEEVENT
node lv=2 id=292 art=292 nm=DN_RESIZECONSOLE
node lv=1 id=79 art=79 nm=Editor functions
node lv=2 id=22 art=22 nm=editor.AddColor
node lv=2 id=223 art=223 nm=editor.AddSessionBookmark
node lv=2 id=224 art=224 nm=editor.ClearSessionBookmarks
node lv=2 id=466 art=466 nm=editor.DelColor
node lv=2 id=23 art=23 nm=editor.DeleteBlock
node lv=2 id=24 art=24 nm=editor.DeleteChar
node lv=2 id=225 art=225 nm=editor.DeleteSessionBookmark
node lv=2 id=25 art=25 nm=editor.DeleteString
node lv=2 id=21 art=21 nm=editor.Editor
node lv=2 id=27 art=27 nm=editor.ExpandTabs
node lv=2 id=136 art=136 nm=editor.GetBookmarks
node lv=2 id=28 art=28 nm=editor.GetColor
node lv=2 id=261 art=261 nm=editor.GetFileName
node lv=2 id=29 art=29 nm=editor.GetInfo
node lv=2 id=30 art=30 nm=editor.GetSelection
node lv=2 id=230 art=230 nm=editor.GetSessionBookmarks
node lv=2 id=31 art=31 nm=editor.GetString
node lv=2 id=481 art=481 nm=editor.GetStringW
node lv=2 id=497 art=497 nm=editor.GetTitle
node lv=2 id=32 art=32 nm=editor.InsertString
node lv=2 id=33 art=33 nm=editor.InsertText
node lv=2 id=502 art=502 nm=editor.InsertTextW
node lv=2 id=227 art=227 nm=editor.NextSessionBookmark
node lv=2 id=226 art=226 nm=editor.PrevSessionBookmark
node lv=2 id=36 art=36 nm=editor.ProcessInput
node lv=2 id=138 art=138 nm=editor.ProcessKey
node lv=2 id=37 art=37 nm=editor.Quit
node lv=2 id=38 art=38 nm=editor.ReadInput
node lv=2 id=39 art=39 nm=editor.RealToTab
node lv=2 id=40 art=40 nm=editor.Redraw
node lv=2 id=41 art=41 nm=editor.SaveFile
node lv=2 id=42 art=42 nm=editor.Select
node lv=2 id=139 art=139 nm=editor.SetKeyBar
node lv=2 id=140 art=140 nm=editor.SetParam
node lv=2 id=43 art=43 nm=editor.SetPosition
node lv=2 id=44 art=44 nm=editor.SetString
node lv=2 id=490 art=490 nm=editor.SetStringW
node lv=2 id=45 art=45 nm=editor.SetTitle
node lv=2 id=48 art=48 nm=editor.TabToReal
node lv=2 id=137 art=137 nm=editor.TurnOffMarkingBlock
node lv=2 id=283 art=283 nm=editor.UndoRedo
node lv=1 id=403 art=403 nm=Panel functions
node lv=2 id=457 art=457 nm=panel.BeginSelection
node lv=2 id=145 art=145 nm=panel.CheckPanelsExist
node lv=2 id=330 art=330 nm=panel.ClearSelection
node lv=2 id=4 art=4 nm=panel.ClosePanel
node lv=2 id=458 art=458 nm=panel.EndSelection
node lv=2 id=5 art=5 nm=panel.GetCmdLine
node lv=2 id=6 art=6 nm=panel.GetCmdLinePos
node lv=2 id=331 art=331 nm=panel.GetCmdLineSelection
node lv=2 id=258 art=258 nm=panel.GetColumnTypes
node lv=2 id=259 art=259 nm=panel.GetColumnWidths
node lv=2 id=252 art=252 nm=panel.GetCurrentPanelItem
node lv=2 id=260 art=260 nm=panel.GetPanelDirectory
node lv=2 id=381 art=381 nm=panel.GetPanelFormat
node lv=2 id=382 art=382 nm=panel.GetPanelHostFile
node lv=2 id=7 art=7 nm=panel.GetPanelInfo
node lv=2 id=253 art=253 nm=panel.GetPanelItem
node lv=2 id=455 art=455 nm=panel.GetPanelPluginHandle
node lv=2 id=498 art=498 nm=panel.GetPanelPrefix
node lv=2 id=254 art=254 nm=panel.GetSelectedPanelItem
node lv=2 id=228 art=228 nm=panel.GetUserScreen
node lv=2 id=9 art=9 nm=panel.InsertCmdLine
node lv=2 id=320 art=320 nm=panel.IsActivePanel
node lv=2 id=10 art=10 nm=panel.RedrawPanel
node lv=2 id=499 art=499 nm=panel.SetActivePanel
node lv=2 id=395 art=395 nm=panel.SetCaseSensitiveSort
node lv=2 id=11 art=11 nm=panel.SetCmdLine
node lv=2 id=12 art=12 nm=panel.SetCmdLinePos
node lv=2 id=332 art=332 nm=panel.SetCmdLineSelection
node lv=2 id=454 art=454 nm=panel.SetDirectoriesFirst
node lv=2 id=146 art=146 nm=panel.SetNumericSort
node lv=2 id=13 art=13 nm=panel.SetPanelDirectory
node lv=2 id=571 art=567 nm=panel.SetPanelLocation
node lv=2 id=14 art=14 nm=panel.SetSelection
node lv=2 id=147 art=147 nm=panel.SetSortMode
node lv=2 id=148 art=148 nm=panel.SetSortOrder
node lv=2 id=15 art=15 nm=panel.SetUserScreen
node lv=2 id=16 art=16 nm=panel.SetViewMode
node lv=2 id=17 art=17 nm=panel.UpdatePanel
node lv=1 id=80 art=80 nm=Viewer functions
node lv=2 id=468 art=468 nm=viewer.GetFileName
node lv=2 id=132 art=132 nm=viewer.GetInfo
node lv=2 id=134 art=134 nm=viewer.Quit
node lv=2 id=135 art=135 nm=viewer.Redraw
node lv=2 id=144 art=144 nm=viewer.Select
node lv=2 id=141 art=141 nm=viewer.SetKeyBar
node lv=2 id=229 art=229 nm=viewer.SetMode
node lv=2 id=142 art=142 nm=viewer.SetPosition
node lv=2 id=77 art=77 nm=viewer.Viewer
node lv=1 id=322 art=322 nm=File Filter Control
node lv=2 id=323 art=323 nm=far.CreateFileFilter
node lv=2 id=324 art=324 nm=FreeFileFilter
node lv=2 id=325 art=325 nm=OpenFiltersMenu
node lv=2 id=326 art=326 nm=StartingToFilter
node lv=2 id=327 art=327 nm=IsFileInFilter
node lv=1 id=428 art=428 nm=Macro Control
node lv=2 id=477 art=477 nm=far.MacroAdd
node lv=2 id=429 art=429 nm=far.MacroCheck
node lv=2 id=478 art=478 nm=far.MacroDelete
node lv=2 id=474 art=474 nm=far.MacroExecute
node lv=2 id=430 art=430 nm=far.MacroGetArea
node lv=2 id=475 art=475 nm=far.MacroGetLastError
node lv=2 id=431 art=431 nm=far.MacroGetState
node lv=2 id=432 art=432 nm=far.MacroLoadAll
node lv=2 id=433 art=433 nm=far.MacroPost
node lv=2 id=434 art=434 nm=far.MacroSaveAll
node lv=1 id=415 art=415 nm=Plugins Control
node lv=2 id=505 art=505 nm=far.ClearPluginCache
node lv=2 id=507 art=507 nm=far.FindPlugin
node lv=2 id=416 art=416 nm=far.ForcedLoadPlugin
node lv=2 id=508 art=508 nm=far.GetPluginInformation
node lv=2 id=506 art=506 nm=far.GetPlugins
node lv=2 id=594 art=585 nm=far.IsPluginLoaded
node lv=2 id=417 art=417 nm=far.LoadPlugin
node lv=2 id=418 art=418 nm=far.UnloadPlugin
node lv=1 id=82 art=82 nm=Far Standard Functions
node lv=2 id=514 art=453 nm=far.BackgroundTask
node lv=2 id=494 art=494 nm=far.CheckMask
node lv=2 id=2 art=2 nm=far.CmpName
node lv=2 id=493 art=493 nm=far.CmpNameList
node lv=2 id=284 art=284 nm=far.ConvertPath
node lv=2 id=3 art=3 nm=far.CopyToClipboard
node lv=2 id=593 art=501 nm=far.DetectCodePage
node lv=2 id=576 art=570 nm=far.FormatFileSize
node lv=2 id=495 art=495 nm=far.GenerateName
node lv=2 id=262 art=262 nm=far.GetCurrentDirectory
node lv=2 id=528 art=526 nm=far.GetFileGroup
node lv=2 id=56 art=56 nm=far.GetFileOwner
node lv=2 id=59 art=59 nm=far.GetNumberOfLinks
node lv=2 id=200 art=200 nm=far.GetReparsePointInfo
node lv=2 id=186 art=186 nm=far.InputRecordToKey
node lv=2 id=63 art=63 nm=far.KeyToName
node lv=2 id=201 art=201 nm=far.LIsAlpha
node lv=2 id=202 art=202 nm=far.LIsAlphanum
node lv=2 id=203 art=203 nm=far.LIsLower
node lv=2 id=204 art=204 nm=far.LIsUpper
node lv=2 id=205 art=205 nm=far.LLowerBuf
node lv=2 id=188 art=188 nm=far.LStricmp
node lv=2 id=189 art=189 nm=far.LStrnicmp
node lv=2 id=206 art=206 nm=far.LUpperBuf
node lv=2 id=208 art=208 nm=far.MkLink
node lv=2 id=207 art=207 nm=far.MkTemp
node lv=2 id=504 art=504 nm=far.NameToInputRecord
node lv=2 id=66 art=66 nm=far.NameToKey
node lv=2 id=67 art=67 nm=far.PasteFromClipboard
node lv=2 id=190 art=190 nm=far.ProcessName
node lv=2 id=211 art=211 nm=far.RecursiveSearch
node lv=2 id=209 art=209 nm=far.TruncPathStr
node lv=2 id=210 art=210 nm=far.TruncStr
node lv=2 id=335 art=335 nm=far.XLat
node lv=1 id=273 art=273 nm=Regular expression functions
node lv=2 id=488 art=488 nm=regex.exec, execW
node lv=2 id=271 art=271 nm=regex.find, findW
node lv=2 id=269 art=269 nm=regex.gmatch, gmatchW
node lv=2 id=270 art=270 nm=regex.gsub, gsubW
node lv=2 id=272 art=272 nm=regex.match, matchW
node lv=2 id=483 art=483 nm=regex.tfind, tfindW
node lv=2 id=266 art=266 nm=regex.new
node lv=3 id=377 art=377 nm=method bracketscount
node lv=3 id=489 art=489 nm=methods exec, execW
node lv=3 id=267 art=267 nm=methods find, findW
node lv=3 id=581 art=575 nm=methods gmatch, gmatchW
node lv=3 id=386 art=386 nm=methods gsub, gsubW
node lv=3 id=268 art=268 nm=methods match, matchW
node lv=3 id=484 art=484 nm=methods tfind, tfindW
node lv=1 id=511 art=510 nm=far.Host
node lv=2 id=510 art=509 nm=far.Host.GetFiles
node lv=2 id=512 art=511 nm=far.Host.GetFindData
node lv=2 id=513 art=512 nm=far.Host.SetDirectory
node lv=1 id=83 art=83 nm=Other functions
node lv=2 id=185 art=185 nm=far.CPluginStartupInfo
node lv=2 id=461 art=461 nm=far.InputRecordToName
node lv=2 id=280 art=280 nm=far.MakeMenuItems
node lv=2 id=68 art=68 nm=far.PluginStartupInfo
node lv=2 id=588 art=582 nm=far.RunDefaultScript
node lv=2 id=282 art=282 nm=far.Show
node lv=2 id=589 art=583 nm=far.SplitCmdLine
node lv=2 id=346 art=346 nm=far.Timer
node lv=3 id=352 art=352 nm=Properties
node lv=4 id=354 art=354 nm=Closed
node lv=4 id=350 art=350 nm=Enabled
node lv=4 id=351 art=351 nm=Interval
node lv=3 id=355 art=355 nm=Methods
node lv=4 id=357 art=357 nm=Close
node lv=3 id=356 art=356 nm=Events
node lv=4 id=353 art=353 nm=OnTimer
node lv=1 id=411 art=411 nm=Tables
node lv=2 id=57 art=57 nm=far.Flags
node lv=2 id=427 art=427 nm=far.Guids
node lv=1 id=84 art=84 nm="Structures"
node lv=2 id=314 art=314 nm=tCoord
node lv=2 id=295 art=295 nm=tFarDialogItem
node lv=2 id=293 art=293 nm=tFarListColors
node lv=2 id=579 art=573 nm=tFarTrueColorForeAndBack
node lv=2 id=90 art=90 nm=tFindData
node lv=2 id=120 art=120 nm=tInfoLine
node lv=2 id=187 art=187 nm=tInputRecord
node lv=2 id=313 art=313 nm=tMouseEventRecord
node lv=2 id=121 art=121 nm=tPanelMode
node lv=2 id=562 art=560 nm=tPluginMenuItem
node lv=2 id=85 art=85 nm=tPluginPanelItem
node lv=2 id=218 art=218 nm=tSystemTime
node lv=2 id=133 art=133 nm=ViewerInfo.CurMode
node lv=0 id=404 art=404 nm=Additional libraries
node lv=1 id=471 art=471 nm=bit64
node lv=2 id=473 art=473 nm=bit64.new
node lv=2 id=472 art=472 nm=bit64.type
node lv=1 id=405 art=405 nm=win
node lv=2 id=419 art=419 nm=Files and directories
node lv=3 id=480 art=480 nm=win.CopyFile
node lv=3 id=372 art=372 nm=win.CreateDir
node lv=3 id=361 art=361 nm=win.DeleteFile
node lv=3 id=436 art=436 nm=win.GetCurrentDir
node lv=3 id=460 art=460 nm=win.GetFileAttr
node lv=3 id=213 art=213 nm=win.GetFileInfo
node lv=3 id=362 art=362 nm=win.MoveFile
node lv=3 id=598 art=589 nm=win.OpenFile
node lv=4 id=602 art=593 nm=close
node lv=4 id=599 art=590 nm=read
node lv=4 id=600 art=591 nm=seek
node lv=4 id=601 art=592 nm=write
node lv=3 id=373 art=373 nm=win.RemoveDir
node lv=3 id=363 art=363 nm=win.RenameFile
node lv=3 id=437 art=437 nm=win.SetCurrentDir
node lv=3 id=469 art=469 nm=win.SetFileAttr
node lv=2 id=421 art=421 nm=Text related functions
node lv=3 id=274 art=274 nm=win.CompareString
node lv=3 id=394 art=394 nm=win.EnumSystemCodePages
node lv=3 id=391 art=391 nm=win.GetACP
node lv=3 id=392 art=392 nm=win.GetOEMCP
node lv=3 id=491 art=491 nm=win.lenW
node lv=3 id=370 art=370 nm=win.MultiByteToWideChar
node lv=3 id=256 art=256 nm=win.OemToUtf8
node lv=3 id=492 art=492 nm=win.subW
node lv=3 id=264 art=264 nm=win.Utf32ToUtf8
node lv=3 id=257 art=257 nm=win.Utf8ToOem
node lv=3 id=265 art=265 nm=win.Utf8ToUtf32
node lv=3 id=275 art=275 nm=win.wcscmp
node lv=3 id=500 art=500 nm=win.WideCharToMultiByte
node lv=2 id=422 art=422 nm=Time related functions
node lv=3 id=464 art=464 nm=win.Clock
node lv=3 id=465 art=465 nm=win.FileTimeToLocalFileTime
node lv=3 id=215 art=215 nm=win.FileTimeToSystemTime
node lv=3 id=525 art=523 nm=win.GetLocalTime
node lv=3 id=503 art=503 nm=win.GetSystemTime
node lv=3 id=217 art=217 nm=win.GetSystemTimeAsFileTime
node lv=3 id=216 art=216 nm=win.SystemTimeToFileTime
node lv=2 id=423 art=423 nm=Various functions
node lv=3 id=574 art=569 nm=win.EnsureColorsAreInverted
node lv=3 id=565 art=563 nm=win.ExpandEnv
node lv=3 id=51 art=51 nm=win.ExtractKey
node lv=3 id=595 art=586 nm=win.ExtractKeyEx
node lv=3 id=359 art=359 nm=win.GetConsoleScreenBufferInfo
node lv=3 id=393 art=393 nm=win.GetCPInfo
node lv=3 id=152 art=152 nm=win.GetEnv
node lv=3 id=315 art=315 nm=win.GetVirtualKeys
node lv=3 id=456 art=456 nm=win.IsProcess64bit
node lv=3 id=192 art=192 nm=win.SetEnv
node lv=3 id=435 art=435 nm=win.Sleep
node lv=3 id=568 art=566 nm=win.system
node lv=3 id=424 art=424 nm=win.Uuid
node lv=1 id=406 art=406 nm=luautf8
node lv=2 id=407 art=407 nm=utf8.dump
node lv=2 id=408 art=408 nm=utf8.format
node lv=2 id=409 art=409 nm=utf8.rep
node lv=2 id=410 art=410 nm=utf8.utf8valid
node lv=0 id=496 art=496 nm=Far2M-specific functions
node lv=1 id=583 art=577 nm=actl
node lv=2 id=527 art=525 nm=actl.WinPortBackend
node lv=1 id=584 art=578 nm=export
node lv=2 id=592 art=584 nm=export.GetLinkTarget
node lv=2 id=582 art=447 nm=export.MayExitFAR
node lv=1 id=585 art=579 nm=far
node lv=2 id=453 art=453 nm=far.BackgroundTask
node lv=2 id=509 art=505 nm=far.ClearPluginCache
node lv=2 id=452 art=452 nm=far.DispatchInterThreadCalls
node lv=2 id=451 art=451 nm=far.DisplayNotification
node lv=2 id=449 art=449 nm=far.Execute
node lv=2 id=450 art=450 nm=far.ExecuteLibrary
node lv=2 id=501 art=501 nm=far.GetFileEncoding
node lv=2 id=569 art=526 nm=far.GetFileGroup
node lv=2 id=570 art=56 nm=far.GetFileOwner
node lv=2 id=519 art=517 nm=far.GetMyHome
node lv=2 id=476 art=476 nm=far.GetPluginId
node lv=2 id=563 art=561 nm=far.GetPluginGlobalInfo
node lv=2 id=517 art=515 nm=far.InMyCache
node lv=2 id=516 art=514 nm=far.InMyConfig
node lv=2 id=518 art=516 nm=far.InMyTemp
node lv=2 id=459 art=459 nm=far.Log
node lv=2 id=590 art=583 nm=far.SplitCmdLine
node lv=2 id=597 art=588 nm=far.SudoCRCall
node lv=2 id=564 art=562 nm=far.WriteConsole
node lv=1 id=586 art=580 nm=panel
node lv=2 id=572 art=567 nm=panel.SetPanelLocation
node lv=1 id=587 art=581 nm=win
node lv=2 id=575 art=569 nm=win.EnsureColorsAreInverted
node lv=0 id=128 art=128 nm=LuaFAR C-interface
node lv=1 id=183 art=183 nm=Mediator functions
node lv=2 id=158 art=158 nm=LF_ClosePanel
node lv=2 id=159 art=159 nm=LF_Compare
node lv=2 id=160 art=160 nm=LF_Configure
node lv=2 id=161 art=161 nm=LF_DeleteFiles
node lv=2 id=162 art=162 nm=LF_ExitFAR
node lv=2 id=368 art=368 nm=LF_FreeCustomData
node lv=2 id=163 art=163 nm=LF_FreeFindData
node lv=2 id=164 art=164 nm=LF_FreeVirtualFindData
node lv=2 id=366 art=366 nm=LF_GetCustomData
node lv=2 id=165 art=165 nm=LF_GetFiles
node lv=2 id=166 art=166 nm=LF_GetFindData
node lv=2 id=168 art=168 nm=LF_GetOpenPanelInfo
node lv=2 id=169 art=169 nm=LF_GetPluginInfo
node lv=2 id=170 art=170 nm=LF_GetVirtualFindData
node lv=2 id=171 art=171 nm=LF_MakeDirectory
node lv=2 id=448 art=448 nm=LF_MayExitFAR
node lv=2 id=173 art=173 nm=LF_Open
node lv=2 id=172 art=172 nm=LF_OpenFilePlugin
node lv=2 id=222 art=222 nm=LF_ProcessDialogEvent
node lv=2 id=174 art=174 nm=LF_ProcessEditorEvent
node lv=2 id=175 art=175 nm=LF_ProcessEditorInput
node lv=2 id=176 art=176 nm=LF_ProcessPanelEvent
node lv=2 id=177 art=177 nm=LF_ProcessHostFile
node lv=2 id=178 art=178 nm=LF_ProcessKey
node lv=2 id=318 art=318 nm=LF_ProcessSynchroEvent
node lv=2 id=179 art=179 nm=LF_ProcessViewerEvent
node lv=2 id=180 art=180 nm=LF_PutFiles
node lv=2 id=181 art=181 nm=LF_SetDirectory
node lv=2 id=182 art=182 nm=LF_SetFindList
node lv=1 id=184 art=184 nm=Service functions
node lv=2 id=341 art=341 nm=LF_Gsub
node lv=2 id=129 art=129 nm=LF_LuaOpen
node lv=2 id=155 art=155 nm=LF_LuaClose
node lv=2 id=156 art=156 nm=LF_Message
node lv=2 id=385 art=385 nm=LF_InitOtherLuaState
node lv=2 id=130 art=130 nm=LF_RunDefaultScript
node lv=0 id=194 art=194 nm=Third party software used
node lv=1 id=196 art=196 nm=Lua
node lv=1 id=251 art=251 nm=LuaUtf8

article id=2 dt=Text ctime=0 mtime=3892648982 nm=far.CmpName
#_Result = far.CmpName (Mask, Name, Flags)
#_
#_**Parameters:**
#_  Mask:  string
#_  Name:  string
#_  Flags: flags  (combination of PN_SKIPPATH, PN_CASEINSENSITIVE
#_                 and PN_SHOWERRORMESSAGE; default=0)
#_
#_**Returns:**
#_  Result: boolean
#_
#_**Far API used:**
#_  FSF.ProcessName
#_
#_@@@
#_

article id=3 dt=Text ctime=0 mtime=0 nm=far.CopyToClipboard
#_result = far.CopyToClipboard (str)
#_
#_**Parameters:**
#_  str: string
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  FSF.CopyToClipboard
#_
#_
#_@@@
#_

article id=4 dt=Text ctime=0 mtime=3902575538 nm=panel.ClosePanel
#_result = panel.ClosePanel (handle [, dir])
#_
#_**Parameters:**
#_  handle:  panel handle
#_  dir:     string (defaults to ".")
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Far API used:**
#_  Control, FCTL_CLOSEPLUGIN
#_
#_@@@
#_

article id=5 dt=Text ctime=0 mtime=3916571718 nm=panel.GetCmdLine
#_result = panel.GetCmdLine ([handle])
#_
#_**Parameters:**
#_  handle: panel handle
#_
#_**Returns:**
#_  result: string (or nil)
#_
#_**Far API used:**
#_  Control, FCTL_GETCMDLINE
#_
#_
#_@@@
#_

article id=6 dt=Text ctime=0 mtime=3916571742 nm=panel.GetCmdLinePos
#_pos = panel.GetCmdLinePos ([handle])
#_
#_**Parameters:**
#_  handle: panel handle
#_
#_**Returns:**
#_  pos: 1-based position (or nil)
#_
#_**Far API used:**
#_  Control, FCTL_GETCMDLINEPOS
#_
#_@@@
#_

article id=7 dt=Text ctime=0 mtime=3916571945 nm=panel.GetPanelInfo
#_tPanelInfo = panel.GetPanelInfo (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  tPanelInfo: table, or nil
#_    fields of tPanelInfo:
#_      OwnerID:             integer (SysID of the plugin)
#_      PluginHandle:        light userdata, or nil
#_      PanelType:           integer
#_      PanelRect:           table (fields: left, top, right, bottom)
#_      ItemsNumber:         integer
#_      SelectedItemsNumber: integer
#_      CurrentItem:         1-based integer
#_      TopPanelItem:        1-based integer
#_      ViewMode:            integer
#_      SortMode:            integer
#_      Flags:               flags
#_      OwnerHandle:         light userdata, or nil
#_
#_**Note 1:**
#_  For plugin panels *OwnerHandle* is a handle of the plugin that owns
#_  the panel. It can be used e.g. in `far.GetPluginInformation`.
#_
#_**Far API used:**
#_  Control, FCTL_GETPANELINFO, PanelInfo
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_

article id=9 dt=Text ctime=0 mtime=3916572173 nm=panel.InsertCmdLine
#_result = panel.InsertCmdLine (handle, str)
#_
#_**Parameters:**
#_  handle: panel handle, or nil
#_  str:    string
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_INSERTCMDLINE
#_
#_
#_@@@
#_

article id=10 dt=Text ctime=0 mtime=3916572229 nm=panel.RedrawPanel
#_result = panel.RedrawPanel (handle, whatpanel [, redrawinfo])
#_
#_**Parameters:**
#_  handle:     panel handle, or nil
#_  whatpanel:  1=active panel; 0=passive panel;
#_  redrawinfo: table with the following fields:
#_                CurrentItem  : integer (1-based)
#_                TopPanelItem : integer (1-based)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_REDRAWPANEL
#_
#_
#_@@@
#_

article id=11 dt=Text ctime=0 mtime=3916572339 nm=panel.SetCmdLine
#_result = panel.SetCmdLine (handle, str)
#_
#_**Parameters:**
#_  handle: panel handle, or nil
#_  str:    string
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_SETCMDLINE
#_
#_
#_@@@
#_

article id=12 dt=Text ctime=0 mtime=3916572361 nm=panel.SetCmdLinePos
#_result = panel.SetCmdLinePos (handle, pos)
#_
#_**Parameters:**
#_  handle: panel handle, or nil
#_  pos:    1-based integer
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_SETCMDLINEPOS
#_
#_@@@
#_

article id=13 dt=Text ctime=0 mtime=3916572489 nm=panel.SetPanelDirectory
#_result = panel.SetPanelDirectory (handle, whatpanel, dir)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_  dir:       string
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_SETPANELDIR
#_
#_@@@
#_

article id=14 dt=Text ctime=0 mtime=3916572584 nm=panel.SetSelection
#_result = panel.SetSelection (handle, whatpanel, items, selection)
#_
#_**Parameters:**
#_  handle:       panel handle, or nil
#_  whatpanel:    1=active panel, 0=passive panel
#_  items:        integer (1-based item index),
#_                or table (array of item indexes)
#_  selection:    boolean
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_GETPANELINFO, FCTL_BEGINSELECTION,
#_  FCTL_SETSELECTION, FCTL_ENDSELECTION
#_
#_@@@
#_
#_

article id=15 dt=Text ctime=0 mtime=3853512537 nm=panel.SetUserScreen
#_result = panel.SetUserScreen ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_SETUSERSCREEN
#_
#_@@@
#_

article id=16 dt=Text ctime=0 mtime=3916572684 nm=panel.SetViewMode
#_result = panel.SetViewMode (handle, whatpanel, mode)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_  mode:      integer (0...9)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_SETVIEWMODE
#_
#_
#_@@@
#_

article id=17 dt=Text ctime=0 mtime=3916572705 nm=panel.UpdatePanel
#_result = panel.UpdatePanel (handle, whatpanel [, keepselection])
#_
#_**Parameters:**
#_  handle:         panel handle, or nil
#_  whatpanel:      1=active panel; 0=passive panel;
#_  keepselection:  boolean, defaults to false
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_UPDATEPANEL
#_
#_
#_@@@
#_

article id=20 dt=Text ctime=0 mtime=3901550710 nm=far.Dialog
#_result = far.Dialog (Guid,X1,Y1,X2,Y2,HelpTopic,Items,Flags,DlgProc,Param)
#_
#_**Parameters:**
#_  Same parameters as in `far.DialogInit`
#_
#_**Returns:**
#_  result: 1-based integer (or nil in case of failure)
#_
#_**Note:**
#_  The function updates the *Items* array to the values
#_  the dialog items have at the moment of dialog closing.
#_
#_**Far API used:**
#_  DialogInitV3, DialogRun, DialogFree
#_
#_@@@
#_[tFarDialogItem]: 295.html
#_[far.DialogInit]: 378.html
#_

article id=21 dt=Text ctime=0 mtime=3851868780 nm=editor.Editor
#_result = editor.Editor (FileName, Title, X1, Y1, X2, Y2,
#_                        Flags, StartLine, StartChar, CodePage)
#_
#_**Parameters:**
#_  FileName:  string
#_  Title:     string,  or nil (default = FileName)
#_  X1:        integer, or nil (default = 0)
#_  Y1:        integer, or nil (default = 0)
#_  X2:        integer, or nil (default = -1)
#_  Y2:        integer, or nil (default = -1)
#_  Flags:     flags,   or nil (default = 0)
#_  StartLine: integer, or nil (1-based; default = -1)
#_  StartChar: integer, or nil (1-based; default = -1)
#_  CodePage:  integer, or nil (default = CP_AUTODETECT)
#_
#_**Returns:**
#_  result: integer
#_
#_**Far API used:**
#_  Editor
#_
#_@@@
#_
#_

article id=22 dt=Text ctime=0 mtime=3914843656 nm=editor.AddColor
#_result = editor.AddColor (EditorId, StringNumber, StartPos, EndPos,
#_                          Flags, Color)
#_
#_**Parameters:**
#_  EditorId     : integer, or nil
#_  StringNumber : integer, or nil
#_  StartPos     : integer (1-based)
#_  EndPos       : integer (1-based)
#_  Flags        : flags (defaults to 0)
#_  Color        : table or integer (defaults to 0x0F)
#_
#_**Returns:**
#_  result : boolean
#_
#_**Note 1:**
#_  If *Color* parameter is a table, it may have the following fields:
#_    Attr : integer (optional; only bits <15:8> matter)
#_    Fore : integer (foreground RGB color)
#_    Back : integer (background RGB color)
#_
#_**Note 2:**
#_  If argument *Color* is zero then the function uses value 0x0F
#_  to prevent color deletion (as Far API treats 0 as the command
#_  to delete the color)
#_
#_**Far API used:**
#_  EditorControl, ECTL_ADDCOLOR, ECTL_ADDTRUECOLOR
#_
#_@@@
#_
#_

article id=23 dt=Text ctime=0 mtime=3889634168 nm=editor.DeleteBlock
#_result = editor.DeleteBlock (EditorId)
#_
#_**Parameters:**
#_  EditorId     : integer, or nil
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_DELETEBLOCK
#_
#_@@@
#_

article id=24 dt=Text ctime=0 mtime=3889634172 nm=editor.DeleteChar
#_result = editor.DeleteChar (EditorId)
#_
#_**Parameters:**
#_  EditorId     : integer, or nil
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_DELETECHAR
#_
#_@@@
#_

article id=25 dt=Text ctime=0 mtime=3889634191 nm=editor.DeleteString
#_result = editor.DeleteString (EditorId)
#_
#_**Parameters:**
#_  EditorId     : integer, or nil
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_DELETESTRING
#_
#_@@@
#_

article id=27 dt=Text ctime=0 mtime=3889634200 nm=editor.ExpandTabs
#_result = editor.ExpandTabs (EditorId, [StringNumber])
#_
#_**Parameters:**
#_  EditorId:     integer, or nil
#_  StringNumber: integer (1-based)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_EXPANDTABS
#_
#_@@@
#_

article id=28 dt=Text ctime=0 mtime=3889634211 nm=editor.GetColor
#_colordata = editor.GetColor (EditorId, StringNumber, ColorItem)
#_
#_**Parameters:**
#_  EditorId:     integer, or nil
#_  StringNumber: integer (1-based), or nil
#_  ColorItem:    integer (1-based)
#_
#_**Returns:**
#_  colordata:    table (or nil)
#_                  StartPos:     integer
#_                  EndPos:       integer
#_                  BaseColor:    integer
#_                  TrueFore:     integer, or nil
#_                  TrueBack:     integer, or nil
#_
#_**Far API used:**
#_  EditorControl, ECTL_GETTRUECOLOR
#_

article id=29 dt=Text ctime=0 mtime=3906196260 nm=editor.GetInfo
#_Info = editor.GetInfo (EditorId)
#_
#_**Parameters:**
#_  EditorId     : integer, or nil
#_
#_**Returns:**
#_  Info: table, or nil
#_    Info fields:
#_      EditorID:              integer
#_      FileName:              string
#_      WindowSizeX:           integer
#_      WindowSizeY:           integer
#_      TotalLines:            integer
#_      CurLine:               integer, 1-based
#_      CurPos:                integer, 1-based
#_      CurTabPos:             integer, 1-based
#_      TopScreenLine:         integer, 1-based
#_      LeftPos:               integer, 1-based
#_      Overtype:              integer
#_      BlockType:             integer
#_      BlockStartLine:        integer, 1-based
#_      Options:               integer
#_      TabSize:               integer
#_      BookmarkCount:         integer
#_      SessionBookmarkCount:  integer
#_      CurState:              integer
#_      CodePage:              integer
#_
#_**Far API used:**
#_  EditorControl, ECTL_GETINFO
#_
#_@@@
#_

article id=30 dt=Text ctime=0 mtime=3889634229 nm=editor.GetSelection
#_**Note:**
#_--This function does not have a prototype in Far API.
#_
#_Info = editor.GetSelection (EditorId)
#_
#_**Parameters:**
#_  EditorId     : integer, or nil
#_
#_**Returns:**
#_  Info: table, or nil
#_    Info fields:
#_      BlockType: integer
#_      StartLine: integer, 0-based
#_      StartPos:  integer, 0-based
#_      EndLine:   integer, 0-based
#_      EndPos:    integer, 0-based (can be -1)
#_
#_**Far API used:**
#_  EditorControl, ECTL_GETINFO, ECTL_SETPOSITION, ECTL_GETSTRING
#_
#_@@@
#_
#_

article id=31 dt=Text ctime=0 mtime=3921834327 nm=editor.GetString
#_**Note:**
#_  This function is an extension over its prototype in Far API.
#_
#_LineInfo = editor.GetString (EditorId, StringNumber, Mode)
#_    or
#_StringText, StringEOL = editor.GetString (EditorId, StringNumber, Mode)
#_
#_**Parameters:**
#_  EditorId:     integer, or nil
#_  StringNumber: integer, 1-based (default=0)
#_  Mode:         integer (0,1,2,3; default=0)
#_
#_**Returns:**
#_  LineInfo: table (Mode<2), or 2 strings (Mode>=2), or nil
#_    fields of LineInfo:
#_      StringNumber: integer, 1-based
#_      StringText:   string
#_      StringEOL:    string
#_      StringLength: integer
#_      SelStart:     integer, 1-based
#_      SelEnd:       integer, 1-based
#_
#_**Description:**
#_  The function's behavior depends on its *Mode* argument:
#_  Mode:  0 = returns: table LineInfo;            changes current position: no
#_         1 = returns: table LineInfo;            changes current position: yes
#_         2 = returns: StringText,StringEOL;      changes current position: yes
#_         3 = returns: StringText,StringEOL;      changes current position: no
#_         4 = returns: SelStart,SelEnd,StringLength; changes cur. position: no
#_
#_  Modes 1 and 2 have a side effect: the current line position in the Editor
#_  is set to *StringNumber*.
#_
#_**Far API used:**
#_  EditorControl, ECTL_GETINFO, ECTL_SETPOSITION, ECTL_GETSTRING
#_
#_@@@
#_

article id=32 dt=Text ctime=0 mtime=3889634275 nm=editor.InsertString
#_result = editor.InsertString (EditorId, [indent])
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  indent:   boolean, defaults to false
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_INSERTSTRING
#_
#_@@@
#_

article id=33 dt=Text ctime=0 mtime=3889634284 nm=editor.InsertText
#_result = editor.InsertText (EditorId, text [, redraw])
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  text:     string
#_  redraw:   boolean (default=false)
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_INSERTTEXT
#_
#_@@@
#_

article id=36 dt=Text ctime=0 mtime=3889634324 nm=editor.ProcessInput
#_result = editor.ProcessInput (EditorId, Input)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  Input:    table `tInputRecord`.
#_         (Field *EventType* is mandatory, other fields
#_         are optional. If some field is missing, the default
#_         value of 0/false is used, except for *wRepeatCount*
#_         that defaults to 1).
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_PROCESSINPUT
#_
#_@@@
#_[tInputRecord]: 187.html
#_

article id=37 dt=Text ctime=0 mtime=3889634338 nm=editor.Quit
#_result = editor.Quit (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_QUIT
#_
#_@@@
#_

article id=38 dt=Text ctime=0 mtime=3889634342 nm=editor.ReadInput
#_Info = editor.ReadInput (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  Info: table `tInputRecord`, or nil
#_
#_**Far API used:**
#_  EditorControl, ECTL_READINPUT
#_
#_@@@
#_[tInputRecord]: 187.html
#_

article id=39 dt=Text ctime=0 mtime=3889634350 nm=editor.RealToTab
#_result = editor.RealToTab (EditorId, StringNumber, SrcPos)
#_
#_**Parameters:**
#_  EditorId:     integer, or nil
#_  StringNumber: integer (1-based), or nil
#_  SrcPos:       integer (1-based)
#_
#_**Returns:**
#_  result: integer (1-based), or nil
#_
#_**Far API used:**
#_  EditorControl, ECTL_REALTOTAB
#_
#_
#_@@@
#_

article id=40 dt=Text ctime=0 mtime=3889634357 nm=editor.Redraw
#_result = editor.Redraw (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_REDRAW
#_
#_@@@
#_

article id=41 dt=Text ctime=0 mtime=3889634364 nm=editor.SaveFile
#_result = editor.SaveFile (EditorId, FileName, FileEOL, CodePage)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  FileName: string, or nil
#_  FileEOL:  string, or nil
#_  CodePage: integer, or nil
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_SAVEFILE
#_
#_@@@
#_

article id=42 dt=Text ctime=0 mtime=3889634446 nm=editor.Select
#_result = editor.Select (EditorId, SelectData)
#_  or
#_result = editor.Select (EditorId, BlockType, BlockStartLine, BlockStartPos,
#_                        BlockWidth, BlockHeight)
#_
#_**Parameters:**
#_  EditorId:   integer, or nil
#_  SelectData: table
#_    fields of SelectData:
#_      BlockType:      flag
#_        (either of: "BTYPE_NONE", "BTYPE_STREAM", "BTYPE_COLUMN")
#_      BlockStartLine: integer, 1-based
#_      BlockStartPos:  integer, 1-based
#_      BlockWidth:     integer
#_      BlockHeight:    integer
#_
#_  Parameters of the 2-nd function variant correspond to fields
#_  of the *SelectData* table.
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_SELECT
#_
#_@@@
#_

article id=43 dt=Text ctime=0 mtime=3889634482 nm=editor.SetPosition
#_result = editor.SetPosition (EditorId, PosData)
#_  or
#_result = editor.SetPosition (EditorId, CurLine, CurPos, CurTabPos,
#_                             TopScreenLine, LeftPos, Overtype)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  PosData:  table
#_    fields of PosData:
#_      CurLine:       integer, 1-based
#_      CurPos:        integer, 1-based
#_      CurTabPos:     integer, 1-based
#_      TopScreenLine: integer, 1-based
#_      LeftPos:       integer, 1-based
#_      Overtype:      integer
#_
#_  Parameters of the 2-nd function variant correspond to fields
#_  of the *PosData* table.
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_SETPOSITION
#_
#_@@@
#_

article id=44 dt=Text ctime=0 mtime=3889634494 nm=editor.SetString
#_result = editor.SetString (EditorId, StringNumber, StringText, StringEOL)
#_
#_**Parameters:**
#_  EditorId:     integer, or nil
#_  StringNumber: integer, 1-based (default=0)
#_  StringText:   string
#_  StringEOL:    string, or nil
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_SETSTRING
#_
#_@@@
#_

article id=45 dt=Text ctime=0 mtime=3889634504 nm=editor.SetTitle
#_result = editor.SetTitle (EditorId, [Title])
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  Title:    string, or nil
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_SETTITLE
#_
#_@@@
#_
#_

article id=48 dt=Text ctime=0 mtime=3889634510 nm=editor.TabToReal
#_result = editor.TabToReal (EditorId, StringNumber, SrcPos)
#_
#_**Parameters:**
#_  EditorId:     integer, or nil
#_  StringNumber: integer (1-based), or nil
#_  SrcPos:       integer (1-based)
#_
#_**Returns:**
#_  result: integer (1-based), or nil
#_
#_**Far API used:**
#_  EditorControl, ECTL_TABTOREAL
#_
#_
#_@@@
#_

article id=51 dt=Text ctime=0 mtime=0 nm=win.ExtractKey
#_result = win.ExtractKey ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result: string, or nil
#_
#_**Description:**
#_  If a key was pressed, it is extracted, converted to a string and
#_  returned. Otherwise, a nil is returned.
#_
#_**Windows API used:**
#_  GetStdHandle, PeekConsoleInput, ReadConsoleInput
#_
#_@@@
#_

article id=53 dt=Text ctime=0 mtime=3478185727 nm=far.GetDirList
#_list = far.GetDirList (dir)
#_
#_**Parameters:**
#_  dir:  string
#_
#_**Returns:**
#_  list: array of `tFindData` tables, or nil
#_
#_**Far API used:**
#_  GetDirList, FreeDirList
#_
#_
#_@@@
#_[tFindData]: 90.html
#_

article id=56 dt=Text ctime=0 mtime=3892753739 nm=far.GetFileOwner
#_result = far.GetFileOwner (Computer, Name)
#_
#_**Parameters:**
#_  Computer: string, or nil
#_  Name:     string
#_
#_**Returns:**
#_  result:   string, or nil
#_
#_**Far API used:**
#_  FSF.GetFileOwner
#_
#_@@@
#_

article id=57 dt=Text ctime=0 mtime=3891885012 nm=far.Flags
#_far.Flags
#_
#_**Description:**
#_  A table containing values of various FAR and Windows console
#_  constants keyed by their string names. It includes constants
#_  defined in the following Far2M files:
#_  - farplug-wide.h
#_  - farcolor.h
#_  - farkeys.h
#_
#_**Example of use:**
#_  local F = far.Flags
#_  far.AdvControl ("ACTL_SETARRAYCOLOR",
#_      { Flags="FCLR_REDRAW", StartIndex=F.COL_EDITORTEXT,
#_        0x4E, 0xE4
#_      })
#_
#_**Example of use:**
#_  local F = far.Flags
#_  editor.ProcessKey (F.KEY_CTRLEND)
#_

article id=58 dt=Text ctime=0 mtime=3907444598 nm=far.GetMsg
#_msg = far.GetMsg (MsgId [, SysID])
#_
#_**Parameters:**
#_  MsgId:  integer
#_  SysID:  integer (plugin ID; default: calling plugin ID)
#_
#_**Returns:**
#_  msg:    string, or nil
#_
#_**Note:**
#_  For OEM plugins nil is returned even if MsgId is valid.
#_
#_**Far API used:**
#_  GetMsg
#_
#_@@@
#_

article id=59 dt=Text ctime=0 mtime=0 nm=far.GetNumberOfLinks
#_result = far.GetNumberOfLinks (Name)
#_
#_**Parameters:**
#_  Name: string
#_
#_**Returns:**
#_  result: integer
#_
#_**Far API used:**
#_  FSF.GetNumberOfLinks
#_
#_@@@
#_

article id=60 dt=Text ctime=0 mtime=3907597121 nm=far.GetPluginDirList
#_list = far.GetPluginDirList (handle, Dir)
#_
#_**Parameters:**
#_  handle:       panel handle
#_  Dir:          string
#_
#_**Returns:**
#_  list:         array of `tPluginPanelItem`
#_
#_**Far API used:**
#_  GetPluginDirList, FreePluginDirList
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_

article id=62 dt=Text ctime=0 mtime=3890940945 nm=far.InputBox
#_result = far.InputBox (Id, Title, Prompt, HistoryName, SrcText,
#_                       DestLength, HelpTopic, Flags)
#_
#_**Parameters:**
#_  Id:          any value; currently ignored
#_  Title:       string, or nil
#_  Prompt:      string, or nil
#_  HistoryName: string, or nil
#_  SrcText:     string, or nil
#_  DestLength:  integer, or nil
#_  HelpTopic:   string, or nil
#_  Flags:       flags combination, or nil
#_    (default = FIB_ENABLEEMPTY|FIB_BUTTONS|FIB_NOAMPERSAND)
#_
#_**Returns:**
#_  result: string, or nil
#_
#_**Far API used:**
#_  InputBox
#_
#_
#_@@@
#_

article id=63 dt=Text ctime=0 mtime=0 nm=far.KeyToName
#_Name = far.KeyToName (Key)
#_
#_**Parameters:**
#_  Key: integer
#_
#_**Returns:**
#_  Name: string, or nil
#_
#_**Far API used:**
#_  FSF.FarKeyToName
#_
#_@@@
#_

article id=64 dt=Text ctime=0 mtime=3892050591 nm=far.Menu
#_Item, Position = far.Menu (Properties, Items [, BreakKeys])
#_
#_**Parameters:**
#_  Properties: table
#_    fields of Properties (every field is optional):
#_      X:            integer
#_      Y:            integer
#_      MaxHeight:    integer
#_      Flags:        flags combination
#_      Title:        string
#_      Bottom:       string
#_      HelpTopic:    string
#_      SelectIndex:  integer (1-based)
#_
#_  Items: table (array of menu items)
#_      a menu item is a table;
#_      fields of a menu item (every field is optional):
#_        text:         string
#_        checked:      boolean, or string
#_        separator:    boolean
#_        disable:      boolean
#_        grayed:       boolean
#_        hidden:       boolean
#_        selected:     boolean
#_        AccelKey:     integer
#_
#_  BreakKeys:
#_      Either **table** (array of break key items)
#_        a break key item is a table;
#_        fields of a break key item:
#_          BreakKey:     string (see **NOTE 2**)
#_      Or **string** (space delimited sequence of keys)
#_
#_**Returns:**
#_  Item:     table   Either the selected element of *Items* array (if *Enter* was pressed)
#_                    or an element of *BreakKeys* array (if a corresponding break key was
#_                    pressed). If a break key was pressed and *BreakKeys* argument was a string
#_                    then the returned table is created by *far.Menu* function.
#_            nil     The menu was cancelled by the user.
#_
#_  Position: integer Position of the **selected** item at the moment of closing the menu.
#_            nil     The menu was cancelled by the user.
#_
#_**NOTE 1**
#_  Properties.SelectIndex=N is equivalent to Items[N].selected=true
#_  but it has a higher priority.
#_
#_**NOTE 2**
#_  Example of constructing a BreakKey string:
#_  **BreakKey="AS+DELETE"**, where:
#_    *AS*     - stands for AltShift
#_    *+*      - separates key modifiers from key
#_    *DELETE* - `virtual key` *VK_DELETE* (prefix *VK_* is removed).
#_
#_  Key names used in Far macros are also acceptable, e.g. **BreakKey="AltShiftDel"**
#_
#_**NOTE 3**
#_  The first return value (*Item*) can be used by the program for performing
#_  the item-specific action. To do so, the program can put some specific field(s)
#_  into each element of *Items* and *BreakKeys* tables. For example, such fields
#_  can be "action", "filename", etc.
#_
#_**Far API used:**
#_  `Menu`
#_
#_@@@
#_[virtual key]: https://api.farmanager.com/ru/winapi/virtualkeycodes.html
#_

article id=65 dt=Text ctime=0 mtime=3916511554 nm=far.Message
#_result = far.Message (Msg, [Title], [Buttons], [Flags], [HelpTopic], [Id])
#_
#_**Parameters:**
#_  *Msg:*       any type (usually: string)
#_
#_  *Title:*     string
#_
#_  *Buttons:*   string
#_    - button captions are separated by semicolons
#_    - default value is one button "OK"
#_    - empty string means no buttons
#_    - if *Buttons* starts with a semicolon (;), then it must be
#_      one of the following predefined strings (case insensitive):
#_        ";Ok", ";OkCancel", ";AbortRetryIgnore", ";YesNo",
#_        ";YesNoCancel", ";RetryCancel".
#_
#_  *Flags:*     string
#_    it is checked if some predefined letters are present:
#_      'w' stands for FMSG_WARNING
#_      'e' stands for FMSG_ERRORTYPE
#_      'k' stands for FMSG_KEEPBACKGROUND
#_      'l' stands for FMSG_LEFTALIGN
#_      'n' stands for "no wrapping of long lines"
#_
#_  *HelpTopic:* string
#_
#_  *Id:*        string (GUID); default=all zero GUID
#_
#_**Returns:**
#_  *result:* integer (1-based)
#_
#_**Note 1:**
#_  Before calling FAR function *Message*, the function:
#_    a) wraps long lines (unless the flag 'n' is present), and
#_    b) limits the maximal number of lines and buttons.
#_
#_**Note 2:**
#_  As in the original `Message` function, every line in **Msg** parameter
#_  that starts with \1 is treated as a single delimiter line;
#_  a line starting with \2 as a double delimiter line.
#_
#_**Far API used:**
#_  MessageV3
#_
#_@@@
#_

article id=66 dt=Text ctime=0 mtime=0 nm=far.NameToKey
#_Key = far.NameToKey (Name)
#_
#_**Parameters:**
#_  Name: string
#_
#_**Returns:**
#_  Key: integer, or nil
#_
#_**Far API used:**
#_  FSF.FarNameToKey
#_
#_@@@
#_

article id=67 dt=Text ctime=0 mtime=0 nm=far.PasteFromClipboard
#_result = far.PasteFromClipboard ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result: string, or nil
#_
#_**Far API used:**
#_  FSF.PasteFromClipboard, FSF.DeleteBuffer
#_
#_
#_@@@
#_

article id=68 dt=Text ctime=0 mtime=3875448672 nm=far.PluginStartupInfo
#_Info = far.PluginStartupInfo ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  Info: table
#_    fields of Info:
#_      ModuleName:   string
#_      ModuleDir:    string (no trailing slash)
#_      ShareDir:     string (no trailing slash)
#_      ModuleNumber: light userdata
#_      RootKey:      string
#_      PluginId:     number
#_
#_**Description:**
#_  Returns a table containing the data elements of the
#_  *PluginStartupInfo* struct that plugin obtains when FAR call its
#_  function *SetStartupInfo*.
#_
#_  *ModuleDir* is a directory containing the plugin's binary
#_  *ShareDir* is a directory containing the plugin's Lua scripts
#_
#_@@@
#_

article id=69 dt=Text ctime=0 mtime=3884112552 nm=far.RestoreScreen
#_far.RestoreScreen (handle)
#_
#_**Parameters:**
#_  handle: userdata or nil (if nil, NULL is passed to Far)
#_
#_**Returns:**
#_  nothing
#_
#_**Far API used:**
#_  RestoreScreen
#_
#_@@@
#_

article id=70 dt=Text ctime=0 mtime=3884107900 nm=far.SaveScreen
#_handle = far.SaveScreen (X1, Y1, X2, Y2)
#_
#_**Parameters:**
#_  X1: integer, or nil
#_  Y1: integer, or nil
#_  X2: integer, or nil
#_  Y2: integer, or nil
#_
#_**Returns:**
#_  handle: userdata
#_
#_**Far API used:**
#_  SaveScreen
#_
#_@@@
#_

article id=71 dt=Text ctime=0 mtime=3921262307 nm=far.SendDlgMessage
#_Result = far.SendDlgMessage (hDlg, Msg, Param1, Param2)
#_    or
#_Result = hDlg:send (Msg, Param1, Param2)
#_
#_**Parameters:**
#_  hDlg:   userdata
#_  Msg:    flag
#_  Param1: integer (1-based where it is element index, 0-based otherwise)
#_  Param2: *(depends on Msg)*
#_
#_**Returns:**
#_  Result: *(depends on Msg)*
#_
#_**Details:**
#_
#_DM_CLOSE,
#_DM_EDITUNCHANGEDFLAG,
#_DM_GETCURSORSIZE,
#_DM_GETDROPDOWNOPENED,
#_DM_GETFOCUS,
#_DM_GETITEMDATA,
#_DM_LISTGETDATASIZE,
#_DM_LISTSORT,
#_DM_REDRAW,
#_DM_SET3STATE,
#_DM_SETCURSORSIZE,
#_DM_SETDROPDOWNOPENED,
#_DM_SETFOCUS,
#_DM_SETITEMDATA,
#_DM_SETMAXTEXTLENGTH,
#_DM_SETMOUSEEVENTNOTIFY,
#_DM_SHOWDIALOG,
#_DM_SHOWITEM,
#_DM_USER:
#_    Param2:  integer
#_    Result:  integer
#_
#_DM_ENABLE:
#_    Param2:  boolean or integer
#_    Result:  boolean
#_
#_DM_ENABLEREDRAW:
#_    Param1:  boolean or integer (default = -1)
#_    Param2:  ignored
#_    Result:  integer
#_
#_DM_SETCHECK,
#_DM_SETREADONLY:
#_    Param2:  boolean or integer
#_    Result:  integer
#_
#_DM_GETCHECK:
#_    Param2:  ignored
#_    Result:  false (means BSTATE_UNCHECKED)
#_              true (means BSTATE_CHECKED)
#_                 2 (means BSTATE_3STATE)
#_
#_DM_ADDHISTORY,
#_DM_LISTADDSTR,
#_DM_SETTEXT,
#_DM_SETTEXTPTR:
#_    Param2:  string
#_    Result:  integer
#_
#_DM_SETHISTORY:
#_    Param2:  string (optional; nil causes passing NULL to FAR)
#_    Result:  integer
#_
#_DM_LISTSETMOUSEREACTION:
#_    Param2:  flag
#_    Result:  integer
#_
#_DM_GETDIALOGINFO:
#_    Param2:  none
#_    Result:  table (Id: string, Owner: integer)
#_
#_DM_GETDLGRECT,
#_DM_GETEDITPOSITION,
#_DM_GETITEMPOSITION,
#_DM_GETSELECTION,
#_DM_LISTGETCURPOS,
#_DM_LISTGETTITLES,
#_DM_LISTINFO:
#_    Param2:  none
#_    Result:  table
#_
#_DM_GETCURSORPOS:
#_    Param2:  none
#_    Result:  table (fields X,Y; 0-based), or nil
#_
#_DM_GETTEXT,
#_DM_GETCONSTTEXTPTR:
#_    Param2:  none
#_    Result:  string
#_
#_DM_GETCOLOR:
#_    Param2:  none
#_    Result:  integer
#_
#_DM_SETCOLOR:
#_    Param2:  integer
#_    Result:  integer
#_
#_DM_KEY:
#_    Param2:  table (array of integers)
#_    Result:  integer
#_
#_DM_LISTADD,
#_DM_LISTSET:
#_    Param2:  table (array of tables)
#_    Result:  integer
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_LISTADD", id,
#_        { { Text="added line 1" },
#_          { Text="added line 2", Flags="LIF_CHECKED" } })
#_
#_DM_LISTDELETE:
#_    Param2:  table, or nil
#_    Result:  integer
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_LISTDELETE", id,
#_        { StartIndex=1, Count=2 })
#_
#_DM_LISTFINDSTRING:
#_    Param2:  table
#_    Result:  integer, or nil
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_FINDSTRING", id,
#_        { StartIndex=1, Pattern="File??.txt" })
#_
#_DM_LISTGETITEM:
#_    Param2:  integer (ItemIndex)
#_    Result:  table, or nil
#_
#_DM_LISTINSERT,
#_    Param2:  table
#_    Result:  integer, or nil
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_LISTINSERT", id,
#_        { Index=2, Text="Hello World", Flags="LIF_CHECKED" })
#_
#_DM_LISTUPDATE:
#_    Param2:  table
#_    Result:  boolean
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_LISTUPDATE", id,
#_        { Index=2, Text="Hello World", Flags="LIF_CHECKED" })
#_
#_DM_LISTSETCURPOS:
#_    Param2:  table
#_    Result:  integer
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_LISTSETCURPOS", id,
#_        { SelectPos=5, TopPos=2 })
#_    *Note:*
#_      Elements numbering is 1-based.
#_
#_DM_LISTSETTITLES:
#_    Param2:  table
#_    Result:  integer
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_LISTSETTITLES", id,
#_        { Title="hello", Bottom="goodbye" })
#_
#_DM_LISTGETDATA:
#_    Param2:  integer (1-based list index)
#_    Result:  either of
#_               - nil - if Far returned 0
#_               - light userdata (raw data pointer) - if alien data detected
#_               - value passed by the last DM_LISTSETDATA call
#_
#_DM_LISTSETDATA:
#_    Param2:  table
#_               ["Index"] - integer (1-based list index)
#_               ["Data"]  - any Lua value except nil
#_    Result:  integer (returned from Far)
#_
#_DM_GETDLGITEM:
#_    Param2:  table, or nil
#_    Result:  table
#_    *Note:*
#_      If Param2 is a table then it will be reused as an output table,
#_      i.e. its content will be modified.
#_
#_DM_SETDLGITEM:
#_    Param2:  table
#_    Result:  boolean
#_    *Note:*
#_      res = far.SendDlgMessage(hDlg, "DM_SETDLGITEM", numitem, item)
#_          *is equivalent to*
#_      res = `far.SetDlgItem`(hDlg, numitem, item)
#_
#_DM_MOVEDIALOG:
#_    Param1:  integer (0=relative, otherwise absolute coordinates)
#_    Param2:  table (fields X,Y; 0-based if Param1==0 otherwise 1-based)
#_    Result:  table (fields X,Y; 0-based)
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_MOVEDIALOG", 0, { X=5, Y=-2 })
#_
#_DM_RESIZEDIALOG:
#_    Param1:  0
#_    Param2:  table (fields X,Y; 0-based)
#_    Result:  table (fields X,Y; 0-based)
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_RESIZEDIALOG", 0, { X=70, Y=20 })
#_
#_DM_SETCURSORPOS:
#_    Param2:  table (fields X,Y; 0-based)
#_    Result:  boolean
#_
#_DM_SETITEMPOSITION:
#_    Param2:  table
#_    Result:  integer
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_SETITEMPOSITION", id,
#_        { Left=3, Top=3, Right=20, Bottom=5 })
#_
#_DM_SETSELECTION:
#_    Param2:  table
#_    Result:  integer
#_    *Note:* this function has much in common with `editor.Select`
#_
#_DM_SETCOMBOBOXEVENT:
#_    Param2:  flags combination
#_    Result:  integer
#_
#_DM_SETEDITPOSITION:
#_    Param2:  table
#_    Result:  integer
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_SETEDITPOSITION", id,
#_        { CurPos=3, Overtype=0 })
#_
#_DM_GETTRUECOLOR:
#_    returns a table (as in DM_SETTRUECOLOR)
#_
#_DM_SETTRUECOLOR:
#_    Param2:  table
#_      {
#_        Normal    = `tFarTrueColorForeAndBack`;
#_        Hilighted = `tFarTrueColorForeAndBack`;
#_        Frame     = `tFarTrueColorForeAndBack`;
#_      }
#_
#_DM_GETDLGDATA:
#_    Result: the dialog data (can be any Lua value)
#_
#_DM_SETDLGDATA:
#_    Param1: any Lua value
#_    Result: any Lua value (the previous data)
#_
#_**Far API used:**
#_  SendDlgMessage
#_
#_@@@
#_[far.GetDlgItem]: 564.html
#_[far.SetDlgItem]: 565.html
#_[editor.Select]: 42.html
#_[tInputRecord]: 187.html
#_
#_{dm_addhistory}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_addhistory.html
#_{dm_close}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_close.html
#_{dm_editunchangedflag}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_editunchangedflag.html
#_{dm_enableredraw}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_enableredraw.html
#_{dm_enable}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_enable.html
#_{dm_getcheck}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getcheck.html
#_{dm_getconsttextptr}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getconsttextptr.html
#_{dm_getcursorpos}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getcursorpos.html
#_{dm_getcursorsize}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getcursorsize.html
#_{dm_getdialoginfo}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getdialoginfo.html
#_{dm_getdialogtitle}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getdialogtitle.html
#_{dm_getdlgdata}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getdlgdata.html
#_{dm_getdlgitem}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getdlgitem.html
#_{dm_getdlgrect}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getdlgrect.html
#_{dm_getdropdownopened}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getdropdownopened.html
#_{dm_geteditposition}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_geteditposition.html
#_{dm_getfocus}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getfocus.html
#_{dm_getitemdata}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getitemdata.html
#_{dm_getitemposition}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getitemposition.html
#_{dm_getselection}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getselection.html
#_{dm_gettext}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_gettext.html
#_{dm_key}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_key.html
#_{dm_listaddstr}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listaddstr.html
#_{dm_listadd}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listadd.html
#_{dm_listdelete}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listdelete.html
#_{dm_listfindstring}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listfindstring.html
#_{dm_listgetcurpos}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listgetcurpos.html
#_{dm_listgetdatasize}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listgetdatasize.html
#_{dm_listgetdata}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listgetdata.html
#_{dm_listgetitem}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listgetitem.html
#_{dm_listgettitles}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listgettitles.html
#_{dm_listinfo}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listinfo.html
#_{dm_listinsert}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listinsert.html
#_{dm_listsetcurpos}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listsetcurpos.html
#_{dm_listsetdata}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listsetdata.html
#_{dm_listsettitles}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listsettitles.html
#_{dm_listset}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listset.html
#_{dm_listsort}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listsort.html
#_{dm_listupdate}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listupdate.html
#_{dm_movedialog}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_movedialog.html
#_{dm_redraw}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_redraw.html
#_{dm_resizedialog}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_resizedialog.html
#_{dm_set3state}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_set3state.html
#_{dm_setcheck}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setcheck.html
#_{dm_setcomboboxevent}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setcomboboxevent.html
#_{dm_setcursorpos}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setcursorpos.html
#_{dm_setcursorsize}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setcursorsize.html
#_{dm_setdlgdata}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setdlgdata.html
#_{dm_setdlgitem}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setdlgitem.html
#_{dm_setdropdownopened}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setdropdownopened.html
#_{dm_seteditposition}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_seteditposition.html
#_{dm_setfocus}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setfocus.html
#_{dm_sethistory}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_sethistory.html
#_{dm_setitemdata}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setitemdata.html
#_{dm_setitemposition}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setitemposition.html
#_{dm_setmaxtextlength}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setmaxtextlength.html
#_{dm_setinputnotify}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setmouseeventnotify.html
#_{dm_setmouseeventnotify}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setmouseeventnotify.html
#_{dm_setselection}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setselection.html
#_{dm_settextptr}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_settextptr.html
#_{dm_settext}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_settext.html
#_{dm_showdialog}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_showdialog.html
#_{dm_showitem}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_showitem.html
#_{dm_user}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_user.html
#_{senddlgmessage}: http://api.farmanager.com/ru/service_functions/senddlgmessage.html
#_{dn_btnclick}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_btnclick.html
#_{dn_dragged}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_dragged.html
#_{dn_drawdialog}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_drawdialog.html
#_{dn_drawdialogdone}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_drawdialogdone.html
#_{dn_dropdownopened}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_dropdownopened.html
#_{dn_controlinput}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_controlinput.html
#_

article id=74 dt=Text ctime=0 mtime=3480262815 nm=far.ShowHelp
#_result = far.ShowHelp (ModuleName, HelpTopic, Flags)
#_
#_**Parameters:**
#_  ModuleName: string
#_  HelpTopic:  string, or nil
#_  Flags:      flags combination
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  ShowHelp
#_
#_
#_@@@
#_

article id=76 dt=Text ctime=0 mtime=3910514944 nm=far.Text
#_far.Text (X, Y, Color, Str)
#_
#_**Parameters:**
#_  X:     integer
#_  Y:     integer
#_  Color: integer, or `tFarTrueColorForeAndBack` table
#_  Str:   string, or nil (if nil, NULL is passed to Far)
#_
#_**Returns:**
#_  nothing
#_
#_**Note:**
#_  All parameters are optional.
#_  far.Text() is equivalent to far.Text(0,0,0x0F,nil).
#_
#_**Far API used:**
#_  Text
#_
#_
#_@@@
#_

article id=77 dt=Text ctime=0 mtime=3482049266 nm=viewer.Viewer
#_result = viewer.Viewer (FileName, Title, X1, Y1, X2, Y2, Flags, CodePage)
#_
#_**Parameters:**
#_  FileName: string
#_  Title:    string  (defaults to FileName)
#_  X1:       integer (defaults to 0)
#_  Y1:       integer (defaults to 0)
#_  X2:       integer (defaults to -1)
#_  Y2:       integer (defaults to -1)
#_  Flags:    flags combination (defaults to 0)
#_  CodePage: integer (defaults to CP_AUTODETECT)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Viewer
#_
#_@@@
#_

article id=78 dt=Text ctime=0 mtime=0 nm=Common functions

article id=79 dt=Text ctime=0 mtime=0 nm=Editor functions

article id=80 dt=Text ctime=0 mtime=0 nm=Viewer functions

article id=81 dt=Text ctime=0 mtime=0 nm=Dialog functions

article id=82 dt=Text ctime=0 mtime=0 nm=Far Standard Functions

article id=83 dt=Text ctime=0 mtime=0 nm=Other functions

article id=84 dt=Text ctime=0 mtime=0 nm="Structures"

article id=85 dt=Text ctime=0 mtime=3921745261 nm=tPluginPanelItem
#_<markdown>
#_**`tPluginPanelItem`** is a table with the following predefined fields:
#_
#_      CreationTime:       number
#_      LastAccessTime:     number
#_      LastWriteTime:      number
#_
#_      FileSize:           number
#_      PhysicalSize:       number
#_
#_      Description:        string
#_      FileAttributes:     string
#_      FileName:           string
#_      Group:              string
#_      Owner:              string
#_
#_      Flags:              integer
#_      NumberOfLinks:      integer
#_      UnixMode:           integer
#_      CRC32:              integer
#_
#_      CustomColumnData:   table, or nil
#_      UserData:           any Lua value
#_
#_@@@
#_

article id=90 dt=Text ctime=0 mtime=3917635109 nm=tFindData
#_<markdown>
#_**`tFindData`** is a table with the following predefined fields:
#_
#_      FileAttributes:     string
#_      LastWriteTime:      number
#_      LastAccessTime:     number
#_      CreationTime:       number
#_      FileSize:           number
#_      PhysicalSize:       number
#_      UnixMode:           number
#_      FileName:           string
#_
#_###Notes
#_
#_1. **`FileAttributes`** is a string of concatenated attribute
#_letters (see below). If a letter representing some attribute
#_is present in the string, that means the corresponding attribute
#_is set, otherwise it is not.
#_
#_          a - archive
#_          b - broken
#_          c - compressed
#_          d - directory
#_          e - reparse point
#_          f - device_fifo
#_          g - device_char
#_          h - hidden
#_          i - not_content_indexed
#_          j - device_block
#_          k - device_sock
#_          n - encrypted
#_          o - offline
#_          p - sparse_file
#_          r - read only
#_          s - system file
#_          t - temporary
#_          u - no_scrub_data
#_          v - virtual
#_          x - executable
#_
#_1. **`LastWriteTime`**, **`LastAccessTime`** and **`CreationTime`**
#_are values measured in number of milliseconds elapsed since
#_January 1, 1601.
#_
#_

article id=91 dt=Text ctime=0 mtime=3907771674 nm=Manual of LuaFAR 2M
#_<markdown>
#_## This manual describes the LuaFAR variant intended for work with [far2m](https://github.com/shmuz/far2m) (Linux fork of FAR Manager v2).
#_
#_### Brief description of LuaFAR package
#_
#_This package allows writing Far Manager plugins in
#_[Lua](https://www.lua.org/) 5.1 programming language.
#_The package provides source code for `luafar.so` (a runtime library)
#_and `luaplug.c` (a [generic plugin](214.html)).
#_
#_* The functions exported by the plugin are found in the `export` global Lua table
#_and are mostly named after their C-function callers, e.g., `ConfigureW` calls
#_[`export.Configure`](96.html), see the full list of exported functions [here](92.html).
#_ 
#_* The service functions provided by Far Manager are found in the global Lua tables
#_`actl`, `editor`, `far`, `panel`, `regex`, `viewer`.
#_For instance, function `EditorControl` with parameter `ECTL_GETINFO`
#_is named [`editor.GetInfo`](29.html) in Lua plugins.
#_
#_* **Note:** the functions of the LuaFAR library assume
#_string arguments and string return values to be in the **UTF-8**
#_encoding (unless they are meant to hold binary data).
#_ 
#_One instance of `luafar.so` can serve arbitrary number of LuaFAR plugins at the same time.
#_ 
#_The starting (or "default") Lua script is searched in the plugin's
#_directories as described in [`LF_RunDefaultScript`](130.html) article.
#_
#_Currently, the documentation on LuaFAR API is incomplete and may be somewhat inaccurate.
#_When in doubt, consult the source code. The API may change in the future.
#_

article id=92 dt=Text ctime=0 mtime=0 nm=LuaFAR plugin-exported functions

article id=94 dt=Text ctime=0 mtime=3902581778 nm=export.ClosePanel
#_export.ClosePanel (object, handle)
#_
#_**Parameters:**
#_  object:  plugin object
#_  handle:  panel handle
#_
#_**Returns:**
#_  nothing
#_
#_**Far API used:**
#_  ClosePluginW
#_
#_@@@
#_

article id=95 dt=Text ctime=0 mtime=3907314920 nm=export.Compare
#_result = export.Compare (object, handle, PanelItem1, PanelItem2, Mode)
#_
#_**Parameters:**
#_  object:     plugin object
#_  handle:     plugin handle
#_  PanelItem1: table `tPluginPanelItem`
#_  PanelItem2: table `tPluginPanelItem`
#_  Mode:       integer
#_
#_**Returns:**
#_  result:     integer
#_
#_**Note:**
#_  As this function is usually called in loops the arguments'
#_  conversion from C to Lua becomes too expensive.
#_  A way to get faster sorting is to implement **CompareW** in C
#_  and only call into Lua once (just before the sorting loop starts)
#_  in order to obtain some values for **CompareW** customization.
#_
#_**Far API used:**
#_  CompareW
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_

article id=96 dt=Text ctime=0 mtime=3907389159 nm=export.Configure
#_result = export.Configure (ItemNumber)
#_
#_**Parameters:**
#_  ItemNumber: integer (0-based)
#_
#_**Returns:**
#_  result:     boolean
#_
#_**Far API used:**
#_  ConfigureW
#_
#_@@@
#_

article id=97 dt=Text ctime=0 mtime=3907327146 nm=export.DeleteFiles
#_result = export.DeleteFiles (object, handle, PanelItems, OpMode)
#_
#_**Parameters:**
#_  object:     plugin object
#_  handle:     plugin handle
#_  PanelItems: table (array of `tPluginPanelItem`)
#_  OpMode:     integer
#_
#_**Returns:**
#_  result:     boolean
#_
#_**Far API used:**
#_  DeleteFilesW
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_

article id=98 dt=Text ctime=0 mtime=3883979252 nm=export.ExitFAR
#_export.ExitFAR()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  nothing
#_
#_**Far API used:**
#_  ExitFARW
#_
#_@@@
#_

article id=101 dt=Text ctime=0 mtime=3907316235 nm=export.GetFiles
#_result [, newDestPath] = export.GetFiles(
#_    object, handle, PanelItems, Move, DestPath, OpMode)
#_
#_**Parameters:**
#_  object:      plugin object
#_  handle:      plugin handle
#_  PanelItems:  table (array of `tPluginPanelItem`)
#_  Move:        boolean
#_  DestPath:    string
#_  OpMode:      integer
#_
#_**Returns:**
#_  result:      integer
#_  newDestPath: string (optional)
#_
#_**Far API used:**
#_  GetFilesW
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_

article id=102 dt=Text ctime=0 mtime=3907325790 nm=export.GetFindData
#_Items = export.GetFindData (object, handle, OpMode)
#_
#_**Parameters:**
#_  object:  plugin object
#_  handle:  plugin handle
#_  OpMode:  integer
#_
#_**Returns:**
#_  Items:   table (array of `tPluginPanelItem`)
#_
#_**Note:**
#_  FreeFindDataW is provided internally by LuaFAR.
#_
#_**Far API used:**
#_  GetFindDataW, FreeFindDataW
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_

article id=103 dt=Text ctime=0 mtime=3866133117 nm=GetMinFarVersionW
#_int GetMinFarVersionW()
#_

article id=104 dt=Text ctime=0 mtime=3907326847 nm=export.GetOpenPanelInfo
#_OpenPanelInfo = export.GetOpenPanelInfo (object, handle)
#_
#_**Parameters:**
#_  object: plugin object
#_  handle: plugin handle
#_
#_**Returns:**
#_  OPInfo: table
#_    fields of OPInfo (most are optional):
#_      Flags:            flags combination
#_      HostFile:         string
#_      CurDir:           string
#_      Format:           string
#_      PanelTitle:       string
#_      InfoLines:        table (array of `tInfoLine` tables)
#_      InfoLinesNumber:  integer
#_      DescrFiles:       table (array of strings)
#_      PanelModesArray:  table (array of `tPanelMode` tables)
#_      PanelModesNumber: integer
#_      StartPanelMode:   integer
#_      StartSortMode:    flag
#_      StartSortOrder:   integer
#_      KeyBar:           table
#_      ShortcutData:     string
#_
#_**Note:**
#_  The *KeyBar* table may have the following fields (array tables):
#_      "Titles", "CtrlTitles", "AltTitles", "ShiftTitles",
#_      "CtrlShiftTitles", "AltShiftTitles",  "CtrlAltTitles".
#_  Each of these arrays may contain up to 12 strings.
#_
#_**Far API used:**
#_  GetOpenPluginInfoW
#_
#_@@@
#_[tInfoLine]: 120.html
#_[tPanelMode]: 121.html
#_

article id=105 dt=Text ctime=0 mtime=3890940578 nm=export.GetPluginInfo
#_PluginInfo = export.GetPluginInfo ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  PluginInfo: table
#_    fields of PluginInfo:
#_      Flags:               flags combination
#_      DiskMenuStrings:     table (array of strings)
#_      PluginMenuStrings:   table (array of strings)
#_      PluginConfigStrings: table (array of strings)
#_      CommandPrefix:       string
#_
#_**Far API used:**
#_  GetPluginInfoW, PluginInfo
#_
#_@@@
#_

article id=106 dt=Text ctime=0 mtime=3907325807 nm=export.GetVirtualFindData
#_Items = export.GetVirtualFindData (object, handle, Path)
#_
#_**Parameters:**
#_  object:  plugin object
#_  handle:  plugin handle
#_  Path:    string
#_
#_**Returns:**
#_  Items:   table (array of `tPluginPanelItem`)
#_
#_**Note:**
#_  FreeVirtualFindDataW is provided internally by LuaFAR.
#_
#_**Far API used:**
#_  GetVirtualFindDataW, FreeVirtualFindDataW
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_

article id=107 dt=Text ctime=0 mtime=3907314502 nm=export.MakeDirectory
#_Status [, NewName] = export.MakeDirectory (object, handle, Name, OpMode)
#_
#_**Parameters:**
#_  object:  plugin object
#_  handle:  plugin handle
#_  Name:    string
#_  OpMode:  integer
#_
#_**Returns:**
#_  Status:  integer (in accordance with FAR API)
#_  NewName: string
#_
#_**Far API used:**
#_  MakeDirectoryW
#_
#_@@@
#_

article id=108 dt=Text ctime=0 mtime=3907314793 nm=export.OpenFilePlugin
#_object = export.OpenFilePlugin (Name, Data, OpMode)
#_
#_**Parameters:**
#_  Name:   string, or nil
#_  Data:   string, or nil
#_  OpMode: integer
#_
#_**Returns:**
#_  object: plugin object (any Lua value)
#_    - Nil and false result in returning INVALID_HANDLE_VALUE to Far.
#_    - Number -2 (minus 2) tells Far that the operation was interrupted
#_      by the user.
#_    - The plugin object is passed to other exported functions
#_      when they are called by Far.
#_
#_**Far API used:**
#_  OpenFilePluginW
#_
#_@@@
#_
#_

article id=109 dt=Text ctime=0 mtime=3910450800 nm=export.Open
#_ret = export.Open (OpenFrom, ItemNumber, Item)
#_
#_**Parameters:**
#_  OpenFrom:    integer
#_  ItemNumber:  integer (0-based)
#_  Item:
#_      if OpenFrom == OPEN_FROMMACRO:
#_          table (array of arguments):
#_          - each argument can be either of:
#_            string, nil, boolean, number, "int64", or "binary"
#_          - field *n* of the table holds the length of the array
#_      if OpenFrom == OPEN_COMMANDLINE:
#_          string
#_      if OpenFrom == OPEN_SHORTCUT:
#_          string
#_      if OpenFrom == OPEN_DIALOG:
#_          table:
#_            *hDlg*: userdata
#_      if OpenFrom == something else:
#_          integer
#_
#_**Returns:**
#_  if OpenFrom == OPEN_FROMMACRO:
#_      0 or more Lua values.
#_      Currently, values of the following types are supported:
#_          string, nil, boolean, number, "int64", "binary", or "panel".
#_      To open a panel, return a "panel" value as the first return value.
#_  if OpenFrom == something else:
#_      ret: any Lua value; it is processed by LuaFAR as follows:
#_      - nil or false : INVALID_HANDLE_VALUE is returned to Far.
#_      - -1           : PANEL_STOP is returned to Far.
#_      - Otherwise    : *ret* is considered a panel object, stored in the Lua
#_                       registry, its registry reference is returned to Far.
#_                       The object is passed to other exported functions
#_                       when they are called by Far.
#_
#_**Definitions:**
#_  **"int64"**
#_    Type of userdata, produced by `bit64` library.
#_  **"binary"**
#_    By convention, it is a string enclosed in a table as its first element.
#_    The string is intended to be passed to and from without conversions UTF-8 <-> UTF-32LE.
#_  **"panel"**
#_    By convention, it is a panel handle (any non-false Lua value) enclosed in a table
#_    as its first element. The table must contain the field ["type"]="panel".
#_
#_**Far API used:**
#_  OpenPluginW
#_
#_@@@
#_[bit64]: 471.html
#_

article id=110 dt=Text ctime=0 mtime=3862213220 nm=export.ProcessEditorEvent
#_result = export.ProcessEditorEvent (EditorID, Event, Param)
#_
#_**Parameters:**
#_  EditorID: integer
#_  Event:    integer
#_  Param:    integer, or nil
#_
#_**Returns:**
#_  result: integer
#_
#_@@@
#_

article id=111 dt=Text ctime=0 mtime=3907298499 nm=export.ProcessEditorInput
#_result = export.ProcessEditorInput (Rec)
#_
#_**Parameters:**
#_  Rec:   table `tInputRecord`
#_
#_**Returns:**
#_  result: boolean
#_
#_@@@
#_[tInputRecord]: 187.html
#_

article id=112 dt=Text ctime=0 mtime=3907340445 nm=export.ProcessPanelEvent
#_result = export.ProcessPanelEvent (object, handle, Event, Param)
#_
#_**Parameters:**
#_  object: plugin object
#_  handle: plugin handle
#_  Event:  integer
#_  Param:  string (for FE_CHANGEVIEWMODE and FE_COMMAND), or nil
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  ProcessEventW
#_
#_@@@
#_

article id=113 dt=Text ctime=0 mtime=3907314653 nm=export.ProcessHostFile
#_result = export.ProcessHostFile (object, handle, Items, OpMode)
#_
#_**Parameters:**
#_  object: plugin object
#_  handle: plugin handle
#_  Items:  table (array of `tPluginPanelItem`)
#_  OpMode: integer
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  ProcessHostFileW
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_

article id=114 dt=Text ctime=0 mtime=3907314670 nm=export.ProcessKey
#_result = export.ProcessKey (object, handle, Key, ControlState)
#_
#_**Parameters:**
#_  object:       plugin object
#_  handle:       plugin handle
#_  Key:          integer
#_  ControlState: integer
#_
#_**Returns:**
#_  result:       boolean
#_
#_**Far API used:**
#_  ProcessKeyW
#_
#_@@@
#_

article id=115 dt=Text ctime=0 mtime=3907329596 nm=export.PutFiles
#_result = export.PutFiles (object, handle, Items, Move, SrcPath, OpMode)
#_
#_**Parameters:**
#_  object:   plugin object
#_  handle:   plugin handle
#_  Items:    table (array of `tPluginPanelItem`)
#_  Move:     boolean
#_  SrcPath:  string
#_  OpMode:   integer
#_
#_**Returns:**
#_  result:   integer
#_
#_**Far API used:**
#_  PutFilesW
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_

article id=116 dt=Text ctime=0 mtime=3907314714 nm=export.SetDirectory
#_result = export.SetDirectory (object, handle, Dir, OpMode)
#_
#_**Parameters:**
#_  object: plugin object
#_  handle: plugin handle
#_  Dir:    string
#_  OpMode: integer
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  SetDirectoryW
#_
#_@@@
#_

article id=117 dt=Text ctime=0 mtime=3907314731 nm=export.SetFindList
#_result = export.SetFindList (object, handle, Items)
#_
#_**Parameters:**
#_  object: plugin object
#_  handle: plugin handle
#_  Items:  table (array of `tPluginPanelItem`)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  SetFindListW
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_

article id=118 dt=Text ctime=0 mtime=3866133413 nm=SetStartupInfoW
#_<markdown>
#_
#_    void SetStartupInfoW (const struct PluginStartupInfo *Info)
#_
#_The C-language part of a plugin must export this function.
#_Within this function, it should call the following
#_LuaFAR functions: [`LF_LuaOpen`](129.html) and
#_[`LF_RunDefaultScript`](130.html).
#_
#_@@@
#_

article id=120 dt=Text ctime=0 mtime=0 nm=tInfoLine
#_<markdown>
#_**`tInfoLine`** is a table with the following predefined fields:
#_
#_      Text: string
#_      Data: string

article id=121 dt=Text ctime=0 mtime=3878653394 nm=tPanelMode
#_<markdown>
#_**`tPanelMode`** is a table with the following predefined fields:
#_
#_      ColumnTypes:        string
#_      ColumnWidths:       string
#_      ColumnTitles:       table (array of strings)
#_      FullScreen:         boolean
#_      DetailedStatus:     integer
#_      AlignExtensions:    integer
#_      CaseConversion:     boolean
#_      StatusColumnTypes:  string
#_      StatusColumnWidths: string
#_
#_

article id=122 dt=Text ctime=0 mtime=0 nm=Common functions

article id=123 dt=Text ctime=0 mtime=0 nm=Panel functions

article id=124 dt=Text ctime=0 mtime=0 nm=Editor functions

article id=125 dt=Text ctime=0 mtime=0 nm=Viewer functions

article id=127 dt=Text ctime=0 mtime=3862213275 nm=export.ProcessViewerEvent
#_result = export.ProcessViewerEvent (ViewerID, Event, Param)
#_
#_**Parameters:**
#_  ViewerID: integer
#_  Event:    integer
#_  Param:    integer, or nil
#_
#_**Returns:**
#_  result: integer
#_
#_@@@
#_

article id=128 dt=Text ctime=0 mtime=0 nm=LuaFAR C-interface

article id=129 dt=Text ctime=0 mtime=3883247727 nm=LF_LuaOpen
#_<markdown>
#_    int LF_LuaOpen (TPluginData* PlugData, lua_CFunction OpenLibs)
#_
#_#### Parameters:
#_      PlugData:     Pointer to a static struct that must be already
#_                    initialized during SetStartupInfo call.
#_
#_      OpenLibs:     Pointer to a function that can open additional
#_                    libraries. (NULL is allowed.)
#_
#_#### Returns:
#_      1=success; 0=failure
#_
#_#### Description:
#_
#_The function creates an instance of Lua interpreter, then calls
#_`LF_InitLuaState`.
#_
#_@@@
#_

article id=130 dt=Text ctime=0 mtime=3883317286 nm=LF_RunDefaultScript
#_<markdown>
#_    BOOL LF_RunDefaultScript(lua_State* L)
#_
#_#### Parameters:
#_      L:  Lua state
#_
#_#### Returns:
#_      TRUE if successful, FALSE otherwise
#_
#_#### Description:
#_
#_First, the function tries to `require` a module with the predefined name `<boot`. If `package.preload["<boot"]` contains a function, then it is run.
#_
#_Else, the starting (or "default") Lua script is searched in the plugin's directory, as follows:
#_
#_- The plugin name with the extension `.lua`, e.g.: `myplug.far-plug-wide -> myplug.lua`
#_
#_- If the plugin name contains a hyphen, then its part preceding the last hyphen is looked for, e.g.: `myplug-x64.far-plug-wide -> myplug.lua`.
#_
#_This mechanism allows the default script to be either embedded into the application or external.
#_
#_@@@
#_

article id=131 dt=Text ctime=0 mtime=0 nm=LuaFAR Far libraries

article id=132 dt=Text ctime=0 mtime=3889634653 nm=viewer.GetInfo
#_Info = viewer.GetInfo (ViewerId)
#_
#_**Parameters:**
#_  ViewerId: integer, or nil
#_
#_**Returns:**
#_  Info: table, or nil
#_    Info fields:
#_      ViewerID:       integer
#_      FileName:       string
#_      FileSize:       double
#_      FilePos:        double, 0-based
#_      WindowSizeX:    integer
#_      WindowSizeY:    integer
#_      Options:        integer
#_      TabSize:        integer
#_      LeftPos:        double, 1-based
#_      `CurMode`:        table
#_
#_**Far API used:**
#_  ViewerControl, VCTL_GETINFO
#_
#_@@@
#_[CurMode]: 133.html
#_

article id=133 dt=Text ctime=0 mtime=3878661339 nm=ViewerInfo.CurMode
#_<markdown>
#_**`ViewerInfo.CurMode`** is a table with the following predefined fields:
#_
#_      CodePage:       integer
#_      Wrap:           boolean
#_      WordWrap:       integer
#_      Hex:            boolean
#_      Processed:      boolean
#_

article id=134 dt=Text ctime=0 mtime=3889634656 nm=viewer.Quit
#_viewer.Quit (ViewerId)
#_
#_**Parameters:**
#_  ViewerId: integer, or nil
#_
#_**Returns:**
#_  nothing
#_
#_**Far API used:**
#_  ViewerControl, VCTL_QUIT
#_
#_@@@
#_

article id=135 dt=Text ctime=0 mtime=3889634660 nm=viewer.Redraw
#_viewer.Redraw (ViewerId)
#_
#_**Parameters:**
#_  ViewerId: integer, or nil
#_
#_**Returns:**
#_  nothing
#_
#_**Far API used:**
#_  ViewerControl, VCTL_REDRAW
#_
#_@@@
#_

article id=136 dt=Text ctime=0 mtime=3889634204 nm=editor.GetBookmarks
#_bookmarks = editor.GetBookmarks (EditorId)
#_
#_**Parameters:**
#_  EditorId     : integer, or nil
#_
#_**Returns:**
#_  bookmarks: table (array of "bookmark tables"), or nil
#_    fields of a "bookmark table":
#_      Line:       integer
#_      Cursor:     integer
#_      ScreenLine: integer
#_      LeftPos:    integer
#_
#_**Note:**
#_  This function groups data differently from how Far API's
#_  EditorControl(ECTL_GETBOOKMARKS) does. It places data of
#_  each bookmark into a separate table.
#_
#_**Far API used:**
#_  EditorControl, ECTL_GETBOOKMARKS, ECTL_GETINFO
#_
#_@@@
#_

article id=137 dt=Text ctime=0 mtime=3889634514 nm=editor.TurnOffMarkingBlock
#_editor.TurnOffMarkingBlock (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  nothing
#_
#_**Far API used:**
#_  EditorControl, ECTL_TURNOFFMARKINGBLOCK
#_
#_
#_@@@
#_

article id=138 dt=Text ctime=0 mtime=3889634331 nm=editor.ProcessKey
#_editor.ProcessKey (EditorId, key)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  key: integer
#_
#_**Returns:**
#_  nothing
#_
#_**Example:**
#_  local F = far.Flags
#_  editor.ProcessKey (F.KEY_CTRLEND)
#_
#_**Far API used:**
#_  EditorControl, ECTL_PROCESSKEY
#_
#_@@@
#_[farkeys.lua]: 154.html
#_

article id=139 dt=Text ctime=0 mtime=3889634462 nm=editor.SetKeyBar
#_result = editor.SetKeyBar (EditorId, param)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  param, either of:
#_      - string "redraw":  redraw the key bar titles;
#_      - string "restore": restore the original titles;
#_      - table with the following fields:
#_           Titles:           table (array of 12 strings)
#_           CtrlTitles:       table (array of 12 strings)
#_           AltTitles:        table (array of 12 strings)
#_           ShiftTitles:      table (array of 12 strings)
#_           CtrlShiftTitles:  table (array of 12 strings)
#_           AltShiftTitles:   table (array of 12 strings)
#_           CtrlAltTitles:    table (array of 12 strings)
#_        If some field is absent, the corresponding titles on
#_        the key bar will remain unchanged. The same is true
#_        for those positions in 12-string arrays that are absent.
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_SETKEYBAR
#_
#_@@@
#_

article id=140 dt=Text ctime=0 mtime=3889634469 nm=editor.SetParam
#_res1 [, res2] = editor.SetParam (EditorId, Type, Param [, Flags])
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  Type:     flag
#_  Param:    integer, boolean, or string
#_  Flags:    flags combination, or nil
#_
#_**Returns:**
#_  res1: boolean
#_  res2: string (if Type==ESPT_GETWORDDIV), or nil
#_
#_**Far API used:**
#_  EditorControl, ECTL_SETPARAM
#_
#_@@@
#_

article id=141 dt=Text ctime=0 mtime=3889634674 nm=viewer.SetKeyBar
#_result = viewer.SetKeyBar (ViewerId, param)
#_
#_**Parameters:**
#_  same as in `editor.SetKeyBar`
#_
#_**Returns:**
#_  same as in `editor.SetKeyBar`
#_
#_**Far API used:**
#_  ViewerControl, VCTL_SETKEYBAR
#_
#_@@@
#_[editor.SetKeyBar]: 139.html
#_

article id=142 dt=Text ctime=0 mtime=3890941284 nm=viewer.SetPosition
#_pos = viewer.SetPosition (ViewerId, PosData)
#_  or
#_pos = viewer.SetPosition (ViewerId, StartPos, LeftPos, Flags)
#_
#_**Parameters:**
#_  ViewerId: integer, or nil
#_  PosData:  table
#_    fields of PosData:
#_      StartPos:  number, 0-based
#_      LeftPos:   number, 1-based
#_      Flags:     flags combination
#_
#_  Parameters of the 2-nd function variant correspond to fields
#_  of the *PosData* table.
#_
#_**Returns:**
#_  pos:     resulting value of *StartPos* (number), or nil
#_
#_**Far API used:**
#_  ViewerControl, VCTL_SETPOSITION
#_
#_@@@
#_

article id=144 dt=Text ctime=0 mtime=3889634668 nm=viewer.Select
#_result = viewer.Select (ViewerId, BlockStartPos, BlockLen)
#_
#_**Parameters:**
#_  ViewerId:      integer, or nil
#_  BlockStartPos: number
#_  BlockLen:      integer
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  ViewerControl, VCTL_SELECT
#_
#_@@@
#_

article id=145 dt=Text ctime=0 mtime=3916571536 nm=panel.CheckPanelsExist
#_result = panel.CheckPanelsExist ([handle])
#_
#_**Parameters:**
#_  handle: panel handle
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_CHECKPANELSEXIST
#_
#_@@@
#_

article id=146 dt=Text ctime=0 mtime=3916572448 nm=panel.SetNumericSort
#_result = panel.SetNumericSort (handle, whatpanel [, set])
#_
#_**Parameters:**
#_  handle:    panel handle
#_  whatpanel: 1=active panel; 0=passive panel;
#_  set:       boolean, defaults to false
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_SETNUMERICSORT
#_
#_@@@
#_

article id=147 dt=Text ctime=0 mtime=3916572626 nm=panel.SetSortMode
#_result = panel.SetSortMode (handle, whatpanel, mode)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_  mode:      flag (integer or string)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_SETSORTMODE
#_
#_@@@
#_

article id=148 dt=Text ctime=0 mtime=3916572653 nm=panel.SetSortOrder
#_result = panel.SetSortOrder (handle, whatpanel [, order])
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_  order:     boolean (false=direct order; true=reverse order;
#_                      defaults to false)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_SETSORTORDER
#_
#_@@@
#_

article id=150 dt=Text ctime=0 mtime=3851366615 nm=export.OnError
#_export.OnError (ErrorMsg)
#_
#_**Parameters:**
#_  ErrorMsg: any type, usually a string
#_
#_**Returns:**
#_  nothing
#_
#_**Description:**
#_  This is a user-defined hook into LuaFAR.
#_  If this function is defined by a user application, then,
#_  instead of displaying an error message box, LuaFAR calls
#_  this function, passing it the error message value.
#_  The return values of export.OnError (if any) are ignored.
#_
#_

article id=151 dt=Text ctime=0 mtime=0 nm=Other functions

article id=152 dt=Text ctime=0 mtime=0 nm=win.GetEnv
#_result = win.GetEnv (var)
#_
#_**Parameters:**
#_  var:  string
#_
#_**Returns:**
#_  result: string, or nil
#_
#_**Description:**
#_  Use this instead of os.getenv, since the latter
#_  does not always work correctly. 
#_
#_@@@
#_

article id=153 dt=Text ctime=0 mtime=3892837090 nm=far.AdvControl

article id=155 dt=Text ctime=0 mtime=3883247920 nm=LF_LuaClose
#_<markdown>
#_    void LF_LuaClose(TPluginData* PlugData)
#_
#_#### Parameters:
#_      PlugData:  pointer to a static struct
#_
#_#### Returns:
#_      nothing
#_
#_#### Description:
#_
#_Releases the memory and closes the Lua state.
#_
#_@@@
#_

article id=156 dt=Text ctime=0 mtime=0 nm=LF_Message
#_<markdown>
#_    int LF_Message(
#_        PluginStartupInfo *Info,
#_        const wchar_t *Msg,
#_        const wchar_t *Title,
#_        const wchar_t *Buttons,
#_        const char    *Flags,
#_        const wchar_t *HelpTopic)
#_
#_#### Parameters:
#_      Info:        Pointer to a static struct that must be already
#_                   initialized during SetStartupInfo call.
#_      Msg:         Message text; if multiline, then the lines must be
#_                   separated by '\n'
#_      Title:       Message box title
#_      Buttons:     Button captions; if multiple, then the captions
#_                   must be separated by ';'
#_      Flags:       A combination of the following characters:
#_                     'w' stands for FMSG_WARNING;
#_                     'e' stands for FMSG_ERRORTYPE;
#_                     'k' stands for FMSG_KEEPBACKGROUND;
#_                     'd' stands for FMSG_DOWN;
#_                     'l' stands for FMSG_LEFTALIGN;
#_      HelpTopic:   Help Topic (can be NULL)
#_
#_#### Returns:
#_      -1 if escape pressed, else - button number chosen (0 based).
#_
#_#### Description:
#_This is an alternative interface to the FAR function `Message`.
#_
#_@@@
#_

article id=158 dt=Text ctime=0 mtime=3902577814 nm=LF_ClosePanel
#_<markdown>
#_    void LF_ClosePanel(lua_State* L, HANDLE hPanel)
#_
#_#### Parameters:
#_      L:       Lua state
#_      hPanel:  panel handle
#_
#_#### Returns:
#_      nothing
#_
#_#### Description:
#_
#_If Lua function [`export.ClosePanel`](94.html) exists, it is called.
#_Then, the resources associated with the panel are freed.
#_
#_@@@
#_

article id=159 dt=Text ctime=0 mtime=3480188012 nm=LF_Compare
#_<markdown>
#_    int LF_Compare(
#_        lua_State* L,
#_        HANDLE hPlugin,
#_        const tPluginPanelItem *Item1,
#_        const tPluginPanelItem *Item2,
#_        unsigned int Mode)
#_
#_#### Parameters:
#_      L:       Lua state
#_      hPlugin: Plugin handle
#_      ....
#_
#_#### Returns:
#_      comparison result
#_
#_#### Description:
#_
#_If Lua function [`export.Compare`](95.html) exists, it is called,
#_else `-2` is returned (directing to use the default FAR compare
#_function).
#_
#_@@@
#_

article id=160 dt=Text ctime=0 mtime=3480188026 nm=LF_Configure
#_<markdown>
#_    int LF_Configure(lua_State* L, int ItemNumber)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      a boolean (success or failure)
#_
#_#### Description:
#_
#_If Lua function [`export.Configure`](96.html) exists, it is called,
#_else `FALSE` is returned.
#_
#_@@@
#_

article id=161 dt=Text ctime=0 mtime=3480188042 nm=LF_DeleteFiles
#_<markdown>
#_    int LF_DeleteFiles(
#_        lua_State* L,
#_        HANDLE hPlugin,
#_        tPluginPanelItem *PanelItem,
#_        int ItemsNumber,
#_        int OpMode)
#_
#_#### Parameters:
#_      L:       Lua state
#_      hPlugin: Plugin handle
#_      ....
#_
#_#### Returns:
#_      a boolean (success or failure)
#_
#_#### Description:
#_
#_If Lua function [`export.DeleteFiles`](97.html) exists, it is called,
#_else `FALSE` is returned.
#_
#_@@@
#_

article id=162 dt=Text ctime=0 mtime=3480188177 nm=LF_ExitFAR
#_<markdown>
#_    void LF_ExitFAR(lua_State* L)
#_
#_#### Parameters:
#_      L:       Lua state
#_
#_#### Returns:
#_      nothing
#_
#_#### Description:
#_
#_First, the acquired resources are freed. Then, if Lua function [`export.ExitFAR`](98.html) exists, it is called.
#_
#_@@@
#_

article id=163 dt=Text ctime=0 mtime=3480187835 nm=LF_FreeFindData
#_<markdown>
#_    void LF_FreeFindData(
#_        lua_State* L,
#_        HANDLE hPlugin,
#_        tPluginPanelItem *PanelItems,
#_        int ItemsNumber)
#_
#_#### Parameters:
#_      L:       Lua state
#_      hPlugin: Plugin handle
#_      ....
#_
#_#### Returns:
#_      nothing
#_
#_#### Description:
#_
#_No Lua function is called. LuaFAR frees the "find data" internally.
#_
#_@@@
#_

article id=164 dt=Text ctime=0 mtime=3480187899 nm=LF_FreeVirtualFindData
#_<markdown>
#_    void LF_FreeVirtualFindData(
#_        lua_State* L,
#_        HANDLE hPlugin,
#_        tPluginPanelItem *PanelItems,
#_        int ItemsNumber)
#_
#_#### Parameters:
#_      L:       Lua state
#_      hPlugin: Plugin handle
#_      ....
#_
#_#### Returns:
#_      nothing
#_
#_#### Description:
#_
#_No Lua function is called. LuaFAR frees the "virtual find data"
#_internally.
#_
#_@@@
#_

article id=165 dt=Text ctime=0 mtime=3480187923 nm=LF_GetFiles
#_<markdown>
#_    int LF_GetFiles(
#_        lua_State* L,
#_        HANDLE hPlugin,
#_        tPluginPanelItem *PanelItem,
#_        int ItemsNumber,
#_        int Move,
#_        const wchar_t **DestPath,
#_        int OpMode)
#_
#_
#_#### Parameters:
#_      L:       Lua state
#_      hPlugin: Plugin handle
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.GetFiles`](101.html) exists, it is called,
#_else `0` is returned.
#_
#_@@@
#_

article id=166 dt=Text ctime=0 mtime=3480187787 nm=LF_GetFindData
#_<markdown>
#_    int LF_GetFindData(
#_        lua_State* L,
#_        HANDLE hPlugin,
#_        tPluginPanelItem **pPanelItem,
#_        int *pItemsNumber,
#_        int OpMode)
#_
#_#### Parameters:
#_      L:       Lua state
#_      hPlugin: Plugin handle
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.GetFindData`](102.html) exists,
#_it is called, else `FALSE` is returned.
#_
#_@@@
#_

article id=168 dt=Text ctime=0 mtime=3902595357 nm=LF_GetOpenPanelInfo
#_<markdown>
#_    void LF_GetOpenPanelInfo(
#_        lua_State* L,
#_        HANDLE hPlugin,
#_        OpenPluginInfo *aInfo)
#_
#_#### Parameters:
#_      L:       Lua state
#_      hPlugin: Plugin handle
#_      ....
#_
#_#### Returns:
#_      nothing
#_
#_#### Description:
#_If Lua function [`export.GetOpenPanelInfo`](104.html) exists, it is called.
#_
#_@@@
#_

article id=169 dt=Text ctime=0 mtime=3480188198 nm=LF_GetPluginInfo
#_<markdown>
#_    void LF_GetPluginInfo(lua_State* L, PluginInfo *PI)
#_
#_#### Parameters:
#_      L:       Lua state
#_      PI:      Pointer to a PluginInfo struct
#_
#_#### Returns:
#_      nothing
#_
#_#### Description:
#_
#_If Lua function [`export.GetPluginInfo`](105.html) exists, it is called.
#_
#_@@@
#_

article id=170 dt=Text ctime=0 mtime=3480187862 nm=LF_GetVirtualFindData
#_<markdown>
#_    int LF_GetVirtualFindData(
#_        lua_State* L,
#_        HANDLE hPlugin,
#_        tPluginPanelItem **pPanelItem,
#_        int *pItemsNumber,
#_        const wchar_t *Path)
#_
#_#### Parameters:
#_      L:       Lua state
#_      hPlugin: Plugin handle
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.GetVirtualFindData`](106.html) exists,
#_it is called, else `FALSE` is returned.
#_
#_@@@
#_

article id=171 dt=Text ctime=0 mtime=3480188058 nm=LF_MakeDirectory
#_<markdown>
#_    int LF_MakeDirectory(
#_        lua_State* L,
#_        HANDLE hPlugin,
#_        const wchar_t **Name,
#_        int OpMode)
#_
#_
#_#### Parameters:
#_      L:       Lua state
#_      hPlugin: Plugin handle
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_
#_If Lua function [`export.MakeDirectory`](107.html) exists, it is called.
#_
#_@@@
#_

article id=172 dt=Text ctime=0 mtime=0 nm=LF_OpenFilePlugin
#_<markdown>
#_    HANDLE LF_OpenFilePlugin(
#_        lua_State* L,
#_        const wchar_t *aName,
#_        const unsigned char *aData,
#_        int aDataSize,
#_        int aOpMode)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_
#_If `far.ReloadDefaultScript` is true, then the function runs
#_the default script (see [`LF_RunDefaultScript`](130.html)).
#_Then, if Lua function [`export.OpenFilePlugin`](108.html) exists,
#_it is called. Else, `INVALID_HANDLE_VALUE` is returned to FAR.
#_
#_@@@
#_

article id=173 dt=Text ctime=0 mtime=3902595222 nm=LF_Open
#_<markdown>
#_    HANDLE LF_Open (lua_State* L, int OpenFrom, INT_PTR Item)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If `far.ReloadDefaultScript` is true, then the function runs
#_the default script (see [`LF_RunDefaultScript`](130.html)).
#_Then, if Lua function [`export.Open`](109.html) exists,
#_it is called. Else, `INVALID_HANDLE_VALUE` is returned to FAR.
#_
#_@@@
#_

article id=174 dt=Text ctime=0 mtime=3480188250 nm=LF_ProcessEditorEvent
#_<markdown>
#_    int LF_ProcessEditorEvent (
#_        lua_State* L,
#_        int Event,
#_        void* Param)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_
#_If Lua function [`export.ProcessEditorEvent`](110.html) exists, it is called. Else, `0` is returned.
#_
#_@@@
#_

article id=175 dt=Text ctime=0 mtime=3480188235 nm=LF_ProcessEditorInput
#_<markdown>
#_    int LF_ProcessEditorInput (
#_        lua_State* L,
#_        const INPUT_RECORD *Rec)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.ProcessEditorInput`](111.html) exists, it is called. Else, `0` is returned.
#_
#_@@@
#_

article id=176 dt=Text ctime=0 mtime=3904041970 nm=LF_ProcessPanelEvent
#_<markdown>
#_    int LF_ProcessPanelEvent(
#_        lua_State* L,
#_        HANDLE hPlugin,
#_        int Event,
#_        void *Param)
#_
#_#### Parameters:
#_      L:       Lua state
#_      hPlugin: Plugin handle
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.ProcessPanelEvent`](112.html) exists, it is called.
#_Else, `0` is returned.
#_
#_@@@
#_

article id=177 dt=Text ctime=0 mtime=3480188093 nm=LF_ProcessHostFile
#_<markdown>
#_    int LF_ProcessHostFile(
#_        lua_State* L,
#_        HANDLE hPlugin,
#_        tPluginPanelItem *PanelItem,
#_        int ItemsNumber,
#_        int OpMode)
#_
#_#### Parameters:
#_      L:       Lua state
#_      hPlugin: Plugin handle
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.ProcessHostFile`](113.html) exists,
#_it is called. Else, `FALSE` is returned.
#_
#_@@@
#_

article id=178 dt=Text ctime=0 mtime=3480188114 nm=LF_ProcessKey
#_<markdown>
#_    int LF_ProcessKey(
#_        lua_State* L,
#_        HANDLE hPlugin,
#_        int Key,
#_        unsigned int ControlState)
#_
#_#### Parameters:
#_      L:       Lua state
#_      hPlugin: Plugin handle
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.ProcessKey`](114.html) exists, it is called.
#_Else, `FALSE` is returned.
#_
#_@@@
#_

article id=179 dt=Text ctime=0 mtime=3480188271 nm=LF_ProcessViewerEvent
#_<markdown>
#_    int LF_ProcessViewerEvent (
#_        lua_State* L,
#_        int Event,
#_        void* Param)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_
#_If Lua function [`export.ProcessViewerEvent`](127.html) exists, it is called. Else, `0` is returned.
#_
#_@@@
#_

article id=180 dt=Text ctime=0 mtime=3480188130 nm=LF_PutFiles
#_<markdown>
#_    int LF_PutFiles(
#_        lua_State* L,
#_        HANDLE hPlugin,
#_        tPluginPanelItem *PanelItems,
#_        int ItemsNumber,
#_        int Move,
#_        int OpMode)
#_
#_#### Parameters:
#_      L:       Lua state
#_      hPlugin: Plugin handle
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.PutFiles`](115.html) exists, it is called.
#_Else, `0` is returned.
#_
#_@@@
#_

article id=181 dt=Text ctime=0 mtime=3480188144 nm=LF_SetDirectory
#_<markdown>
#_    int LF_SetDirectory(
#_        lua_State* L,
#_        HANDLE hPlugin,
#_        const wchar_t *Dir,
#_        int OpMode)
#_
#_#### Parameters:
#_      L:       Lua state
#_      hPlugin: Plugin handle
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.SetDirectory`](116.html) exists, it is called.
#_Else, `0` is returned.
#_
#_@@@
#_

article id=182 dt=Text ctime=0 mtime=3480188161 nm=LF_SetFindList
#_<markdown>
#_    int LF_SetFindList(
#_        lua_State* L,
#_        HANDLE hPlugin,
#_        const tPluginPanelItem *PanelItems,
#_        int ItemsNumber)
#_
#_#### Parameters:
#_      L:       Lua state
#_      hPlugin: Plugin handle
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_
#_If Lua function [`export.SetFindList`](117.html) exists, it is called.
#_Else, `FALSE` is returned.
#_
#_@@@
#_

article id=183 dt=Text ctime=0 mtime=3902595115 nm=Mediator functions
#_<markdown>
#_Functions in this sections act as mediators between the plugin's
#_exported functions and their counterparts written in Lua.
#_
#_When FAR calls an exported function, the latter in turn calls
#_a mediator passing it a Lua State pointer as the first argument,
#_followed by all the arguments it received from FAR.
#_
#_The mediator then calls a corresponding Lua function, passing it
#_the arguments converted to their Lua equivalents, receives return
#_value(s) from Lua, converts them to their C equivalents and returns
#_them to its caller (the exported function).
#_
#_#### Example:
#_1) FAR calls the exported function `OpenPluginW`:<br>
#_`HANDLE OpenPluginW (int OpenFrom, int Item)`
#_
#_2) `OpenPluginW` calls the mediator function [`LF_Open`](173.html):<br>
#_`HANDLE LF_Open (lua_State* L, int OpenFrom, int Item)`
#_
#_3) `LF_Open` calls the Lua function [`export.Open`](109.html):<br>
#_`export.Open (OpenFrom, Item)`
#_
#_

article id=184 dt=Text ctime=0 mtime=0 nm=Service functions

article id=185 dt=Text ctime=0 mtime=0 nm=far.CPluginStartupInfo
#_Info = far.CPluginStartupInfo()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  Info: light userdata (a pointer to struct PluginStartupInfo)
#_
#_**Description:**
#_  The function gives access to Far Standard Functions (FSF)
#_  to DLL's other than the plugin DLL.
#_
#_@@@
#_int far_CPluginStartupInfo(lua_State *L)
#_{
#_  return lua_pushlightuserdata(L, (void*)GetPluginStartupInfo(L)), 1;
#_}
#_

article id=186 dt=Text ctime=0 mtime=3853777092 nm=far.InputRecordToKey
#_Key = far.InputRecordToKey (Input)
#_
#_**Parameters:**
#_  Input: table `tInputRecord`
#_         (Field *EventType* is mandatory, other fields
#_         are optional. If some field is missing, the default
#_         value of 0/false is used, except for *RepeatCount*
#_         that defaults to 1).
#_
#_**Returns:**
#_  Key: integer
#_
#_**Far API used:**
#_  FSF.FarInputRecordToKey
#_
#_@@@
#_[tInputRecord]: 187.html
#_

article id=187 dt=Text ctime=0 mtime=3917348136 nm=tInputRecord
#_**The table has the following fields:**
#_
#_  EventType:         integer (from Far) or flag (to Far)
#_
#_  *--if EventType is KEY_EVENT or FARMACRO_KEY_EVENT:*
#_  KeyDown:           boolean
#_  RepeatCount:       integer
#_  VirtualKeyCode:    integer
#_  VirtualScanCode:   integer
#_  UnicodeChar:       string
#_  ControlKeyState:   integer
#_
#_  *--if EventType is MOUSE_EVENT:*
#_  see `tMouseEventRecord`
#_
#_  *--if EventType is WINDOW_BUFFER_SIZE_EVENT:*
#_  SizeX              integer
#_  SizeY              integer
#_
#_  *--if EventType is MENU_EVENT:*
#_  CommandId          integer
#_
#_  *--if EventType is FOCUS_EVENT:*
#_  SetFocus           boolean
#_
#_@@@
#_[editor.ProcessInput]: 36.html
#_[tMouseEventRecord]: 313.html
#_[far.NameToInputRecord]: 504.html
#_[far.InputRecordToKey]: 186.html
#_[editor.ReadInput]: 38.html
#_

article id=188 dt=Text ctime=0 mtime=0 nm=far.LStricmp
#_result = far.LStricmp (str1, str2)
#_
#_**Parameters:**
#_  str1: string
#_  str2: string
#_
#_**Returns:**
#_  result: integer
#_
#_**Far API used:**
#_  FSF.LStricmp
#_
#_

article id=189 dt=Text ctime=0 mtime=0 nm=far.LStrnicmp
#_result = far.LStrnicmp (str1, str2, num)
#_
#_**Parameters:**
#_  str1: string
#_  str2: string
#_  num : integer
#_
#_**Returns:**
#_  result: integer
#_
#_**Far API used:**
#_  FSF.LStrnicmp
#_
#_

article id=190 dt=Text ctime=0 mtime=3892648974 nm=far.ProcessName
#_Result = far.ProcessName (Op, Mask, Name, Flags)
#_
#_**Parameters:**
#_  Op:    flag   (either of PN_CMPNAME, PN_CMPNAMELIST, PN_GENERATENAME, PN_CHECKMASK)
#_  Mask:  string
#_  Name:  string (ignored when Op==PN_CHECKMASK)
#_  Flags: flags  (combination of PN_SKIPPATH, PN_CASEINSENSITIVE
#_                 and PN_SHOWERRORMESSAGE; default=0)
#_
#_**Returns:**
#_  Result: boolean, or string.
#_          String is returned on success if Op==PN_GENERATENAME
#_
#_**Far API used:**
#_  FSF.ProcessName
#_
#_@@@
#_

article id=192 dt=Text ctime=0 mtime=0 nm=win.SetEnv
#_result = win.SetEnv (var [,value])
#_
#_**Parameters:**
#_  var  :  string
#_  value:  string, or nil
#_
#_**Returns:**
#_  result: boolean
#_
#_**Description:**
#_  This function sets or deletes a given environment variable.
#_
#_@@@
#_

article id=194 dt=Text ctime=0 mtime=3892052411 nm=Third party software used
#_<markdown>
#_The following third party software is used as part of LuaFAR:
#_
#_1. [Lua 5.1](196.html)
#_1. [LuaUtf8](251.html)
#_
#_Many thanks to the authors for making their great software available!
#_
#_

article id=196 dt=Text ctime=0 mtime=0 nm=Lua
#_<markdown>
#_Lua is licensed under the terms of the MIT license reproduced below.
#_This means that Lua is free software and can be used for both academic
#_and commercial purposes at absolutely no cost.
#_
#_For details and rationale, see http://www.lua.org/license.html .
#_
#_<HR>
#_
#_Copyright (C) 1994-2008 Lua.org, PUC-Rio.
#_
#_Permission is hereby granted, free of charge, to any person obtaining a copy
#_of this software and associated documentation files (the "Software"), to deal
#_in the Software without restriction, including without limitation the rights
#_to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#_copies of the Software, and to permit persons to whom the Software is
#_furnished to do so, subject to the following conditions:
#_
#_The above copyright notice and this permission notice shall be included in
#_all copies or substantial portions of the Software.
#_
#_THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#_IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#_FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
#_AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#_LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#_OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#_THE SOFTWARE.
#_
#_

article id=200 dt=Text ctime=0 mtime=0 nm=far.GetReparsePointInfo
#_Dest = far.GetReparsePointInfo (Src)
#_
#_**Parameters:**
#_  Src:  string
#_
#_**Returns:**
#_  Dest: string, or nil
#_
#_**Far API used:**
#_  FSF.GetReparsePointInfo
#_
#_@@@
#_

article id=201 dt=Text ctime=0 mtime=0 nm=far.LIsAlpha
#_result = far.LIsAlpha (str)
#_
#_**Parameters:**
#_  str:  string (only its first character is tested)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  FSF.LIsAlpha
#_
#_@@@
#_

article id=202 dt=Text ctime=0 mtime=0 nm=far.LIsAlphanum
#_result = far.LIsAlphanum (str)
#_
#_**Parameters:**
#_  str:  string (only its first character is tested)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  FSF.LIsAlphanum
#_
#_@@@
#_

article id=203 dt=Text ctime=0 mtime=0 nm=far.LIsLower
#_result = far.LIsLower (str)
#_
#_**Parameters:**
#_  str:  string (only its first character is tested)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  FSF.LIsLower
#_
#_@@@
#_

article id=204 dt=Text ctime=0 mtime=0 nm=far.LIsUpper
#_result = far.LIsUpper (str)
#_
#_**Parameters:**
#_  str:  string (only its first character is tested)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  FSF.LIsUpper
#_
#_@@@
#_

article id=205 dt=Text ctime=0 mtime=0 nm=far.LLowerBuf
#_result = far.LLowerBuf (str)
#_
#_**Parameters:**
#_  str:    string
#_
#_**Returns:**
#_  result: string
#_
#_**Far API used:**
#_  FSF.LLowerBuf
#_
#_@@@
#_

article id=206 dt=Text ctime=0 mtime=0 nm=far.LUpperBuf
#_result = far.LUpperBuf (str)
#_
#_**Parameters:**
#_  str:    string
#_
#_**Returns:**
#_  result: string
#_
#_**Far API used:**
#_  FSF.LUpperBuf
#_
#_@@@
#_

article id=207 dt=Text ctime=0 mtime=0 nm=far.MkTemp
#_result = far.MkTemp ([prefix])
#_
#_**Parameters:**
#_  prefix: string, or nil
#_
#_**Returns:**
#_  result: string
#_
#_**Far API used:**
#_  FSF.MkTemp
#_
#_@@@
#_

article id=208 dt=Text ctime=0 mtime=3890420002 nm=far.MkLink
#_result = far.MkLink (Src, Dest, Type, Flags)
#_
#_**Parameters:**
#_  Src:    string
#_  Dest:   string
#_  Type:   flags (default=FLINK_SYMLINK)
#_  Flags:  flags (default=0)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  MkLink
#_
#_@@@
#_

article id=209 dt=Text ctime=0 mtime=0 nm=far.TruncPathStr
#_result = far.TruncPathStr (Str, MaxLength)
#_
#_**Parameters:**
#_  Str:       string
#_  MaxLength: integer
#_
#_**Returns:**
#_  result:    string
#_
#_**Far API used:**
#_  FSF.TruncPathStr
#_
#_@@@
#_

article id=210 dt=Text ctime=0 mtime=0 nm=far.TruncStr
#_result = far.TruncStr (Str, MaxLength)
#_
#_**Parameters:**
#_  Str:       string
#_  MaxLength: integer
#_
#_**Returns:**
#_  result:    string
#_
#_**Far API used:**
#_  FSF.TruncStr
#_
#_@@@
#_

article id=211 dt=Text ctime=0 mtime=3879499558 nm=far.RecursiveSearch
#_far.RecursiveSearch (InitDir, Mask, UserFunc [, Flags [, ...]])
#_
#_**Parameters:**
#_  InitDir:  string
#_  Mask:     string
#_  UserFunc: function
#_  Flags:    flags
#_  ...:      additional arguments, any Lua values
#_
#_**Returns:**
#_  In case the search was stopped by *UserFunc*:  all values returned by *UserFunc*.
#_  In case no more files left:                  nothing.
#_  In case of error in *UserFunc*:                nothing.
#_
#_**Description:**
#_  On every file found, *UserFunc* is called with the following arguments passed to it:
#_      (1) a `tFindData` table
#_      (2) the full pathname of the found file
#_      (3...) additional arguments (if any) that were passed to far.RecursiveSearch
#_
#_  If the 1-st return value of *UserFunc* is neither *false* nor *nil* then the search
#_  is stopped.
#_
#_**Far API used:**
#_  FSF.FarRecursiveSearch
#_
#_@@@
#_[tFindData]: 90.html
#_

article id=213 dt=Text ctime=0 mtime=3900953917 nm=win.GetFileInfo
#_<markdown>
#_    Info = win.GetFileInfo (FileName)
#_
#_###Parameters
#_   **`FileName`**:  string<br>
#_   A valid directory or path and filename, which can contain
#_   wildcard characters (`*` and `?`)
#_
#_###Returns
#_  **`Info`**: [`tFindData`][] table, or nil
#_
#_###Description
#_  This function provides information about the specified file.
#_  The same information can be obtained with [`far.RecursiveSearch`][]
#_  function, but this function has simpler API and is much faster
#_  when single file data are needed.
#_
#_###Windows API used
#_  `FindFirstFile`, `FindClose`
#_
#_
#_[`tFindData`]: 90.html
#_[`far.RecursiveSearch`]: 211.html
#_

article id=214 dt=Text ctime=0 mtime=3853669600 nm=Generic LuaFAR plugin
#_<markdown>
#_
#_The LuaFAR distribution has a **`luaplug.c`** file that is not involved in building the LuaFAR DLL. It's called "generic LuaFAR plugin". Since most of the functionality of LuaFAR plugins is contained in their Lua parts, their C parts are more or less the same for most LuaFAR plugins. **`luaplug.c`** is a working example of this C-part and can be used by plugin developers.
#_
#_- [Customizing the generic plugin](425.html)
#_- [Extra exported functions](426.html)
#_

article id=215 dt=Text ctime=0 mtime=3853777145 nm=win.FileTimeToSystemTime
#_result = win.FileTimeToSystemTime (filetime)
#_
#_**Parameters:**
#_  filetime : number
#_             (number of milliseconds since January 1, 1601)
#_
#_**Returns:**
#_  result   : table `tSystemTime`, or nil
#_
#_**Windows API used:**
#_  FileTimeToSystemTime
#_
#_@@@
#_[tSystemTime]: 218.html
#_

article id=216 dt=Text ctime=0 mtime=3853777163 nm=win.SystemTimeToFileTime
#_result = win.SystemTimeToFileTime (systemtime)
#_
#_**Parameters:**
#_  systemtime : table `tSystemTime` (missing fields default to 0)
#_
#_**Returns:**
#_  result     : number, or nil
#_               (number of milliseconds since January 1, 1601)
#_
#_**Windows API used:**
#_  SystemTimeToFileTime
#_
#_@@@
#_[tSystemTime]: 218.html
#_

article id=217 dt=Text ctime=0 mtime=3856438297 nm=win.GetSystemTimeAsFileTime
#_result = win.GetSystemTimeAsFileTime()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result : number of milliseconds since January 1, 1601
#_
#_
#_**Windows API used:**
#_  GetSystemTimeAsFileTime
#_
#_@@@
#_[tSystemTime]: 218.html
#_

article id=218 dt=Text ctime=0 mtime=0 nm=tSystemTime
#_<markdown>
#_**`tSystemTime`** is a table with the following predefined fields:
#_
#_      wYear:          number
#_      wMonth:         number
#_      wDayOfWeek:     number
#_      wDay:           number
#_      wHour:          number
#_      wMinute:        number
#_      wSecond:        number
#_      wMilliseconds:  number
#_

article id=220 dt=Text ctime=0 mtime=0 nm=Dialog functions

article id=221 dt=Text ctime=0 mtime=3884099060 nm=export.ProcessDialogEvent
#_ret = export.ProcessDialogEvent (Event, Param)
#_
#_**Parameters:**
#_  Event:  integer
#_  Param:  table containing the following fields:
#_            hDlg   : userdata
#_            Msg    : integer
#_            Param1 : integer
#_            Param2 : depends on *Msg*
#_
#_**Returns:**
#_  ret:    integer, or nil
#_
#_**Description:**
#_  If *ret* is *nil* or *false*, then the event processing will continue.
#_  Otherwise, it is assumed that the plugin has processed the event, and *ret*
#_  will then be used as the return value of the dialog event handler.
#_
#_**Far API used:**
#_  ProcessDialogEventW, FarDialogEvent
#_
#_@@@
#_

article id=222 dt=Text ctime=0 mtime=3480188287 nm=LF_ProcessDialogEvent
#_<markdown>
#_    int LF_ProcessDialogEvent (
#_        lua_State* L,
#_        int Event,
#_        void* Param)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_
#_If Lua function [`export.ProcessDialogEvent`](221.html) exists, it is called. Else, `0` is returned.
#_
#_@@@
#_

article id=223 dt=Text ctime=0 mtime=3889634139 nm=editor.AddSessionBookmark
#_result = editor.AddSessionBookmark (EditorId)
#_
#_**Parameters:**
#_  EditorId : integer, or nil
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_ADDSTACKBOOKMARK
#_
#_

article id=224 dt=Text ctime=0 mtime=3889634148 nm=editor.ClearSessionBookmarks
#_result = editor.ClearSessionBookmarks (EditorId)
#_
#_**Parameters:**
#_  EditorId : integer, or nil
#_
#_**Returns:**
#_  result: integer
#_
#_**Far API used:**
#_  EditorControl, ECTL_CLEARSTACKBOOKMARKS
#_
#_

article id=225 dt=Text ctime=0 mtime=3889634184 nm=editor.DeleteSessionBookmark
#_result = editor.DeleteSessionBookmark (EditorId, [position])
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  position: integer, or nil (nil = current position)
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_DELETESTACKBOOKMARK
#_
#_

article id=226 dt=Text ctime=0 mtime=3889634299 nm=editor.PrevSessionBookmark
#_result = editor.PrevSessionBookmark (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_PREVSTACKBOOKMARK
#_
#_

article id=227 dt=Text ctime=0 mtime=3889634296 nm=editor.NextSessionBookmark
#_result = editor.NextSessionBookmark (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_NEXTSTACKBOOKMARK
#_
#_

article id=228 dt=Text ctime=0 mtime=3853512521 nm=panel.GetUserScreen
#_result = panel.GetUserScreen ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_GETUSERSCREEN
#_
#_@@@
#_
#_

article id=229 dt=Text ctime=0 mtime=3889634682 nm=viewer.SetMode
#_result = viewer.SetMode (ViewerId, ModeData)
#_
#_**Parameters:**
#_  ViewerId: integer, or nil
#_  ModeData: table
#_    fields of ModeData:
#_      Type:      flag
#_      iParam:    integer
#_      Flags:     flag
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  ViewerControl, VCTL_SETMODE
#_

article id=230 dt=Text ctime=0 mtime=3889634234 nm=editor.GetSessionBookmarks
#_bookmarks = editor.GetSessionBookmarks (EditorId)
#_
#_**Parameters:**
#_  EditorId     : integer, or nil
#_
#_**Returns:**
#_  bookmarks: table (array of "bookmark tables"), or nil
#_    fields of a "bookmark table":
#_      Line:       integer
#_      Cursor:     integer
#_      ScreenLine: integer
#_      LeftPos:    integer
#_
#_**Note:**
#_  This function groups data differently from how Far API's
#_  EditorControl(ECTL_GETSTACKBOOKMARKS) does. It places data
#_  of each bookmark into a separate table.
#_
#_**Far API used:**
#_  EditorControl, ECTL_GETSTACKBOOKMARKS
#_
#_@@@
#_

article id=251 dt=Text ctime=0 mtime=3851362213 nm=LuaUtf8
#_Home page: https://github.com/starwing/luautf8
#_
#_MIT License
#_
#_Copyright (c) 2018 Xavier Wang
#_
#_Permission is hereby granted, free of charge, to any person obtaining a copy
#_of this software and associated documentation files (the "Software"), to deal
#_in the Software without restriction, including without limitation the rights
#_to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#_copies of the Software, and to permit persons to whom the Software is
#_furnished to do so, subject to the following conditions:
#_
#_The above copyright notice and this permission notice shall be included in all
#_copies or substantial portions of the Software.
#_
#_THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#_IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#_FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#_AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#_LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#_OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#_SOFTWARE.
#_

article id=252 dt=Text ctime=0 mtime=3916571839 nm=panel.GetCurrentPanelItem
#_item = panel.GetCurrentPanelItem (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  item:      `tPluginPanelItem`
#_
#_**Far API used:**
#_  Control, FCTL_GETCURRENTPANELITEM
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_

article id=253 dt=Text ctime=0 mtime=3916571973 nm=panel.GetPanelItem
#_item = panel.GetPanelItem (handle, whatpanel, itemindex)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_  itemindex: integer (1-based)
#_
#_**Returns:**
#_  item:      `tPluginPanelItem`
#_
#_**Far API used:**
#_  Control, FCTL_GETPANELITEM
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_

article id=254 dt=Text ctime=0 mtime=3916572114 nm=panel.GetSelectedPanelItem
#_item = panel.GetSelectedPanelItem (handle, whatpanel, itemindex)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_  itemindex: integer (1-based)
#_
#_**Returns:**
#_  item:      `tPluginPanelItem`
#_
#_**Far API used:**
#_  Control, FCTL_GETSELECTEDPANELITEM
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_

article id=256 dt=Text ctime=0 mtime=0 nm=win.OemToUtf8
#_str_out = win.OemToUtf8 (str_in)
#_
#_**Parameters:**
#_  str_in  : string in OEM encoding
#_
#_**Returns:**
#_  str_out : string in UTF-8 encoding
#_
#_@@@
#_

article id=257 dt=Text ctime=0 mtime=0 nm=win.Utf8ToOem
#_str_out = win.Utf8ToOem (str_in)
#_
#_**Parameters:**
#_  str_in  : string in UTF-8 encoding
#_
#_**Returns:**
#_  str_out : string in OEM encoding
#_
#_@@@
#_
#_

article id=258 dt=Text ctime=0 mtime=3916571791 nm=panel.GetColumnTypes
#_ColumnTypes = panel.GetColumnTypes (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:      panel handle, or nil
#_  whatpanel:   1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  ColumnTypes: string
#_
#_**Far API used:**
#_  Control, FCTL_GETCOLUMNTYPES
#_
#_@@@
#_

article id=259 dt=Text ctime=0 mtime=3916571816 nm=panel.GetColumnWidths
#_ColumnWidths = panel.GetColumnWidths (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:       panel handle, or nil
#_  whatpanel:    1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  ColumnWidths: string
#_
#_**Far API used:**
#_  Control, FCTL_GETCOLUMNWIDTHS
#_
#_@@@
#_

article id=260 dt=Text ctime=0 mtime=3916571872 nm=panel.GetPanelDirectory
#_PanelDir = panel.GetPanelDirectory (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  PanelDir:  string
#_
#_**Far API used:**
#_  Control, FCTL_GETPANELDIR
#_
#_@@@
#_
#_

article id=261 dt=Text ctime=0 mtime=3889634219 nm=editor.GetFileName
#_FileName = editor.GetFileName (EditorId)
#_
#_**Parameters:**
#_  EditorId     : integer, or nil
#_
#_**Returns:**
#_  FileName: string
#_
#_**Far API used:**
#_  EditorControl, ECTL_GETFILENAME
#_
#_@@@
#_
#_

article id=262 dt=Text ctime=0 mtime=0 nm=far.GetCurrentDirectory
#_CurDir = far.GetCurrentDirectory ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  CurDir: string
#_
#_**Far API used:**
#_  FSF.GetCurrentDirectory
#_
#_@@@
#_
#_

article id=264 dt=Text ctime=0 mtime=3865959341 nm=win.Utf32ToUtf8
#_str_out = win.Utf32ToUtf8 (str_in)
#_
#_**Parameters:**
#_  str_in  : string in UTF-32 (little endian) encoding
#_
#_**Returns:**
#_  str_out : string in UTF-8 encoding
#_
#_@@@
#_

article id=265 dt=Text ctime=0 mtime=3865959376 nm=win.Utf8ToUtf32
#_str_out = win.Utf8ToUtf32 (str_in)
#_
#_**Parameters:**
#_  str_in  : string in UTF-8 encoding
#_
#_**Returns:**
#_  str_out : string in UTF-32 (little endian) encoding
#_
#_@@@
#_

article id=266 dt=Text ctime=0 mtime=3867736171 nm=regex.new
#_regex_object = regex.new (pattern [, cflags])
#_
#_**Parameters:**
#_  pattern:      string
#_  cflags:       string (any combination of 'i','m','o','s' and 'x')
#_
#_**Returns:**
#_  regex_object: userdata
#_
#_**Description:**
#_  Compiles pattern into the internal form.
#_  Compilation flags can be specified in either of two ways:
#_    -- If the pattern is enclosed in '/' (forward slashes)
#_       then the flags can follow the trailing slash.
#_       In this case, the *cflags* parameter is ignored.
#_    -- Via the *cflags* parameter.
#_
#_**Object methods:**
#_  `bracketscount`, `exec`, `find`, `gsub`, `match`, `tfind`
#_
#_**Far API used:**
#_  `RegExpControl`
#_
#_@@@
#_[tfind]: 484.html
#_[RegExpControl]: https://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_[find]: 267.html
#_[gsub]: 386.html
#_[exec]: 489.html
#_[bracketscount]: 377.html
#_[match]: 268.html
#_

article id=267 dt=Text ctime=0 mtime=3867736527 nm=methods find, findW
#_from, to [,c1 [,c2]...] = regex_object:find (subj [, init])
#_
#_**Parameters:**
#_  subj   :  string
#_  init   :  integer (default=1; can be negative)
#_
#_**Returns:**
#_  from   : integer
#_  to     : integer
#_  c1,... : strings (there can be *false* in place of captures
#_                    not participated in the match)
#_
#_**Note:**
#_*regex_object:findW* receives its 1-st argument and returns captures
#_in UTF-32LE encoding.
#_
#_**Far API used:**
#_  `RegExpControl`
#_
#_@@@
#_[RegExpControl]: https://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_

article id=268 dt=Text ctime=0 mtime=3867736585 nm=methods match, matchW
#_c1 [,c2 ...] = regex_object:match (subj [, init])
#_
#_**Parameters:**
#_  subj   :  string
#_  init   :  integer (default=1; can be negative)
#_
#_**Returns:**
#_  c1,... : strings (there can be *false* in place of captures
#_                    not participated in the match)
#_
#_**Note:**
#_*regex_object:matchW* receives its 1-st argument and returns captures
#_in UTF-32LE encoding.
#_
#_**Far API used:**
#_  `RegExpControl`
#_
#_@@@
#_[RegExpControl]: https://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_

article id=269 dt=Text ctime=0 mtime=3867736328 nm=regex.gmatch, gmatchW
#_for c1 [,c2 ...] in regex.gmatch (s, pattern [, cflags]) do
#_  ......
#_end
#_
#_**Parameters:**
#_  s       :  string
#_  pattern :  string
#_  cflags  :  string (any combination of 'i','m','o','s' and 'x')
#_
#_**Returns:**
#_  c1,...  :  strings (there can be *false* in place of captures
#_                     not participated in the match)
#_
#_**Description:**
#_  The function is API-compatible with *string.gmatch*, with the
#_  following extensions:
#_  -- *cflags* : optional 3-rd parameter: compilation flags;
#_
#_**Note:**
#_*regex.gmatchW* receives its 1-st argument and returns captures in
#_UTF-32LE encoding.
#_
#_**Far API used:**
#_  `RegExpControl`
#_
#_@@@
#_[RegExpControl]: https://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_

article id=270 dt=Text ctime=0 mtime=3867736358 nm=regex.gsub, gsubW
#_res, nmatch, nrep = regex.gsub (s, pattern, repl, [n], [cflags])
#_
#_**Parameters:**
#_  s:        string
#_  pattern:  string
#_  repl:     string, or table, or function
#_  n:        integer
#_  cflags:   string (any combination of 'i','m','o','s' and 'x')
#_
#_**Returns:**
#_  res:      string
#_  nmatch:   integer
#_  nrep:     integer
#_
#_**Description:**
#_  The function is API-compatible with *string.gsub*, with the
#_  following extensions:
#_  -- *cflags* : optional 5-th parameter: compilation flags;
#_  -- *nrep*   : 3-rd return value: number of replacements made;
#_
#_**Note:**
#_*regex.gsubW* receives its 1-st argument and returns captures in
#_UTF-32LE encoding.
#_
#_**Far API used:**
#_  `RegExpControl`
#_
#_@@@
#_[RegExpControl]: https://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_

article id=271 dt=Text ctime=0 mtime=3867736301 nm=regex.find, findW
#_from, to [,c1 [,c2]...] = regex.find (s, pattern, [init], [cflags])
#_
#_**Parameters:**
#_  s       :  string
#_  pattern :  string
#_  init    :  integer (default=1; can be negative)
#_  cflags  :  string (any combination of 'i','m','o','s' and 'x')
#_
#_**Returns:**
#_  from    : integer
#_  to      : integer
#_  c1,...  : strings (there can be *false* in place of captures
#_                     not participated in the match)
#_
#_**Description:**
#_  The function is similar to *string.find*, but differs from it
#_  by the meaning of its optional 4-th parameter:
#_  -- *cflags* : compilation flags;
#_
#_**Note:**
#_*regex.findW* receives its 1-st argument and returns captures in
#_UTF-32LE encoding.
#_
#_**Far API used:**
#_  `RegExpControl`
#_
#_@@@
#_[RegExpControl]: https://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_

article id=272 dt=Text ctime=0 mtime=3867736390 nm=regex.match, matchW
#_c1 [,c2]...] = regex.match (s, pattern, [init], [cflags])
#_
#_**Parameters:**
#_  s       :  string
#_  pattern :  string
#_  init    :  integer (default=1; can be negative)
#_  cflags  :  string (any combination of 'i','m','o','s' and 'x')
#_
#_**Returns:**
#_  c1,...  : strings (there can be *false* in place of captures
#_                     not participated in the match)
#_
#_**Description:**
#_  The function is API-compatible with *string.match*, with the
#_  following extensions:
#_  -- *cflags* : optional 4-th parameter: compilation flags;
#_
#_**Note:**
#_*regex.matchW* receives its 1-st argument and returns captures in
#_UTF-32LE encoding.
#_
#_**Far API used:**
#_  `RegExpControl`
#_
#_@@@
#_[RegExpControl]: https://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_

article id=273 dt=Text ctime=0 mtime=0 nm=Regular expression functions

article id=274 dt=Text ctime=0 mtime=0 nm=win.CompareString
#_result = win.CompareString(s1, s2, [locale], [flags])
#_
#_**Parameters:**
#_  s1     : string
#_  s2     : string
#_  locale : string, or nil (default="u")
#_             either of:
#_               "s" (system default)
#_               "u" (user default)
#_               "n" (neutral)
#_  flags  : string, or nil (default="")
#_             any combination of characters:
#_               'c' =  NORM_IGNORECASE;
#_               'k' =  NORM_IGNOREKANATYPE;
#_               'n' =  NORM_IGNORENONSPACE;
#_               's' =  NORM_IGNORESYMBOLS;
#_               'w' =  NORM_IGNOREWIDTH;
#_               'S' =  SORT_STRINGSORT;
#_
#_**Returns:**
#_  result : integer (either of -1, 0, 1), or nil
#_
#_**Note:**
#_  The underlying function *CompareStringW* seems to behave as if
#_  flag NORM_IGNORECASE is always present, even if it is not.
#_
#_**Windows API used:**
#_  CompareStringW
#_
#_@@@
#_

article id=275 dt=Text ctime=0 mtime=0 nm=win.wcscmp
#_result = win.wcscmp(s1, s2 [, insens))
#_
#_**Parameters:**
#_  s1     : string
#_  s2     : string
#_  insens : boolean (defaults to *false*)
#_
#_**Returns:**
#_  result : integer (either of -1, 0, 1)
#_
#_**C API used:**
#_  wcscmp, wcsicmp
#_
#_@@@
#_

article id=280 dt=Text ctime=3476605549 mtime=3900989957 nm=far.MakeMenuItems
#_Items = far.MakeMenuItems (...)
#_
#_**Parameters:**
#_  Arbitrary number of arguments.
#_  Each argument may be of any Lua type.
#_
#_**Returns:**
#_  Items: table (array of tables)
#_           - each element is a table in the form
#_             { text=<string>, arg=<argument value> }
#_           - number of elements >= number of arguments, as one
#_             argument can have a multiple line representation.
#_
#_**Description:**
#_  This function returns representation of its arguments, suitable
#_  for passing to function `far.Menu` as its *Items* parameter.
#_
#_@@@
#_[far.Menu]: 64.html
#_

article id=282 dt=Text ctime=3476617735 mtime=3900989997 nm=far.Show
#_Item, Position = far.Show (...)
#_
#_**Parameters:**
#_  Arbitrary number of arguments.
#_  Each argument may be of any Lua type.
#_
#_**Returns:**
#_  Item, Position - same as in `far.Menu`.
#_
#_**Description:**
#_  This function shows representation of its arguments in a menu
#_  window. It is handy for displaying multiple values at once, or
#_  long multi-line strings.
#_
#_  The function calls `far.MakeMenuItems` internally, then `far.Menu`.
#_
#_  Due to using `far.MakeMenuItems` the returned *Item* table contains
#_  the value of the corresponding original argument under the field 'arg'.
#_
#_@@@
#_[far.Menu]: 64.html
#_

article id=283 dt=Text ctime=3476902749 mtime=3889634519 nm=editor.UndoRedo
#_result = editor.UndoRedo (EditorId, Command)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  Command:  flag
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_UNDOREDO
#_
#_@@@
#_
#_

article id=284 dt=Text ctime=3476911603 mtime=3480263797 nm=far.ConvertPath
#_Dest = far.ConvertPath (Src [, Mode])
#_
#_**Parameters:**
#_  Src:  string
#_  Mode: flag, or nil (default="CPM_FULL")
#_
#_**Returns:**
#_  Dest: string
#_
#_**Far API used:**
#_  FSF.ConvertPath
#_
#_
#_@@@
#_
#_

article id=285 dt=Text ctime=3477040474 mtime=3900064658 nm=Dialog Events
#_<markdown>
#_
#_### Common information
#_
#_When the 8-th argument in the [`far.Dialog`](20.html) call is
#_function (*event handler*), that function will be called by Far
#_whenever any of the numerous dialog events occur.
#_
#_
#_### Parameters passed to event handler
#_
#_1. `Param1` is integer (1-based if it is ID of a dialog element, 0-based otherwise)
#_1. For most event types, `Param2` is also integer, in accordance to Far API.
#_1. For some events ([`DN_CTLCOLORDLGLIST`](286.html),
#_   [`DN_DRAWDLGITEM`](287.html), [`DN_EDITCHANGE`](288.html),
#_   [`DN_HELP`](289.html), [`DN_INITDIALOG`](308.html),
#_   [`DN_MOUSECLICK`](290.html), [`DN_MOUSEEVENT`](291.html),
#_   [`DN_RESIZECONSOLE`](292.html)) `Param2` is non-integer,
#_   see the articles describing those events.
#_
#_
#_### Treating the return value of dialog event handler (in the order of preference)
#_
#_1. Return value of **nil** (or no value) causes **`DefDlgProc`**
#_   to be called. Its return value is returned to Far.
#_1. For some events ([`DN_CTLCOLORDLGLIST`](286.html), [`DN_HELP`](289.html)),
#_   see the return values and their meaning in the article describing
#_   that event.
#_1. If the return value is **number**, then that number is returned
#_   to Far.
#_1. The boolean equivalent of the return value (that is, either
#_   0 or 1) is returned to Far.
#_
#_

article id=286 dt=Text ctime=3477040544 mtime=3477137627 nm=DN_CTLCOLORDLGLIST
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    table (`tFarListColors`)
#_
#_**Return**
#_    If the function returned a table (an array of new color
#_    attributes to be set), 1 is returned to Far, otherwise 0.
#_
#_@@@
#_[tFarListColors]: 293.html
#_

article id=287 dt=Text ctime=3477040579 mtime=3477135140 nm=DN_DRAWDLGITEM
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    table (`tFarDialogItem`)
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_[tFarDialogItem]: 295.html
#_

article id=288 dt=Text ctime=3477040592 mtime=3477135273 nm=DN_EDITCHANGE
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    table (`tFarDialogItem`)
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_[tFarDialogItem]: 295.html
#_

article id=289 dt=Text ctime=3477040601 mtime=3477153723 nm=DN_HELP
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    string; according to Far API 
#_
#_**Return**
#_    If the function returned a string, its address is returned
#_    to Far, otherwise 0 is returned.
#_
#_@@@
#_

article id=290 dt=Text ctime=3477040612 mtime=3477138291 nm=DN_MOUSECLICK
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    table (tMouseEventRecord) 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_[MouseEventRecord]: 313.html
#_

article id=291 dt=Text ctime=3477040627 mtime=3477138608 nm=DN_MOUSEEVENT
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    table (tMouseEventRecord) 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_[MouseEventRecord]: 313.html
#_

article id=292 dt=Text ctime=3477040640 mtime=3900526195 nm=DN_RESIZECONSOLE
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    table (`tCoord`) 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_[tCoord]: 314.html
#_

article id=293 dt=Text ctime=3477043729 mtime=3477044041 nm=tFarListColors
#_<markdown>
#_**`tFarListColors`** is a table with the following predefined fields:
#_
#_      Flags:  integer
#_
#_The array part of the table keeps integers, representing colors.
#_Color count can be obtained via the operator `#`.
#_

article id=295 dt=Text ctime=3477054110 mtime=3900232917 nm=tFarDialogItem
#_<markdown>
#_**`tFarDialogItem`** is a table (array)
#_
#_Fields of a dialog item:
#_
#_      [1]  Type:             integer, or string
#_      [2]  X1:               integer
#_      [3]  Y1:               integer
#_      [4]  X2:               integer
#_      [5]  Y2:               integer
#_      [6]  Selected/ListItems: integer/table
#_             When table, its array part is a table per item:
#_               ListItems[i]:
#_                 Flags : flags
#_                 Text  : string
#_             Its hash part has a field:
#_               SelectIndex : integer
#_      [7]  History:          string
#_      [8]  Mask:             string
#_      [9]  Flags             flags
#_      [10] Data:             string
#_

article id=297 dt=Text ctime=3477111575 mtime=3477128221 nm=DN_BTNCLICK
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_

article id=298 dt=Text ctime=3477111575 mtime=3477128999 nm=DN_CLOSE
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_

article id=299 dt=Text ctime=3477111575 mtime=3477129107 nm=DN_CTLCOLORDIALOG
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_

article id=300 dt=Text ctime=3477111575 mtime=3900749011 nm=DN_CTLCOLORDLGITEM
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    table;   array of up to 4 colors (integers)
#_
#_**Return**
#_    table;   array of up to 4 colors (or nothing)
#_
#_@@@
#_[description]: 285.html
#_

article id=301 dt=Text ctime=3477111575 mtime=3477133365 nm=DN_DRAGGED
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_

article id=302 dt=Text ctime=3477111575 mtime=3477133526 nm=DN_DRAWDIALOG
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_

article id=303 dt=Text ctime=3477111575 mtime=3477133567 nm=DN_DRAWDIALOGDONE
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_

article id=304 dt=Text ctime=3477111575 mtime=3477135407 nm=DN_ENTERIDLE
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_

article id=305 dt=Text ctime=3477111575 mtime=3900064582 nm=DN_GETDIALOGINFO
#_This message does not come into the dialog procedure,
#_it is handled internally by luafar library.

article id=306 dt=Text ctime=3477111575 mtime=3477137091 nm=DN_GOTFOCUS
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_

article id=307 dt=Text ctime=3477111575 mtime=3477137752 nm=DN_HOTKEY
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_

article id=308 dt=Text ctime=3477111575 mtime=3501423628 nm=DN_INITDIALOG
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    nil
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_

article id=309 dt=Text ctime=3477111575 mtime=3477138115 nm=DN_KEY
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_

article id=310 dt=Text ctime=3477111575 mtime=3477138131 nm=DN_KILLFOCUS
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_

article id=311 dt=Text ctime=3477111575 mtime=3477138149 nm=DN_LISTCHANGE
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_

article id=312 dt=Text ctime=3477111575 mtime=3477138161 nm=DN_LISTHOTKEY
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_@@@
#_[description]: 285.html
#_

article id=313 dt=Text ctime=3477138206 mtime=3851603641 nm=tMouseEventRecord
#_**The table has the following fields:**
#_
#_  MousePositionX   :  integer
#_  MousePositionY   :  integer
#_  ButtonState      :  integer
#_  ControlKeyState  :  integer
#_  EventFlags       :  integer
#_
#_

article id=314 dt=Text ctime=3477138634 mtime=3477138672 nm=tCoord
#_**The table has the following fields:**
#_
#_  X   :  integer
#_  Y   :  integer
#_

article id=315 dt=Text ctime=3477369087 mtime=3851368689 nm=win.GetVirtualKeys
#_vkeys = win.GetVirtualKeys ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  vkeys: table
#_
#_**Description:**
#_  Returns a table containing values of virtual key codes keyed by
#_  their string names (and vice versa). The prefix VK_ is stripped
#_  from the names, so VK_LBUTTON is represented as "LBUTTON", etc.
#_
#_**Example:**
#_  local vk = win.GetVirtualKeys()
#_  far.Message(vk.ESCAPE) --> 27
#_  far.Message(vk[27])    --> ESCAPE
#_
#_@@@
#_
#_

article id=318 dt=Text ctime=3480185179 mtime=3480188583 nm=LF_ProcessSynchroEvent
#_<markdown>
#_    int LF_ProcessSynchroEvent (
#_        lua_State* L,
#_        int Event,
#_        void* Param)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_
#_If Lua function [`export.ProcessSynchroEvent`](319.html) exists, it is called. Else, `0` is returned.
#_
#_@@@
#_

article id=319 dt=Text ctime=3480185395 mtime=3866134386 nm=ProcessSynchroEventW
#_int ProcessSynchroEventW (int Event, void *Param)
#_
#_This function is always exported by LuaFAR plugins.
#_It is used internally by LuaFAR in `far.Timer` implementation.
#_
#_@@@
#_[far.Timer]: 346.html
#_

article id=320 dt=Text ctime=3480215162 mtime=3853512604 nm=panel.IsActivePanel
#_result = panel.IsActivePanel (handle)
#_
#_**Parameters:**
#_  handle: panel handle
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_ISACTIVEPANEL
#_
#_
#_@@@
#_

article id=322 dt=Text ctime=3480243081 mtime=3851611400 nm=File Filter Control
#_<markdown>
#_File filter control is implemented as bindings of Far API
#_function `FileFilterControl`. LuaFAR API is chosen to be
#_different from Far API (in fact, it is much simpler).
#_
#_The API consists of 1 function ([`far.CreateFileFilter`](323.html))
#_that creates an instance of file filter object, the latter has 4
#_methods:
#_[`FreeFileFilter`](324.html),
#_[`OpenFiltersMenu`](325.html),
#_[`StartingToFilter`](326.html) and
#_[`IsFileInFilter`](327.html).
#_
#_#### Example
#_        -- create a filter for the "active panel" area
#_        local AFilter = far.CreateFileFilter(1, "FFT_PANEL")
#_        if AFilter then
#_          -- update the "current time" parameter
#_          AFilter:StartingToFilter()
#_
#_          -- manipulate panel elements
#_          for i=1, pInfo.ItemsNumber do
#_            -- apply the filter...
#_            local item = panel.GetPanelItem(nil, 1, i)
#_            if AFilter:IsFileInFilter(item) then
#_              -- the element matches filter conditions;
#_              -- process the element...
#_            end
#_          end
#_
#_          -- free memory
#_          AFilter:FreeFileFilter()
#_        end
#_
#_
#_

article id=323 dt=Text ctime=3480243198 mtime=3480263718 nm=far.CreateFileFilter
#_f = far.CreateFileFilter (whatPanel, filterType)
#_
#_**Parameters:**
#_  whatPanel:  integer (0=passive panel, 1=active panel)
#_  filterType: flag
#_
#_**Returns:**
#_  f:          userdata (file filter object), or nil
#_
#_**Description:**
#_  The created object has the following methods: `FreeFileFilter`,
#_  `OpenFiltersMenu`, `StartingToFilter` and `IsFileInFilter`.
#_
#_**Far API used:**
#_  FileFilterControl, FFCTL_CREATEFILEFILTER
#_
#_@@@
#_[FreeFileFilter]: 324.html
#_[IsFileInFilter]: 327.html
#_[OpenFiltersMenu]: 325.html
#_[StartingToFilter]: 326.html
#_

article id=324 dt=Text ctime=3480243269 mtime=3481258596 nm=FreeFileFilter
#_result = f:FreeFileFilter ()
#_
#_**Parameters:**
#_  f:       file filter object
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Note:**
#_  File filter objects are subject to garbage collection,
#_  thus calling this method is not mandatory.
#_
#_**Far API used:**
#_  FileFilterControl, FFCTL_FREEFILEFILTER
#_
#_@@@
#_
#_

article id=325 dt=Text ctime=3480243300 mtime=3480252058 nm=OpenFiltersMenu
#_result = f:OpenFiltersMenu ()
#_
#_**Parameters:**
#_  f:       file filter object
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Far API used:**
#_  FileFilterControl, FFCTL_OPENFILTERSMENU
#_
#_@@@
#_
#_

article id=326 dt=Text ctime=3480243319 mtime=3480252113 nm=StartingToFilter
#_result = f:StartingToFilter ()
#_
#_**Parameters:**
#_  f:       file filter object
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Far API used:**
#_  FileFilterControl, FFCTL_STARTINGTOFILTER
#_
#_@@@
#_
#_

article id=327 dt=Text ctime=3480243336 mtime=3853777078 nm=IsFileInFilter
#_result = f:IsFileInFilter (fileData)
#_
#_**Parameters:**
#_  f:        file filter object
#_  fileData: table `tFindData`
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Far API used:**
#_  FileFilterControl, FFCTL_ISFILEINFILTER
#_
#_@@@
#_[tFindData]: 90.html
#_

article id=329 dt=Text ctime=3480257526 mtime=3921354862 nm=Flags
#_<markdown>
#_
#_As Far API makes wide use of named integer constants, there is a necessity to represent those constants in Lua. LuaFAR keeps the names and values of the constants in tables. Most constants are embedded into LuaFAR, in the table [`far.Flags`](57.html).
#_
#_This manual uses the term **flags** for both a single constant contained in the table `far.Flags`, and for the [bitwise OR](471.html) of two or more such constants.
#_
#_When some function parameter in this manual is denoted as *flags*, it can be supplied from Lua as either an integer, a string (space-delimitered flags), or a table, with keys corresponding to constants' names and having non-false values.
#_
#_#### Example 1 (single flag)
#_The following 2 calls are equivalent:
#_        (1)  editor.UndoRedo(nil, F.EUR_UNDO) -- where F=far.Flags
#_        (2)  editor.UndoRedo(nil, "EUR_UNDO")
#_
#_#### Example 2 (flags combination)
#_The 7-th parameter to function [`editor.Editor`](21.html) can be
#_supplied from Lua in the following equivalent forms:
#_        (1)  bit64.bor(F.EF_NONMODAL, F.EF_IMMEDIATERETURN, ....)
#_        (2)  "EF_NONMODAL EF_IMMEDIATERETURN ...."
#_        (3)  { EF_NONMODAL=1, EF_IMMEDIATERETURN=1, .... }
#_
#_@@@
#_{ef_immediatereturn}: http://api.farmanager.com/ru/service_functions/editor.html#EF_IMMEDIATERETURN
#_{ef_nonmodal}: http://api.farmanager.com/ru/service_functions/editor.html#EF_NONMODAL
#_

article id=330 dt=Text ctime=3480322277 mtime=3916571625 nm=panel.ClearSelection
#_result = panel.ClearSelection (handle, whatpanel, items)
#_
#_**Parameters:**
#_  handle:       panel handle, or nil
#_  whatpanel:    1=active panel, 0=passive panel
#_  items:        integer (1-based item index),
#_                or table (array of item indexes)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_GETPANELINFO, FCTL_BEGINSELECTION,
#_  FCTL_CLEARSELECTION, FCTL_ENDSELECTION
#_
#_
#_@@@
#_

article id=331 dt=Text ctime=3480326038 mtime=3916571769 nm=panel.GetCmdLineSelection
#_SelStart, SelEnd = panel.GetCmdLineSelection ([handle])
#_
#_**Parameters:**
#_  handle: panel handle
#_
#_**Returns:**
#_  SelStart: integer (1-based)
#_  SelEnd:   integer
#_
#_**Far API used:**
#_  Control, FCTL_GETCMDLINESELECTION
#_
#_@@@
#_

article id=332 dt=Text ctime=3480326063 mtime=3916572384 nm=panel.SetCmdLineSelection
#_result = panel.SetCmdLineSelection (handle, selStart, selEnd)
#_
#_**Parameters:**
#_  handle:   panel handle, or nil
#_  selStart: integer (1-based)
#_  selEnd:   integer
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_SETCMDLINESELECTION
#_
#_@@@
#_

article id=335 dt=Text ctime=3480362672 mtime=3879499583 nm=far.XLat
#_result = far.XLat (Line, StartPos, EndPos, Flags)
#_
#_**Parameters:**
#_  Line:     string
#_  StartPos: integer (optional, default=1)
#_  EndPos:   integer (optional, default=Line:len())
#_  Flags:    flags
#_
#_**Returns:**
#_  result:   string, or nil
#_
#_**Far API used:**
#_  FSF.XLat
#_
#_@@@
#_

article id=341 dt=Text ctime=3481108972 mtime=3481109785 nm=LF_Gsub
#_<markdown>
#_    const wchar_t *LF_Gsub (lua_State *L, const wchar_t *s,
#_                            const wchar_t *p, const wchar_t *r)
#_
#_#### Description:
#_
#_The function can be used as a replacement for `luaL_gsub`,
#_working with wide char parameters, otherwise identical.
#_
#_@@@
#_
#_

article id=346 dt=Text ctime=3482124061 mtime=3911307022 nm=far.Timer
#_timer = far.Timer (interval, handler [, ...])
#_
#_**Parameters:**
#_  interval : integer (milliseconds)
#_  handler  : function
#_  ...      : additional arguments (any Lua types)
#_
#_**Returns:**
#_  timer    : userdata (timer object), or nil
#_
#_**Description:**
#_  The function creates a periodic timer. Every time the next
#_  *interval* milliseconds are elapsed, the *handler* is called
#_  with the timer object as its first argument followed by all
#_  the additional arguments (if any) passed to far.Timer.
#_
#_  The returned "timer object" can be used to query or modify
#_  the timer parameters. The object has an API similar to Delphi
#_  classes: properties, methods, events.
#_
#_**Notes:**
#_  1. *handler* can be called only when the plugin returns control
#_     to Far. Thus the real interval between *handler* calls is not
#_     exact and can significantly differ from the specified value.
#_
#_  2. The handler should take into account that at the moment it is
#_     called, the timer can already be closed. It can be found out
#_     by examining the *Closed* property of the timer.
#_
#_  3. This function requires that the plugin DLL has
#_     *ProcessSynchroEventW* exported.
#_
#_  4. This function is currently unavailable for FreeBSD-like
#_     operating systems.
#_
#_**Far API used:**
#_  AdvControl (ACTL_SYNCHRO), ProcessSynchroEventW.
#_
#_
#_@@@
#_[export.ProcessSynchroEvent]: 319.html
#_

article id=350 dt=Text ctime=3482328603 mtime=3482345154 nm=Enabled
#_value = timer.Enabled
#_    or
#_timer.Enabled = value
#_
#_**Description:**
#_  This property is about calling the handler function. The timer
#_  continues to run even when not enabled, but the handler is not
#_  called. The initial value of this property is *true*.
#_  This is a read/write boolean property.
#_
#_@@@
#_
#_

article id=351 dt=Text ctime=3482328655 mtime=3851879409 nm=Interval
#_value = timer.Interval
#_    or
#_timer.Interval = value
#_
#_**Description:**
#_  Query or set the interval (in milliseconds) of the timer.
#_  This is a read/write integer property.
#_
#_**NOTE:**
#_  Currently *Interval* is a read-only property.
#_
#_@@@
#_

article id=352 dt=Text ctime=3482328762 mtime=3482328762 nm=Properties

article id=353 dt=Text ctime=3482328777 mtime=3482450614 nm=OnTimer
#_handler = timer.OnTimer
#_    or
#_timer.OnTimer = handler
#_
#_**Description:**
#_  Query or set the timer handler function. The handler function
#_  is called with one argument: the timer object.
#_
#_

article id=354 dt=Text ctime=3482328782 mtime=3482491340 nm=Closed
#_result = timer.Closed
#_
#_This is a read-only boolean property.
#_

article id=355 dt=Text ctime=3482328881 mtime=3482328881 nm=Methods

article id=356 dt=Text ctime=3482328885 mtime=3482328885 nm=Events

article id=357 dt=Text ctime=3482328964 mtime=3482491377 nm=Close
#_timer:Close ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  nothing
#_
#_**Description:**
#_  Closes the timer.
#_
#_**Note:**
#_  A timer object is garbage-collected only when its lua_State closes,
#_  thus it is the application's responsibility to call the *Close*
#_  method when the timer is not needed anymore.
#_
#_@@@
#_
#_

article id=359 dt=Text ctime=3483001149 mtime=3851603973 nm=win.GetConsoleScreenBufferInfo
#_info = win.GetConsoleScreenBufferInfo ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  info : table, or nil
#_    fields of *info*:
#_      SizeX:               integer
#_      SizeY:               integer
#_      CursorPositionX:     integer
#_      CursorPositionY:     integer
#_      Attributes:          integer
#_      WindowLeft:          integer
#_      WindowTop:           integer
#_      WindowRight:         integer
#_      WindowBottom:        integer
#_      MaximumWindowSizeX:  integer
#_      MaximumWindowSizeY:  integer
#_
#_**Windows API used:**
#_  GetStdHandle(STD_OUTPUT_HANDLE), GetConsoleScreenBufferInfo
#_
#_@@@
#_

article id=361 dt=Text ctime=3484575113 mtime=3484575728 nm=win.DeleteFile
#_result = win.DeleteFile (filename)
#_
#_**Parameters:**
#_  filename: string
#_
#_**Returns:**
#_  result:   true (or: nil, errormessage)
#_
#_**Windows API used:**
#_  DeleteFileW
#_
#_@@@
#_

article id=362 dt=Text ctime=3484575124 mtime=3484631380 nm=win.MoveFile
#_result = win.MoveFile (source, target [, flags])
#_
#_**Parameters:**
#_  source:  string
#_  target:  string
#_  flags:   string (default = '')
#_             'c' = MOVEFILE_COPY_ALLOWED
#_             'd' = MOVEFILE_DELAY_UNTIL_REBOOT
#_             'r' = MOVEFILE_REPLACE_EXISTING
#_             'w' = MOVEFILE_WRITE_THROUGH
#_
#_**Returns:**
#_  result:  true (or: nil, errormessage)
#_
#_**Windows API used:**
#_  MoveFileExW
#_
#_@@@
#_

article id=363 dt=Text ctime=3484723553 mtime=3484723622 nm=win.RenameFile
#_<markdown>
#_This function is an alias to [`win.MoveFile`](362.html).
#_

article id=364 dt=Text ctime=3485765841 mtime=3907325775 nm=export.GetCustomData
#_Data = export.GetCustomData (FilePath)
#_
#_**Parameters:**
#_  FilePath:   string
#_
#_**Returns:**
#_  Data:       string, or nil
#_
#_**Note:**
#_  FreeCustomDataW is provided internally by LuaFAR.
#_
#_**Far API used:**
#_  GetCustomDataW, FreeCustomDataW
#_
#_@@@
#_

article id=366 dt=Text ctime=3485766195 mtime=3485768994 nm=LF_GetCustomData
#_<markdown>
#_    int LF_GetCustomData(
#_        lua_State* L, const wchar_t *FilePath, wchar_t **CustomData)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.GetCustomData`](364.html) exists, it is called,
#_else `0` is returned.
#_
#_@@@
#_
#_

article id=368 dt=Text ctime=3485769061 mtime=3485769185 nm=LF_FreeCustomData
#_<markdown>
#_    void LF_FreeCustomData(
#_        lua_State* L,
#_        wchar_t* CustomData)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      nothing
#_
#_#### Description:
#_
#_No Lua function is called. LuaFAR frees the "custom data" internally.
#_
#_@@@
#_
#_

article id=370 dt=Text ctime=3487755325 mtime=3500869003 nm=win.MultiByteToWideChar
#_str_out = win.MultiByteToWideChar (str_in, codepage [, flags])
#_
#_**Parameters:**
#_  str_in   : string in multi-byte encoding
#_  codepage : integer
#_  flags    : string, a combination of 0 or more of the following
#_             characters:
#_               'p' -> MB_PRECOMPOSED
#_               'c' -> MB_COMPOSITE
#_               'e' -> MB_ERR_INVALID_CHARS
#_               'u' -> MB_USEGLYPHCHARS
#_
#_**Returns:**
#_  str_out  : string in wide character encoding, or nil+error message.
#_
#_**Windows API used:**
#_  MultiByteToWideChar
#_
#_@@@
#_

article id=372 dt=Text ctime=3488896876 mtime=3488897730 nm=win.CreateDir
#_result = win.CreateDir (path [, tolerant])
#_
#_**Parameters:**
#_  path:     string
#_  tolerant: boolean (default=false)
#_
#_**Returns:**
#_  result:   true (or: nil, errormessage)
#_
#_**Description:**
#_  This function creates a directory specified by the *path*
#_  parameter. Nested directories can be created by a single
#_  call. If the target directory already exists, then the
#_  function returns true if the *tolerant* parameter is true.
#_
#_**Windows API used:**
#_  CreateDirectoryW
#_
#_@@@
#_

article id=373 dt=Text ctime=3488896891 mtime=3488897675 nm=win.RemoveDir
#_result = win.RemoveDir (path)
#_
#_**Parameters:**
#_  path:   string
#_
#_**Returns:**
#_  result: true (or: nil, errormessage)
#_
#_**Windows API used:**
#_  RemoveDirectoryW
#_
#_@@@
#_

article id=377 dt=Text ctime=3489988958 mtime=3867735907 nm=method bracketscount
#_count = regex_object:bracketscount ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  count : integer
#_
#_**Far API used:**
#_  `RegExpControl`
#_
#_@@@
#_[RegExpControl]: https://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_

article id=378 dt=Text ctime=3490426716 mtime=3901548733 nm=far.DialogInit
#_hDlg = far.DialogInit (Guid,X1,Y1,X2,Y2,HelpTopic,Items,Flags,DlgProc,Param)
#_
#_**Parameters:**
#_  Guid:      string, or nil
#_  X1:        integer
#_  Y1:        integer
#_  X2:        integer
#_  Y2:        integer
#_  HelpTopic: string, or nil
#_  Items:     table (array of `tFarDialogItem`)
#_  Flags:     flags combination
#_  DlgProc:   function, or nil
#_    ret = DlgProc (hDlg, Msg, Param1, Param2)
#_      Parameters:
#_        hDlg   : userdata
#_        Msg    : integer
#_        Param1 : integer
#_        Param2 : depends on *Msg*
#_      Returns:
#_        ret    : depends on *Msg*
#_  Param:     any Lua value (optional)
#_
#_**Returns:**
#_  hDlg:      userdata (or nil in case of failure)
#_
#_**Return value**
#_  The dialog handle returned by this function has the following methods:
#_  *__tostring*, *__gc*, *rawhandle* and *send*.
#_
#_  **hDlg:rawhandle()**
#_    returns the original value of handle received from Far Manager
#_    that is suitable for using with LuaJIT FFI and as a table key.
#_
#_  **hDlg:send(...)**
#_    is equivalent to `far.SendDlgMessage`(hDlg, ...)
#_
#_**Far API used:**
#_  DialogInitV3
#_
#_@@@
#_[tFarDialogItem]: 295.html
#_

article id=379 dt=Text ctime=3490426724 mtime=3851925690 nm=far.DialogRun
#_result = far.DialogRun (handle)
#_
#_**Parameters:**
#_  handle: userdata (obtained from a `far.DialogInit` call)
#_
#_**Returns:**
#_  result: integer (1-based)
#_
#_**Far API used:**
#_  DialogRun
#_
#_@@@
#_[far.DialogInit]: 378.html
#_

article id=380 dt=Text ctime=3490426732 mtime=3490521200 nm=far.DialogFree
#_far.DialogFree (handle)
#_
#_**Parameters:**
#_  handle: userdata (obtained from a `far.DialogInit` call)
#_
#_**Returns:**
#_  nothing
#_
#_**Note:**
#_  If *far.DialogFree* is never called by the program, the dialog
#_  handle will be eventually freed by the garbage collector.
#_
#_**Far API used:**
#_  DialogFree
#_
#_@@@
#_[far.DialogInit]: 378.html
#_

article id=381 dt=Text ctime=3492068593 mtime=3916571895 nm=panel.GetPanelFormat
#_PanelFormat = panel.GetPanelFormat (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  PanelFormat:  string
#_
#_**Far API used:**
#_  Control, FCTL_GETPANELFORMAT
#_
#_@@@
#_
#_

article id=382 dt=Text ctime=3492068606 mtime=3916571919 nm=panel.GetPanelHostFile
#_HostFile = panel.GetPanelHostFile (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  HostFile:  string
#_
#_**Far API used:**
#_  Control, FCTL_GETPANELHOSTFILE
#_
#_@@@
#_
#_

article id=385 dt=Text ctime=3497514263 mtime=3883319249 nm=LF_InitOtherLuaState
#_<markdown>
#_    int LF_InitOtherLuaState (lua_State *L,
#_                              lua_State *Lplug,
#_                              lua_CFunction aOpenLibs) 
#_
#_#### Parameters:
#_      L:            Other Lua state.
#_
#_      Lplug:        Lua state of the LuaFAR plugin.
#_
#_      OpenLibs:     Pointer to a function that can open additional
#_                    libraries. (NULL is allowed.)
#_
#_#### Description:
#_
#_The function initializes **L** Lua state.
#_
#_1. Open the standard Lua libraries and all the LuaFAR libraries.
#_1. Call `aOpenLibs` function.
#_
#_@@@
#_

article id=386 dt=Text ctime=3497976622 mtime=3867736556 nm=methods gsub, gsubW
#_res, nmatch, nrep = regex_object:gsub (s, repl, [n])
#_
#_**Parameters:**
#_  s:        string
#_  repl:     string, or table, or function
#_  n:        integer
#_
#_**Returns:**
#_  res:      string
#_  nmatch:   integer
#_  nrep:     integer
#_
#_**Note:**
#_*regex_object:gsubW* receives its 1-st argument and returns captures
#_in UTF-32LE encoding.
#_
#_**Far API used:**
#_  `RegExpControl`
#_
#_@@@
#_[RegExpControl]: https://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_

article id=391 dt=Text ctime=3500653631 mtime=3500653738 nm=win.GetACP
#_codepage = win.GetACP()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  codepage: integer
#_
#_**Windows API used:**
#_  GetACP
#_
#_@@@
#_

article id=392 dt=Text ctime=3500653643 mtime=3500653766 nm=win.GetOEMCP
#_codepage = win.GetOEMCP()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  codepage: integer
#_
#_**Windows API used:**
#_  GetOEMCP
#_
#_@@@
#_
#_

article id=393 dt=Text ctime=3500809281 mtime=3500809349 nm=win.GetCPInfo
#_info = win.GetCPInfo (codepage)
#_
#_**Parameters:**
#_  codepage : integer
#_
#_**Returns:**
#_  info : table, or nil + error message
#_           fields of *info*:
#_             MaxCharSize        : integer
#_             DefaultChar        : string
#_             LeadByte           : string
#_             UnicodeDefaultChar : string
#_             CodePage           : integer
#_             CodePageName       : string
#_
#_**Windows API used:**
#_  GetCPInfoExW
#_
#_@@@
#_

article id=394 dt=Text ctime=3500809326 mtime=3500809371 nm=win.EnumSystemCodePages
#_pages = win.EnumSystemCodePages ([supported])
#_
#_**Parameters:**
#_  supported : boolean
#_                false means CP_INSTALLED
#_                true  means CP_SUPPORTED
#_
#_**Returns:**
#_  pages     : table (array of strings), or nil + error message
#_
#_**Windows API used:**
#_  EnumSystemCodePagesW
#_
#_@@@
#_

article id=395 dt=Text ctime=3501391498 mtime=3916572301 nm=panel.SetCaseSensitiveSort
#_result = panel.SetCaseSensitiveSort (handle, whatpanel [, set])
#_
#_**Parameters:**
#_  handle:    panel handle
#_  whatpanel: 1=active panel; 0=passive panel;
#_  set:       boolean, defaults to false
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_SETCASESENSITIVESORT
#_
#_@@@
#_

article id=403 dt=Text ctime=3851349067 mtime=3853513022 nm=Panel functions
#_<markdown>
#_All functions having their 1-st parameter named `handle` accept it in either of 2 variants:
#_-------------------------------------------------------------------------------------------
#_
#_1. panel handle (light userdata)
#_2. number: 1=active panel, 0=passive panel
#_

article id=404 dt=Text ctime=3851356343 mtime=3851357415 nm=Additional libraries

article id=405 dt=Text ctime=3851356361 mtime=3851357406 nm=win

article id=406 dt=Text ctime=3851357353 mtime=3907256660 nm=luautf8
#_<markdown>
#_
#_UTF-8 module for Lua 5.x
#_========================
#_
#_This module adds UTF-8 support to Lua.
#_
#_It use data extracted from
#_[Unicode Character Database](http://www.unicode.org/reports/tr44/),
#_and tested on Lua 5.2.3, Lua 5.3.0 and LuaJIT.
#_
#_parseucd.lua is a pure Lua script generate unidata.h, to support convert
#_characters and check characters' category.
#_
#_It mainly used to compatible with Lua's own string module, it passed all
#_string and pattern matching test in lua test suite[2].
#_
#_It also adds some useful routines against UTF-8 features, such as:
#_- a convenient interface to escape Unicode sequence in string. 
#_- string insert/remove, since UTF-8 substring extract may expensive.
#_- calculate Unicode width, useful when implement e.g. console emulator.
#_- a useful interface to translate Unicode offset and byte offset.
#_- checking UTF-8 strings for validity and removing invalid byte sequences.
#_
#_Note that to avoid conflict with the Lua5.3's buitin library 'utf8',
#_this library produce a file like lua-utf8.dll or lua-utf8.so. so use
#_it like this:
#_
#_```
#_local utf8 = require 'lua-utf8'
#_```
#_
#_in your codes :-(
#_
#_[2]: http://www.lua.org/tests/5.2/
#_
#_
#_LuaRocks Installation
#_---------------------
#_`luarocks install luautf8`
#_
#_It's now full-compatible with Lua5.3's utf8 library, so replace this
#_file (and headers) with lua5.3 source's lutf8lib.c is also okay.
#_
#_Usage
#_-----
#_
#_Many routines are same as Lua's string module:
#_- `utf8.byte`
#_- `utf8.char`
#_- `utf8.find`
#_- `utf8.gmatch`
#_- `utf8.gsub`
#_- `utf8.len`
#_- `utf8.lower`
#_- `utf8.match`
#_- `utf8.reverse`
#_- `utf8.sub`
#_- `utf8.upper`
#_
#_The document of these functions can be find in Lua manual[3].
#_
#_[3]: http://www.lua.org/manual/5.2/manual.html#6.4
#_
#_
#_Some routines in string module needn't support Unicode:
#_- `string.dump`
#_- `string.format`
#_- `string.rep`
#_
#_They are NOT in utf8 module.
#_
#_Some routines are the compatible for Lua 5.3's basic UTF-8 support
#_library:
#_- `utf8.offset`
#_- `utf8.codepoint`
#_- `utf8.codes`
#_
#_See Lua5.3's manual to get usage.
#_
#_Some routines are new, with some Unicode-spec functions:
#_
#_### utf8.escape(str) -> utf8 string
#_escape a str to UTF-8 format string. It support several escape format:
#_
#_ * `%ddd` - which ddd is a decimal number at any length:
#_   change Unicode code point to UTF-8 format.
#_ * `%{ddd}` - same as `%nnn` but has bracket around.
#_ * `%uddd` - same as `%ddd`, u stands Unicode
#_ * `%u{ddd}` - same as `%{ddd}`
#_ * `%xhhh` - hexadigit version of `%ddd`
#_ * `%x{hhh}` same as `%xhhh`.
#_ * `%?` - '?' stands for any other character: escape this character.
#_
#_#### Examples:
#_    local u = utf8.escape
#_    print(u"%123%u123%{123}%u{123}%xABC%x{ABC}")
#_    print(u"%%123%?%d%%u")
#_
#_
#_### utf8.charpos(s[[, charpos], index]) -> charpos, code point
#_convert UTF-8 position to byte offset.
#_if only `index` is given, return byte offset of this UTF-8 char index.
#_if both `charpos` and `index` is given, a new `charpos` will be
#_calculated, by add/subtract UTF-8 char `index` to current `charpos`.
#_in all cases, it returns a new char position, and code point (a
#_number) at this position.
#_
#_### utf8.next(s[, charpos[, index]]) -> charpos, code point
#_iterate though the UTF-8 string s.
#_If only s is given, it can used as a iterator:
#_    for pos, code in utf8.next, "utf8-string" do
#_       -- ...
#_    end
#_
#_if only `charpos` is given, return the next byte offset of in string.
#_if `charpos` and `index` is given, a new `charpos` will be calculated, by
#_add/subtract UTF-8 char offset to current charpos.
#_in all case, it return a new char position (in bytes), and code point
#_(a number) at this position.
#_
#_### utf8.insert(s[, idx], substring) -> new_string
#_insert a substring to s. If idx is given, insert substring before char at
#_this index, otherwise substring will concat to s. idx can be negative.
#_
#_
#_### utf8.remove(s[, start[, stop]]) -> new_string
#_delete a substring in s. If neither start nor stop is given, delete the
#_last UTF-8 char in s, otherwise delete char from start to end of s. if
#_stop is given, delete char from start to stop (include start and stop).
#_start and stop can be negative.
#_
#_
#_### utf8.width(s[, ambi_is_double[, default_width]]) -> width
#_calculate the width of UTF-8 string s. if ambi_is_double is given, the
#_ambiguous width character's width is 2, otherwise it's 1.
#_fullwidth/doublewidth character's width is 2, and other character's width
#_is 1.
#_if default_width is given, it will be the width of unprintable character,
#_used display a non-character mark for these characters.
#_if s is a code point, return the width of this code point.
#_
#_
#_### utf8.widthindex(s, location[, ambi_is_double[, default_width]]) -> idx, offset, width
#_return the character index at given location in string s. this is a
#_reverse operation of utf8.width().
#_this function return a index of location, and a offset in in UTF-8
#_encoding. e.g. if cursor is at the second column (middle) of the wide
#_char, offset will be 2. the width of character at idx is returned, also.
#_
#_
#_### utf8.title(s) -> new_string
#_### utf8.fold(s) -> new_string
#_convert UTF-8 string s to title-case, or folded case used to compare by
#_ignore case.
#_if s is a number, it's treat as a code point and return a convert code
#_point (number). utf8.lower/utf8.upper has the same extension.
#_
#_
#_### utf8.ncasecmp(a, b) -> [-1,0,1]
#_compare a and b without case, -1 means a < b, 0 means a == b and 1 means a > b.
#_
#_
#_### utf8.isvalid(s) -> boolean
#_check whether s is a valid UTF-8 string or not.
#_
#_
#_### utf8.clean(s[, replacement_string]) -> cleaned_string, was_valid
#_replace any invalid UTF-8 byte sequences in s with the replacement string.
#_if no replacement string is provided, the default is "?" (REPLACEMENT CHARACTER U+FFFD).
#_note that *any* number of consecutive invalid bytes will be replaced by a single copy of the replacement string.
#_the 2nd return value is true if the original string was already valid (meaning no replacements were made).
#_
#_
#_### utf8.invalidoffset(s[, init]) -> offset
#_return the byte offset within s of the first invalid UTF-8 byte sequence.
#_(1 is the first byte of the string.)
#_if s is a valid UTF-8 string, return nil.
#_the optional numeric argument init specifies where to start the search; its default value is 1 and can be negative.
#_
#_
#_Improvement needed
#_------------------
#_
#_- add Lua 5.3 spec test-suite.
#_- more test case.
#_- grapheme-compose support, and affect in utf8.reverse and utf8.width
#_- Unicode normalize algorithm implement.
#_
#_
#_License
#_-------
#_It use same license with Lua: http://www.lua.org/license.html
#_

article id=407 dt=Text ctime=3851357426 mtime=3910985783 nm=utf8.dump
#_This is the same function as `string.dump`.
#_
#_@@@
#_[string.dump]: http://www.lua.org/manual/5.1/manual.html#pdf-string.dump
#_
#_

article id=408 dt=Text ctime=3851357445 mtime=3851357597 nm=utf8.format
#_**Note:**
#_  This is an added function, not present in the original luautf8 library.
#_  See `string.format` for reference.
#_
#_@@@
#_[string.format]: http://www.lua.org/manual/5.1/manual.html#pdf-string.format
#_

article id=409 dt=Text ctime=3851357454 mtime=3910985819 nm=utf8.rep
#_This is the same function as `string.rep`.
#_
#_@@@
#_[string.rep]: http://www.lua.org/manual/5.1/manual.html#pdf-string.rep
#_
#_

article id=410 dt=Text ctime=3851357461 mtime=3851357620 nm=utf8.utf8valid
#_result, len = utf8.utf8valid (str)
#_    or
#_result, len = str:utf8valid ()
#_
#_**Parameters:**
#_  str:     string
#_
#_**Returns:**
#_  result:  boolean
#_  len:     integer
#_
#_**Description:**
#_  This function tests whether the entire input string is valid UTF-8.
#_  If it is, the function returns *true* followed by the string length in characters.
#_  Otherwise, the function returns *false* followed by the number of valid UTF-8
#_  characters preceded the first invalid one.
#_
#_**Note:**
#_  This is an added function, not present in the original **luautf8** library.
#_

article id=411 dt=Text ctime=3851358133 mtime=3851358133 nm=Tables

article id=415 dt=Text ctime=3851399234 mtime=3851399293 nm=Plugins Control

article id=416 dt=Text ctime=3851399307 mtime=3876935129 nm=far.ForcedLoadPlugin
#_plugin_handle = far.ForcedLoadPlugin (Param1, Param2)
#_
#_**Parameters:**
#_  Param1:  flags
#_  Param2:  string
#_
#_**Returns:**
#_  plugin_handle:  userdata, or nil
#_
#_**Far API used:**
#_  PluginsControlV3, PCTL_FORCEDLOADPLUGIN
#_
#_@@@
#_

article id=417 dt=Text ctime=3851399323 mtime=3876935198 nm=far.LoadPlugin
#_plugin_handle = far.LoadPlugin (Param1, Param2)
#_
#_**Parameters:**
#_  Param1:  flags
#_  Param2:  string
#_
#_**Returns:**
#_  plugin_handle:  userdata, or nil
#_
#_**Far API used:**
#_  PluginsControlV3, PCTL_LOADPLUGIN
#_
#_@@@
#_

article id=418 dt=Text ctime=3851399331 mtime=3876935254 nm=far.UnloadPlugin
#_result = far.UnloadPlugin (Handle)
#_
#_**Parameters:**
#_  Handle:  userdata
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Far API used:**
#_  PluginsControlV3. PCTL_UNLOADPLUGIN
#_
#_@@@
#_

article id=419 dt=Text ctime=3851399749 mtime=3851399749 nm=Files and directories

article id=421 dt=Text ctime=3851399777 mtime=3851399777 nm=Text related functions

article id=422 dt=Text ctime=3851399790 mtime=3851399790 nm=Time related functions

article id=423 dt=Text ctime=3851399805 mtime=3851399805 nm=Various functions

article id=424 dt=Text ctime=3851400447 mtime=3906818038 nm=win.Uuid
#_There are different actions available, depending on arguments.
#_All arguments and return values are strings.
#_
#_**ret = win.Uuid()**
#_  Generate a new UUID in binary representation
#_
#_**ret = win.Uuid("U")**
#_  Generate a new UUID in upper-case text representation
#_
#_**ret = win.Uuid("L")**
#_  Generate a new UUID in lower-case text representation
#_
#_**ret = win.Uuid (binUUID)**
#_  Convert a binary UUID to text representation
#_
#_**ret = win.Uuid (textUUID)**
#_  Convert a text UUID to binary representation
#_
#_
#_**Note:**
#_For the latter 2 cases the algorithm is as follows:
#_- The length of the string argument is checked.
#_  When it is 16, the function makes conversion from binary
#_  to text representation, otherwise it tries to convert
#_  from text representation to binary one.
#_

article id=425 dt=Text ctime=3851409449 mtime=3912828710 nm=Customizing the generic plugin
#_<markdown>
#_
#_<a name="customizing"></a>
#_
#_A plugin's configuration is described in its **CMakeLists.txt** file.
#_It accepts (among others) the following parameters:
#_
#_- **`project(<plugin name>)`**<br>
#_  name of the plugin, e.g.:   <br>
#_  `project(hello)`            <br>
#_  will result in `hello.far-plug-wide` DLL.
#_
#_- **`EXP_NAMES`**<br>
#_  list of functions that should be exported by the plugin
#_  (in uppercase, whitespace-separated), e.g.:<br>
#_  `set(EXP_NAMES OPENPLUGIN EXITFAR)`        <br>
#_(The functions `SetStartupInfoW`, `GetGlobalInfoW`, `GetPluginInfoW` and `ProcessSynchroEventW`
#_are always exported, so there's no need to include them in the list.)
#_
#_@@@
#_

article id=426 dt=Text ctime=3851409469 mtime=3910446154 nm=Extra exported functions

article id=427 dt=Text ctime=3851421218 mtime=3851421394 nm=far.Guids
#_far.Guids
#_
#_**Description:**
#_  A table containing GUIDs of various Far Manager dialogs.
#_
#_  GUIDs are given in upper-case text representation, e.g.
#_    FindFileId = '8C9EAD29-910F-4B24-A669-EDAFBA6ED964'
#_
#_@@@
#_

article id=428 dt=Text ctime=3851439608 mtime=3907828207 nm=Macro Control
#_<markdown>
#_- [`far.MacroAdd`]           (477.html)
#_- [`far.MacroCheck`]         (429.html)
#_- [`far.MacroDelete`]        (478.html)
#_- [`far.MacroExecute`]       (474.html)
#_- [`far.MacroGetArea`]       (430.html)
#_- [`far.MacroGetLastError`]  (475.html)
#_- [`far.MacroGetState`]      (431.html)
#_- [`far.MacroLoadAll`]       (432.html)
#_- [`far.MacroPost`]          (433.html)
#_- [`far.MacroSaveAll`]       (434.html)
#_

article id=429 dt=Text ctime=3851440061 mtime=3861762920 nm=far.MacroCheck
#_result = far.MacroCheck (SequenceText, Flags)
#_
#_**Parameters:**
#_  SequenceText: string
#_  Flags:        flags (defaults to 0)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  `MacroControl`(`MCTL_SENDSTRING`, `MSSC_CHECK`)
#_
#_@@@
#_[MSSC_CHECK]: https://api.farmanager.com/ru/service_functions/macrocontrol.html#MSSC_CHECK
#_[MacroControl]: https://api.farmanager.com/ru/service_functions/macrocontrol.html
#_[MCTL_SENDSTRING]: https://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_SENDSTRING
#_

article id=430 dt=Text ctime=3851440090 mtime=3861763339 nm=far.MacroGetArea
#_result = far.MacroGetArea ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result: integer
#_
#_**Far API used:**
#_  `MacroControl`(`MCTL_GETAREA`)
#_
#_@@@
#_[MCTL_GETAREA]: https://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_GETAREA
#_[MacroControl]: https://api.farmanager.com/ru/service_functions/macrocontrol.html
#_

article id=431 dt=Text ctime=3851440130 mtime=3861763425 nm=far.MacroGetState
#_result = far.MacroGetState ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result: integer
#_
#_**Far API used:**
#_  `MacroControl`(`MCTL_GETSTATE`)
#_
#_@@@
#_[MCTL_GETSTATE]: https://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_GETSTATE
#_[MacroControl]: https://api.farmanager.com/ru/service_functions/macrocontrol.html
#_

article id=432 dt=Text ctime=3851440174 mtime=3861763454 nm=far.MacroLoadAll
#_result = far.MacroLoadAll ([path [,flags]])
#_
#_**Parameters:**
#_  path:   string, or nil
#_  flags:  flags
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  `MacroControl`(`MCTL_LOADALL`)
#_
#_@@@
#_[MCTL_LOADALL]: https://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_LOADALL
#_[MacroControl]: https://api.farmanager.com/ru/service_functions/macrocontrol.html
#_

article id=433 dt=Text ctime=3851440284 mtime=3861763545 nm=far.MacroPost
#_result = far.MacroPost (SequenceText, Flags, AKey)
#_
#_**Parameters:**
#_  SequenceText: string
#_  Flags:        flags (defaults to 0)
#_  AKey:         integer, or string (e.g. "CtrlShiftF12"); optional
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  `MacroControl`(`MCTL_SENDSTRING`, `MSSC_POST`)
#_
#_@@@
#_[MacroControl]: https://api.farmanager.com/ru/service_functions/macrocontrol.html
#_[MSSC_POST]: https://api.farmanager.com/ru/service_functions/macrocontrol.html#MSSC_POST
#_[MCTL_SENDSTRING]: https://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_SENDSTRING
#_

article id=434 dt=Text ctime=3851440306 mtime=3861763723 nm=far.MacroSaveAll
#_result = far.MacroSaveAll ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  `MacroControl`(`MCTL_SAVEALL`)
#_
#_@@@
#_[MCTL_SAVEALL]: https://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_SAVEALL
#_[MacroControl]: https://api.farmanager.com/ru/service_functions/macrocontrol.html
#_

article id=435 dt=Text ctime=3852040835 mtime=3852040910 nm=win.Sleep
#_win.Sleep (milliseconds)
#_
#_**Parameters:**
#_  milliseconds: number
#_
#_**Returns:**
#_  nothing
#_
#_**Linux API used:**
#_  usleep
#_

article id=436 dt=Text ctime=3852043928 mtime=3852044004 nm=win.GetCurrentDir
#_dir = win.GetCurrentDir ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  dir : string (or nil)
#_
#_**Linux API used:**
#_  getcwd
#_

article id=437 dt=Text ctime=3852044260 mtime=3906376490 nm=win.SetCurrentDir
#_result = win.SetCurrentDir (dir)
#_
#_**Parameters:**
#_  dir    : string 
#_
#_**Returns:**
#_  result : boolean
#_
#_**Note:**
#_  This function seems to have no effect under far2m.
#_
#_**Linux API used:**
#_  chdir
#_

article id=438 dt=Text ctime=3852117934 mtime=3900525801 nm=far.CreateUserControl
#_<markdown>
#_Buffer support for `DI_USERCONTROL`. Use it like this:
#_
#_    local buffer=far.CreateUserControl(10,10)
#_    local textel={Char="a",Attributes=0x4C}
#_    for ii=1,#buffer do
#_      buffer[ii]=textel
#_    end
#_    local items={
#_      {"DI_DOUBLEBOX",0,0,11,11,0,0,0,0,""},
#_      {"DI_USERCONTROL",1,1,10,10,buffer,0,0,0,""}
#_    }
#_
#_@@@
#_{di_usercontrol}: https://api.farmanager.com/ru/dialogapi/controls/di_usercontrol.html
#_
#_

article id=447 dt=Text ctime=3852492345 mtime=3883979361 nm=export.MayExitFAR
#_result = export.MayExitFAR()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Far API used:**
#_  MayExitFARW
#_
#_@@@
#_

article id=448 dt=Text ctime=3852533773 mtime=3852533888 nm=LF_MayExitFAR
#_<markdown>
#_    int LF_MayExitFAR(lua_State* L)
#_
#_#### Parameters:
#_      L:       Lua state
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_
#_If Lua function [`export.MayExitFAR`](447.html) exists, it is called.
#_
#_@@@
#_

article id=449 dt=Text ctime=3852926106 mtime=3879507031 nm=far.Execute
#_result = far.Execute (CmdStr, ExecFlags)
#_
#_**Parameters:**
#_  CmdStr:     string
#_  ExecFlags:  flags combination
#_    EF_HIDEOUT = 0x01    : don't display output of the command
#_    EF_NOWAIT  = 0x02    : don't wait for command completion
#_    EF_SUDO    = 0x04    : command must be run with root priviledges
#_    EF_NOTIFY  = 0x08    : notify when command completed
#_                           (if such notifications enabled in settings)
#_    EF_NOCMDPRINT = 0x10 : don't print command in command line
#_                           nor include it to history
#_    EF_OPEN    = 0x20    : use desktop shell (if present) to open command
#_                           (e.g. URLs, documents..)
#_
#_**Returns:**
#_  result:     integer
#_
#_**Far API used:**
#_  FSF.Execute
#_
#_@@@
#_

article id=450 dt=Text ctime=3852926114 mtime=3879491421 nm=far.ExecuteLibrary
#_result = far.ExecuteLibrary (Library, Symbol, CmdStr, ExecFlags)
#_
#_**Parameters:**
#_  Library:    string
#_  Symbol:     string
#_  CmdStr:     string
#_  ExecFlags:  flags (see `far.Execute`)
#_
#_**Returns:**
#_  result:     integer
#_
#_**Far API used:**
#_  FSF.ExecuteLibrary
#_
#_@@@
#_[far.Execute]: 449.html
#_

article id=451 dt=Text ctime=3852953930 mtime=3852954119 nm=far.DisplayNotification
#_far.DisplayNotification (action, object)
#_
#_**Parameters:**
#_  action:  string
#_  object:  string
#_
#_**Returns:**
#_  nothing
#_
#_**Far API used:**
#_  FSF.DisplayNotification
#_
#_@@@
#_

article id=452 dt=Text ctime=3852954168 mtime=3877361581 nm=far.DispatchInterThreadCalls
#_result = DispatchInterThreadCalls()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result:  integer
#_
#_**Far API used:**
#_  FSF.DispatchInterThreadCalls
#_
#_@@@
#_

article id=453 dt=Text ctime=3852954289 mtime=3852954473 nm=far.BackgroundTask
#_far.BackgroundTask (Info, Started)
#_
#_**Parameters:**
#_  Info:     string
#_  Started:  boolean
#_
#_**Returns:**
#_  nothing
#_
#_**Far API used:**
#_  FSF.BackgroundTask
#_
#_
#_@@@
#_

article id=454 dt=Text ctime=3853224715 mtime=3916572407 nm=panel.SetDirectoriesFirst
#_result = panel.SetDirectoriesFirst (handle, whatpanel [, setfirst])
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_  setfirst:  boolean (false=don't set directories first; true=set first;
#_                      defaults to false)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_SETDIRECTORIESFIRST
#_
#_@@@
#_

article id=455 dt=Text ctime=3853322264 mtime=3916572046 nm=panel.GetPanelPluginHandle
#_panel_handle = panel.GetPanelPluginHandle (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:        panel handle
#_  whatpanel:     1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  panel_handle:  lightuserdata, or nil
#_
#_**Far API used:**
#_  Control, FCTL_GETPANELPLUGINHANDLE
#_
#_@@@
#_

article id=456 dt=Text ctime=3853330590 mtime=3853330626 nm=win.IsProcess64bit
#_result = win.IsProcess64bit ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result: boolean
#_
#_**Description:**
#_  Returns **true** if called from FAR x64, **false** otherwise.
#_

article id=457 dt=Text ctime=3853444384 mtime=3916571490 nm=panel.BeginSelection
#_result = panel.BeginSelection (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:       panel handle, or nil
#_  whatpanel:    1=active panel, 0=passive panel
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_BEGINSELECTION
#_
#_@@@
#_

article id=458 dt=Text ctime=3853444404 mtime=3916571690 nm=panel.EndSelection
#_result = panel.EndSelection (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:       panel handle, or nil
#_  whatpanel:    1=active panel, 0=passive panel
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  Control, FCTL_ENDSELECTION
#_
#_@@@
#_

article id=459 dt=Text ctime=3853503608 mtime=3903193155 nm=far.Log
#_count = far.Log (message)
#_
#_**Parameters:**
#_  message : string
#_
#_**Returns:**
#_  count   : integer
#_
#_**Description:**
#_  Appends <message> into the file **$HOME/luafar_log.txt**
#_  Returns count of the internal Log calls in the current Far session.
#_
#_@@@
#_

article id=460 dt=Text ctime=3853601291 mtime=3853601761 nm=win.GetFileAttr
#_attr = win.GetFileAttr (FileName)
#_
#_**Parameters:**
#_  FileName: string
#_
#_**Returns:**
#_  attr:     string (see `tFindData` page), or nil
#_
#_**Windows API used:**
#_  GetFileAttributesW
#_
#_@@@
#_[tFindData]: 90.html
#_

article id=461 dt=Text ctime=3853775362 mtime=3853776891 nm=far.InputRecordToName
#_Name = far.InputRecordToName(Rec)
#_
#_**Parameters:**
#_  Rec:  table `tInputRecord`
#_
#_**Returns:**
#_  Name: string, or nil
#_
#_**Description:**
#_  The function returns a string representation of an `tInputRecord`.
#_
#_**Note:**
#_  Currently, processing is only implemented for records of types
#_  *KEY_EVENT* and *FARMACRO_KEY_EVENT*.
#_
#_@@@
#_[tInputRecord]: 187.html
#_

article id=462 dt=Text ctime=3853816798 mtime=3901549246 nm=Methods of dialog handle
#_Besides passing the dialog handle as a parameter to `far.SendDlgMessage`
#_there is an alternative way: using dialog handle methods. The latter
#_is shorter and more expressive, e.g. the following 2 calls do the same
#_thing:
#_    1) `far.SendDlgMessage`(hDlg, "DM_SETTEXT", item2, "Hello")
#_    2) hDlg:SetText(item2, "Hello")
#_
#_Below is a table of correspondence between dialog messages
#_and dialog handle methods:
#_
#_  AddHistory              DM_ADDHISTORY
#_  Close                   DM_CLOSE
#_  EditUnchangedFlag       DM_EDITUNCHANGEDFLAG
#_  Enable                  DM_ENABLE
#_  EnableRedraw            DM_ENABLEREDRAW
#_  First                   DM_FIRST
#_  GetCheck                DM_GETCHECK
#_  GetColor                DM_GETCOLOR
#_  GetComboboxEvent        DM_GETCOMBOBOXEVENT
#_  GetConstTextPtr         DM_GETCONSTTEXTPTR
#_  GetCursorPos            DM_GETCURSORPOS
#_  GetCursorSize           DM_GETCURSORSIZE
#_  GetDialogInfo           DM_GETDIALOGINFO
#_  GetDlgData              DM_GETDLGDATA
#_  GetDlgItem              DM_GETDLGITEM
#_  GetDlgRect              DM_GETDLGRECT
#_  GetDropdownOpened       DM_GETDROPDOWNOPENED
#_  GetEditPosition         DM_GETEDITPOSITION
#_  GetFocus                DM_GETFOCUS
#_  GetItemData             DM_GETITEMDATA
#_  GetItemPosition         DM_GETITEMPOSITION
#_  GetSelection            DM_GETSELECTION
#_  GetText                 DM_GETTEXT
#_  GetTrueColor            DM_GETTRUECOLOR
#_  Key                     DM_KEY
#_  ListAdd                 DM_LISTADD
#_  ListAddStr              DM_LISTADDSTR
#_  ListDelete              DM_LISTDELETE
#_  ListFindString          DM_LISTFINDSTRING
#_  ListGetCurPos           DM_LISTGETCURPOS
#_  ListGetData             DM_LISTGETDATA
#_  ListGetDataSize         DM_LISTGETDATASIZE
#_  ListGetItem             DM_LISTGETITEM
#_  ListGetTitles           DM_LISTGETTITLES
#_  ListInfo                DM_LISTINFO
#_  ListInsert              DM_LISTINSERT
#_  ListSet                 DM_LISTSET
#_  ListSetCurPos           DM_LISTSETCURPOS
#_  ListSetData             DM_LISTSETDATA
#_  ListSetMouseReaction    DM_LISTSETMOUSEREACTION
#_  ListSetTitles           DM_LISTSETTITLES
#_  ListSort                DM_LISTSORT
#_  ListUpdate              DM_LISTUPDATE
#_  MoveDialog              DM_MOVEDIALOG
#_  Redraw                  DM_REDRAW
#_  ResizeDialog            DM_RESIZEDIALOG
#_  Set3State               DM_SET3STATE
#_  SetCheck                DM_SETCHECK
#_  SetColor                DM_SETCOLOR
#_  SetComboboxEvent        DM_SETCOMBOBOXEVENT
#_  SetCursorPos            DM_SETCURSORPOS
#_  SetCursorSize           DM_SETCURSORSIZE
#_  SetDlgData              DM_SETDLGDATA
#_  SetDlgItem              DM_SETDLGITEM
#_  SetDropdownOpened       DM_SETDROPDOWNOPENED
#_  SetEditPosition         DM_SETEDITPOSITION
#_  SetFocus                DM_SETFOCUS
#_  SetHistory              DM_SETHISTORY
#_  SetItemData             DM_SETITEMDATA
#_  SetItemPosition         DM_SETITEMPOSITION
#_  SetMaxTextLength        DM_SETMAXTEXTLENGTH
#_  SetMouseEventNotify     DM_SETMOUSEEVENTNOTIFY
#_  SetReadOnly             DM_SETREADONLY
#_  SetSelection            DM_SETSELECTION
#_  SetText                 DM_SETTEXT
#_  SetTextPtr              DM_SETTEXTPTR
#_  SetTrueColor            DM_SETTRUECOLOR
#_  ShowDialog              DM_SHOWDIALOG
#_  ShowItem                DM_SHOWITEM
#_  User                    DM_USER
#_
#_@@@
#_[far.SendDlgMessage]: 71.html
#_

article id=463 dt=Text ctime=3853931289 mtime=3917242568 nm=actl namespace
#_This is an alternative interface to FAR's advanced control commands.
#_It is shorter and more expressive, e.g. the following 2 calls do the
#_same thing:
#_    1) info = far.AdvControl("ACTL_GETWINDOWINFO", 2)
#_    2) info = actl.GetWindowInfo(2)
#_
#_**actl** is a global table containing those alternative functions.
#_Below is a table of correspondence between **ACTL_** messages
#_and functions from the **actl** table:
#_
#_  Commit                  ACTL_COMMIT
#_  GetArrayColor           ACTL_GETARRAYCOLOR
#_  GetColor                ACTL_GETCOLOR
#_  GetConfirmations        ACTL_GETCONFIRMATIONS
#_  GetCursorPos            ACTL_GETCURSORPOS
#_  GetDescSettings         ACTL_GETDESCSETTINGS
#_  GetDialogSettings       ACTL_GETDIALOGSETTINGS
#_  GetFarRect              ACTL_GETFARRECT
#_  GetFarVersion           ACTL_GETFARVERSION
#_  GetInterfaceSettings    ACTL_GETINTERFACESETTINGS
#_  GetPanelSettings        ACTL_GETPANELSETTINGS
#_  GetPluginMaxReadData    ACTL_GETPLUGINMAXREADDATA
#_  GetShortWindowInfo      ACTL_GETSHORTWINDOWINFO
#_  GetSystemSettings       ACTL_GETSYSTEMSETTINGS
#_  GetSysWordDiv           ACTL_GETSYSWORDDIV
#_  GetWindowCount          ACTL_GETWINDOWCOUNT
#_  GetWindowInfo           ACTL_GETWINDOWINFO
#_  Quit                    ACTL_QUIT
#_  RedrawAll               ACTL_REDRAWALL
#_  SetArrayColor           ACTL_SETARRAYCOLOR
#_  SetCurrentWindow        ACTL_SETCURRENTWINDOW
#_  SetCursorPos            ACTL_SETCURSORPOS
#_  Synchro                 ACTL_SYNCHRO
#_  WaitKey                 ACTL_WAITKEY
#_  WinPortBackEnd          ACTL_WINPORTBACKEND
#_
#_@@@
#_[far.SendDlgMessage]: 71.html
#_

article id=464 dt=Text ctime=3854290368 mtime=3854291050 nm=win.Clock
#_result = win.Clock ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result : number
#_
#_**Description:**
#_  The function returns value that is some quantity expressed
#_  in *seconds* and it usually has a fractional part.
#_
#_**Linux API used:**
#_  clock_gettime
#_
#_@@@
#_

article id=465 dt=Text ctime=3856361840 mtime=3856361940 nm=win.FileTimeToLocalFileTime
#_local_ftime = win.FileTimeToLocalFileTime (ftime)
#_
#_**Parameters:**
#_  ftime       : number (number of milliseconds since January 1, 1601)
#_
#_**Returns:**
#_  local_ftime : number (number of milliseconds since January 1, 1601)
#_
#_**Windows API used:**
#_  FileTimeToLocalFileTime
#_

article id=466 dt=Text ctime=3859993119 mtime=3889634161 nm=editor.DelColor
#_result = editor.DelColor (EditorId, StringNumber [, StartPos])
#_
#_**Parameters:**
#_  EditorId:     integer, or nil
#_  StringNumber: integer, or nil
#_  StartPos:     integer (1-based); default=0
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_ADDCOLOR
#_
#_@@@
#_

article id=467 dt=Text ctime=3861011876 mtime=3912828916 nm=GetGlobalInfoW
#_<markdown>
#_`void GetGlobalInfoW(struct GlobalInfo *Info)`
#_
#_### Description:
#_  The function sets `Info->SysID` (the plugin's identifier; a 32-bit unsigned int)
#_  and other fields with information about the plugin.
#_
#_### Notes:
#_  1. LuaFAR plugins are required to export this function.
#_  1. `GetGlobalInfoW` is called by Far prior to [`SetStartupInfoW()`](118.html)
#_     and Far Manager fills the `Private` field of `StartupInfo` struct
#_     if `SysID` identifies one of the "known plugins".
#_
#_@@@
#_

article id=468 dt=Text ctime=3861166983 mtime=3889634649 nm=viewer.GetFileName
#_FileName = viewer.GetFileName (ViewerId)
#_
#_**Parameters:**
#_  ViewerId: integer, or nil
#_
#_**Returns:**
#_  FileName: string
#_
#_**Far API used:**
#_  ViewerControl, VCTL_GETINFO
#_
#_@@@
#_
#_

article id=469 dt=Text ctime=3861201377 mtime=3861201471 nm=win.SetFileAttr
#_result = win.SetFileAttr (FileName, Attr)
#_
#_**Parameters:**
#_  FileName: string
#_  Attr:     string (see `tFindData` page)
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Windows API used:**
#_  SetFileAttributesW
#_
#_@@@
#_[tFindData]: 90.html
#_

article id=471 dt=Text ctime=3507278228 mtime=3861560909 nm=bit64
#_<markdown>
#_As Far 3.0 started to use 64-bit integer values ("flags") in its API, arose the need to represent and handle them from Lua. This is the role of **bit64** library.
#_
#_The library represents and accepts flags as either numbers or "64 bit integer" userdata. Values that fit in 53 bits can be represented in both ways. Greater values are always represented as userdata.
#_
#_Userdata values created by the library support the following operations (metamethods):<br>
#_`+`, `-`, `*`, `/`, `%`, `==`, `<`, `<=`, unary minus, `tonumber`.
#_
#_`__tostring` metamethod of "64-bit type" userdata returns an acceptable string representation that when passed to [`new`][new] will produce a value equal to the original one.
#_
#_The library has the following functions:
#_
#_* *`bnot`*    - gets a flag, returns a flag
#_* *`band`*    - gets multiple flags, returns a flag
#_* *`bor`*     - gets multiple flags, returns a flag
#_* *`bxor`*    - gets multiple flags, returns a flag
#_* *`lshift`*  - gets a flag and an integer, returns a flag
#_* *`rshift`*  - gets a flag and an integer, returns a flag
#_* *`arshift`* - gets a flag and an integer, returns a flag
#_* *`add`*     - gets multiple flags, returns a flag
#_* *`mul`*     - gets multiple flags, returns a flag
#_* *`sub`*     - gets 2 flags, returns a flag
#_* *`div`*     - gets 2 flags, returns a flag
#_* *`mod`*     - gets 2 flags, returns a flag
#_
#_The functions above always return a number if the result fits into 53 bits.
#_
#_* *`eq`*      - gets 2 flags, returns a boolean
#_* *`lt`*      - gets 2 flags, returns a boolean
#_* *`le`*      - gets 2 flags, returns a boolean
#_
#_The functions above are useful for comparisons where each operand may be either a "64 bit integer" type userdata or a number. They compare underlying 64-bit integers.
#_
#_* [*`new`*][new]   - gets a string, number or flag representation, returns a flag
#_* [*`type`*][type] - gets a value, returns a string (or nil)
#_
#_[new]: 473.html
#_[type]: 472.html
#_
#_

article id=472 dt=Text ctime=3553401501 mtime=3554959390 nm=bit64.type
#_result = bit64.type (val)
#_
#_**Parameters:**
#_  val:    any type
#_
#_**Returns:**
#_  result: string, or nil
#_
#_**Description:**
#_
#_The function returns string *"64 bit integer"* if argument *val*
#_is a userdata of the type created by this library, otherwise nil
#_is returned.
#_

article id=473 dt=Text ctime=3553400683 mtime=3554816005 nm=bit64.new
#_result = bit64.new (arg)
#_
#_**Parameters:**
#_  arg:     string, number or userdata
#_
#_**Returns:**
#_  result:  userdata, or nil
#_
#_**Description:**
#_
#_This function creates a new "64-bit int" type userdata from the input value.
#_
#_If *arg* is a string, it must be an acceptable string representation of
#_a 64-bit integer. The function returns *nil* if the input string can not
#_be converted.
#_
#_The string representation of an integer acceptable by the function must
#_have either the hexadecimal form
#_  **-?0[xX][0-9A-Fa-f]{1,16}**, e.g. "0x56DF5"
#_or the decimal form
#_  **-?[0-9]+**, e.g. "-234567".
#_
#_If *arg* is a number, it must fit in 53 bits, otherwise nil is returned.
#_
#_If *arg* is a "64-bit int" type userdata then a new userdata with the same
#_value is created and returned.
#_
#_

article id=474 dt=Text ctime=3861727323 mtime=3865959595 nm=far.MacroExecute
#_result = far.MacroExecute (SequenceText, Flags, ...)
#_
#_**Parameters:**
#_  SequenceText: string
#_  Flags:        flags (optional)
#_  ...:          arguments for passing to script (optional)
#_
#_**Returns:**
#_  result: table (array of elements returned by the script), or nil
#_
#_**Description:**
#_  Execute a script in the context of LuaMacro plugin.
#_
#_**Notes:**
#_  1. Arguments being passed to the script may be of the following Lua types:
#_     string, boolean, number, nil, "int64", or "binary".
#_
#_  2. The returned table contains field "n" - number of elements in the array.
#_     Use it instead of #result, since there can be elements with nil value.
#_
#_     To properly unpack the table, do:
#_         unpack(result, 1, result.n)
#_
#_**Definitions:**
#_  **"int64"**
#_    Type of userdata, produced by `bit64` library.
#_  **"binary"**
#_    By convention, it is a string enclosed in a table as its first element.
#_    The string is intended to be passed to and from without conversions UTF-8 <-> UTF-32LE.
#_
#_**Far API used:**
#_  `MacroControl`(`MCTL_EXECSTRING`)
#_
#_@@@
#_[bit64]: 471.html
#_[MacroControl]: https://api.farmanager.com/ru/service_functions/macrocontrol.html
#_[MCTL_EXECSTRING]: https://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_EXECSTRING
#_

article id=475 dt=Text ctime=3861727416 mtime=3861763383 nm=far.MacroGetLastError
#_result = far.MacroGetLastError()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result:  table
#_             ErrCode:  integer
#_             ErrPosX:  integer
#_             ErrPosY:  integer
#_             ErrSrc:   string
#_
#_**Far API used:**
#_  `MacroControl`(`MCTL_GETLASTERROR`)
#_
#_@@@
#_[MCTL_GETLASTERROR]: https://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_GETLASTERROR
#_[MacroControl]: https://api.farmanager.com/ru/service_functions/macrocontrol.html
#_

article id=476 dt=Text ctime=3861778095 mtime=3861778166 nm=far.GetPluginId
#_PluginId = far.GetPluginId()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  PluginId: integer
#_
#_@@@
#_

article id=477 dt=Text ctime=3862320428 mtime=3862320801 nm=far.MacroAdd
#_Id = far.MacroAdd (Area, Flags, AKey, SequenceText, Description, Callback, Priority)
#_
#_**Parameters:**
#_  Area:         flags (defaults to MACROAREA_COMMON)
#_  Flags:        flags (defaults to 0)
#_  AKey:         string (e.g. "CtrlShiftF12")
#_  SequenceText: string
#_  Description:  string (defaults to "")
#_  Callback:     function, or nil
#_  Priority:     integer (defaults to 50)
#_
#_**Returns:**
#_  Id:           userdata (success), or nil (failure)
#_                  used in Callback and `far.MacroDelete`
#_
#_**Far API used:**
#_  `MacroControl`(`MCTL_ADDMACRO`)
#_
#_**Example:**
#_  local F = far.Flags
#_
#_  local function Callback (Id, Flags)
#_    return some_condition and another_condition
#_  end
#_
#_  local Id = far.MacroAdd(
#_    F.MACROAREA_SHELL,
#_    0,
#_    "CtrlShiftF12",
#_    'msgbox("test","test")',
#_    "cool macro",
#_    Callback)
#_
#_@@@
#_[far.MacroDelete]: 478.html
#_[MacroControl]: https://api.farmanager.com/ru/service_functions/macrocontrol.html
#_[MCTL_ADDMACRO]: https://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_ADDMACRO
#_

article id=478 dt=Text ctime=3862320437 mtime=3862320979 nm=far.MacroDelete
#_result = far.MacroDelete (Id)
#_
#_**Parameters:**
#_  Id:      userdata (value returned by `far.MacroAdd`)
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Far API used:**
#_  `MacroControl`(`MCTL_DELMACRO`)
#_
#_@@@
#_[MacroControl]: https://api.farmanager.com/ru/service_functions/macrocontrol.html
#_[far.MacroAdd]: 477.html
#_[MCTL_DELMACRO]: https://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_DELMACRO
#_

article id=479 dt=Text ctime=3862762502 mtime=3910652287 nm=far.ColorDialog
#_OutColor = far.ColorDialog (InColor, Flags)
#_
#_**Parameters:**
#_  InColor:      table or integer (optional; default = 0x0F)
#_  Flags:        flags
#_
#_**Returns:**
#_  OutColor:     table, or nil
#_
#_**Description:**
#_  The input table may and the output one will have the following fields:
#_    ForegroundColor:  integer (24 bits), default = 0
#_    BackgroundColor:  integer (24 bits), default = 0
#_    PaletteColor:     integer (8 bits),  default = 0x0F
#_    Transparency:     integer (8 bits),  default = 0
#_
#_  The input table may specify integer indexes [1] to [4]
#_  rather than string fields.
#_
#_**Far API used:**
#_  ColorDialog
#_
#_@@@
#_

article id=480 dt=Text ctime=3863280268 mtime=3863280841 nm=win.CopyFile
#_result = win.CopyFile (source, target [, fail_if_exists])
#_
#_**Parameters:**
#_  source:         string
#_  target:         string
#_  fail_if_exists: boolean (defaults to false)
#_
#_**Returns:**
#_  result:         true (or: nil, errormessage)
#_
#_**Notes:**
#_  1. The function is implemented using *fopen*, *fread*, *fwrite*, *fclose*.
#_  2. The function does not copy the attributes and times of the source file.
#_  3. If *source* and *target* point to the same file then this file may be destroyed.
#_

article id=481 dt=Text ctime=3863801209 mtime=3865959577 nm=editor.GetStringW
#_Same as `editor.GetString` but *StringText* and *StringEOL* are encoded in UTF-32LE.
#_
#_@@@
#_[editor.GetString]: 31.html
#_

article id=483 dt=Text ctime=3864718897 mtime=3867736447 nm=regex.tfind, tfindW
#_from, to, tbl = regex.tfind (subj, pattern, [init], [cflags])
#_
#_**Parameters:**
#_  subj    :  string
#_  pattern :  string
#_  init    :  integer (default=1; can be negative)
#_  cflags  :  string (any combination of 'i','m','o','s' and 'x')
#_
#_**Returns on success:**
#_  from    : integer
#_  to      : integer
#_  tbl     : table (array of captures);
#_            (there can be *false* in place of captures not participated in the match)
#_
#_**Returns on failure:**
#_  nil
#_
#_**Note:**
#_*regex.tfindW* receives its 1-st argument and returns captures in
#_UTF-32LE encoding.
#_
#_**Far API used:**
#_  `RegExpControl`
#_
#_@@@
#_[RegExpControl]: https://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_

article id=484 dt=Text ctime=3864719159 mtime=3867736618 nm=methods tfind, tfindW
#_from, to, tbl = regex_object:tfind (subj, [init])
#_
#_**Parameters:**
#_  subj    :  string
#_  init    :  integer (default=1; can be negative)
#_
#_**Returns on success:**
#_  from    : integer
#_  to      : integer
#_  tbl     : table (array of captures);
#_            (there can be *false* in place of captures not participated in the match)
#_
#_**Returns on failure:**
#_  nil
#_
#_**Note:**
#_*regex_object:tfindW* receives its 1-st argument and returns captures
#_in UTF-32LE encoding.
#_
#_**Far API used:**
#_  `RegExpControl`
#_
#_@@@
#_[RegExpControl]: https://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_

article id=485 dt=Text ctime=3866071840 mtime=3907298158 nm=export.ProcessConsoleInput
#_ret = export.ProcessConsoleInput (Rec)
#_
#_**Parameters:**
#_  Rec:   table `tInputRecord`
#_
#_**Returns:**
#_  ret:   0, 1, or table `tInputRecord`
#_    **Details:**
#_    - 0/false : 0 is returned to FAR ("continue processing")
#_    - 1/true  : 1 is returned to FAR ("stop processing")
#_    - a table : 2 is returned to FAR ("*Rec* was changed");
#_      this table is converted to an INPUT_RECORD which is also passed to FAR.
#_
#_**Far API used:**
#_  ProcessConsoleInputW
#_
#_@@@
#_[tInputRecord]: 187.html
#_

article id=486 dt=Text ctime=3866132436 mtime=3870956917 nm=C-functions

article id=488 dt=Text ctime=3867734456 mtime=3867735676 nm=regex.exec, execW
#_from, to, offsets = regex.exec (s, pattern, [init], [cflags])
#_
#_**Parameters:**
#_  s       :  string
#_  pattern :  string
#_  init    :  integer (default=1; can be negative)
#_  cflags  :  string (any combination of 'i','m','o','s' and 'x')
#_
#_**Returns:**
#_  from    : integer
#_  to      : integer
#_  offsets : table - array of captures' offsets (there can be *false*
#_                    in place of captures not participated in the match)
#_
#_**Example:**
#_  If the whole match is at offsets 10,20 and substring matches are
#_  at offsets 12,14 and 16,19 then the function returns the following:
#_  10, 20, { 12,14,16,19 }.
#_
#_**Note:**
#_*regex.execW* receives its 1-st argument in UTF-32LE encoding.
#_
#_**Far API used:**
#_  `RegExpControl`
#_
#_@@@
#_[RegExpControl]: https://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_

article id=489 dt=Text ctime=3867734783 mtime=3867736489 nm=methods exec, execW
#_from, to, offsets = regex_object:exec (subj [, init])
#_
#_**Parameters:**
#_  subj   :  string
#_  init   :  integer (default=1; can be negative)
#_
#_**Returns:**
#_  from    : integer
#_  to      : integer
#_  offsets : table - array of captures' offsets (there can be *false*
#_                    in place of captures not participated in the match)
#_
#_**Example:**
#_  If the whole match is at offsets 10,20 and substring matches are
#_  at offsets 12,14 and 16,19 then the method returns the following:
#_  10, 20, { 12,14,16,19 }.
#_
#_**Note:**
#_*regex_object:execW* receives its 1-st argument in UTF-32LE encoding.
#_
#_**Far API used:**
#_  `RegExpControl`
#_
#_@@@
#_[RegExpControl]: https://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_

article id=490 dt=Text ctime=3867751767 mtime=3867751916 nm=editor.SetStringW
#_Same as `editor.SetString` but *StringText* and *StringEOL*
#_should be encoded in UTF-32LE.
#_
#_@@@
#_[editor.SetString]: 44.html
#_

article id=491 dt=Text ctime=3867754214 mtime=3867754267 nm=win.lenW
#_length = win.lenW (str)
#_
#_**Parameters:**
#_  str:    string
#_
#_**Returns:**
#_  length: integer
#_
#_**Description:**
#_  This function is similar to *string.len* except that it works on UTF-32LE strings
#_  and returns their lengths as  number of characters rather than bytes.
#_

article id=492 dt=Text ctime=3867754224 mtime=3867754300 nm=win.subW
#_strOut = win.subW (str, from, to)
#_
#_**Parameters:**
#_  str:    string
#_  from:   integer (default = 1)
#_  to:     integer (default = -1)
#_
#_**Returns:**
#_  strOut: string
#_
#_**Description:**
#_  This function is similar to *string.sub* except that it works on UTF-32LE strings
#_  and considers arguments *from* and *to* expressed in characters rather than bytes.
#_

article id=493 dt=Text ctime=3869369459 mtime=3892648979 nm=far.CmpNameList
#_Result = far.CmpNameList (Mask, Name, Flags)
#_
#_**Parameters:**
#_  Mask:  string
#_  Name:  string
#_  Flags: flags  (combination of PN_SKIPPATH, PN_CASEINSENSITIVE
#_                 and PN_SHOWERRORMESSAGE; default=0)
#_
#_**Returns:**
#_  Result: boolean
#_
#_**Far API used:**
#_  FSF.ProcessName
#_
#_@@@
#_

article id=494 dt=Text ctime=3869370298 mtime=3892649244 nm=far.CheckMask
#_Result = far.CheckMask (Mask, Flags)
#_
#_**Parameters:**
#_  Mask:  string
#_  Flags: flags  (PN_SHOWERRORMESSAGE; default=0)
#_
#_**Returns:**
#_  Result: boolean
#_
#_**Far API used:**
#_  FSF.ProcessName
#_
#_@@@
#_

article id=495 dt=Text ctime=3869370435 mtime=3879499470 nm=far.GenerateName
#_Result = far.GenerateName (Mask, Name, Flags)
#_
#_**Parameters:**
#_  Mask:  string
#_  Name:  string
#_  Flags: flags (default=0)
#_
#_**Returns:**
#_  Result: string, or false
#_
#_**Far API used:**
#_  FSF.ProcessName
#_
#_@@@
#_

article id=496 dt=Text ctime=3870880710 mtime=3870923343 nm=Far2M-specific functions

article id=497 dt=Text ctime=3871192568 mtime=3889634268 nm=editor.GetTitle
#_Title = editor.GetTitle (EditorId)
#_
#_**Parameters:**
#_  EditorId     : integer, or nil
#_
#_**Returns:**
#_  Title:    string
#_
#_**Far API used:**
#_  EditorControl, ECTL_GETTITLE
#_
#_@@@
#_

article id=498 dt=Text ctime=3871200318 mtime=3916572080 nm=panel.GetPanelPrefix
#_Prefix = panel.GetPanelPrefix (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  Prefix:  string
#_
#_**Far API used:**
#_  PanelControl, FCTL_GETPANELPREFIX
#_
#_@@@
#_

article id=499 dt=Text ctime=3871203571 mtime=3916572249 nm=panel.SetActivePanel
#_result = panel.SetActivePanel (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_SETACTIVEPANEL
#_
#_@@@
#_

article id=500 dt=Text ctime=3871827136 mtime=3907258200 nm=win.WideCharToMultiByte
#_str_out = win.WideCharToMultiByte (str_in, codepage [, flags])
#_
#_**Parameters:**
#_  str_in   : string in UTF-32LE encoding
#_  codepage : integer
#_  flags    : string, a combination of 0 or more of the following
#_             characters:
#_               'c' -> WC_COMPOSITECHECK
#_               'd' -> WC_DISCARDNS
#_               's' -> WC_SEPCHARS
#_               'f' -> WC_DEFAULTCHAR
#_
#_**Returns:**
#_  str_out  : string in *codepage* encoding.
#_
#_**Windows API used:**
#_  WideCharToMultiByte
#_

article id=501 dt=Text ctime=3872013561 mtime=3919797331 nm=far.DetectCodePage
#_codepage = far.DetectCodePage (filename)
#_
#_**Parameters:**
#_  filename:   string
#_
#_**Returns:**
#_  codepage:   integer (or nil)
#_
#_**Note:**
#_  If Far2M was built with **-DUSEUCD=no** option then
#_  the detection accuracy would be greatly reduced.
#_
#_**Far API used:**
#_  FSF.DetectCodePage
#_
#_@@@
#_
#_

article id=502 dt=Text ctime=3872589307 mtime=3889634293 nm=editor.InsertTextW
#_result = editor.InsertTextW (EditorId, text [, redraw])
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  text:     string (in UTF-32LE encoding)
#_  redraw:   boolean (default=false)
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_INSERTTEXT
#_
#_@@@
#_

article id=503 dt=Text ctime=3873304138 mtime=3873304348 nm=win.GetSystemTime
#_result = win.GetSystemTime()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result   : table `tSystemTime`
#_
#_**Windows API used:**
#_  GetSystemTime
#_
#_@@@
#_[tSystemTime]: 218.html
#_

article id=504 dt=Text ctime=3873815146 mtime=3879499529 nm=far.NameToInputRecord
#_Record = far.NameToInputRecord (Name)
#_
#_**Parameters:**
#_  Name:   string
#_
#_**Returns:**
#_  Record: table `tInputRecord`, or nil
#_er
#_
#_**Far API used:**
#_  FSF.FarNameToInputRecord
#_
#_@@@
#_[tInputRecord]: 187.html
#_

article id=505 dt=Text ctime=3876148717 mtime=3876935094 nm=far.ClearPluginCache
#_result = far.ClearPluginCache (Param1, Param2)
#_
#_**Parameters:**
#_  Param1:  flags (currently "PLT_PATH")
#_  Param2:  string
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Far API used:**
#_  PluginsControlV3, PCTL_CACHEFORGET
#_
#_@@@
#_

article id=506 dt=Text ctime=3876935307 mtime=3876935369 nm=far.GetPlugins
#_plugin_handles = far.GetPlugins ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  plugin_handles: table (array of plugin handles)
#_
#_**Far API used:**
#_  PluginsControlV3, PCTL_GETPLUGINS
#_
#_@@@
#_

article id=507 dt=Text ctime=3876937531 mtime=3877053602 nm=far.FindPlugin
#_plugin_handle = far.FindPlugin (Param1, Param2)
#_
#_**Parameters:**
#_  Param1:  flags
#_  Param2:  string (ModuleName) or integer (SysID), depending on Param1
#_
#_**Returns:**
#_  plugin_handle:  userdata, or nil
#_
#_**Far API used:**
#_  PluginsControlV3, PCTL_FINDPLUGIN
#_
#_@@@
#_

article id=508 dt=Text ctime=3877053707 mtime=3895043709 nm=far.GetPluginInformation
#_Info = far.GetPluginInformation (Handle)
#_
#_**Parameters:**
#_  Handle:  userdata
#_
#_**Returns:**
#_  Info:    table, or nil
#_    ModuleName: string
#_    Flags:      flags
#_    PInfo:      table
#_      Flags:         flags
#_      DiskMenu:      table `tPluginMenuItem`
#_      PluginMenu:    table `tPluginMenuItem`
#_      PluginConfig:  table `tPluginMenuItem`
#_      CommandPrefix: string, or nil
#_    GInfo:      table
#_      StructSize:    integer
#_      SysID:         integer
#_      Version:       table (array of 4 integers)
#_      Title:         string
#_      Description:   string
#_      Author:        string
#_
#_**Far API used:**
#_  PluginsControlV3, PCTL_GETPLUGININFORMATION
#_
#_@@@
#_[tPluginMenuItem]: 560.html
#_

article id=509 dt=Text ctime=3878636920 mtime=3878637139 nm=far.Host.GetFiles
#_result = far.Host.GetFiles (handle, Items, Move, DestPath [, OpMode])
#_
#_**Parameters:**
#_  handle:    panel handle
#_  Items:     table (array of `tPluginPanelItem`)
#_  Move:      boolean
#_  DestPath:  string
#_  OpMode:    flags (default = OPM_FIND|OPM_SILENT)
#_
#_**Returns:**
#_  result:    integer
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_

article id=510 dt=Text ctime=3878636966 mtime=3878636966 nm=far.Host

article id=511 dt=Text ctime=3878636989 mtime=3878637277 nm=far.Host.GetFindData
#_Items = far.Host.GetFindData (handle [, OpMode])
#_
#_**Parameters:**
#_  handle:  panel handle
#_  OpMode:  flags (default = OPM_FIND|OPM_SILENT)
#_
#_**Returns:**
#_  Items:   table (array of `tPluginPanelItem`), or nil
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_

article id=512 dt=Text ctime=3878637011 mtime=3878637382 nm=far.Host.SetDirectory
#_result = far.Host.SetDirectory (handle, Dir [, OpMode])
#_
#_**Parameters:**
#_  handle:    panel handle
#_  Dir:       string
#_  OpMode:    flags (default = OPM_FIND|OPM_SILENT)
#_
#_**Returns:**
#_  result:    boolean
#_
#_@@@
#_

article id=513 dt=Text ctime=3881311938 mtime=3915952467 nm=Lua engine
#_<markdown>
#_By default far2m tries to load either `libluajit-5.1.so`
#_or `liblua5.1.so`, in that order.
#_
#_If the environment variable `FARPLAINLUA` is set to 1 then the order is reversed.
#_

article id=514 dt=Text ctime=3881479361 mtime=3891885000 nm=far.InMyConfig
#_Path = far.InMyConfig(subpath, create_path)
#_
#_**Parameters:**
#_  subpath     : string, default=nil
#_  create_path : boolean, default=false
#_
#_**Returns:**
#_  Path        : string
#_
#_**Description:**
#_  Returns the path in the config directory.
#_  If *create_path* is true then the function tries
#_  to create the path up to the last slash.
#_
#_**Note:**
#_  The function is not part of Far API.
#_  It uses the undocumented *utils* library which is part of far2m sources.
#_
#_@@@
#_

article id=515 dt=Text ctime=3881479376 mtime=3891884993 nm=far.InMyCache
#_Path = far.InMyCache(subpath, create_path)
#_
#_**Parameters:**
#_  subpath     : string, default=nil
#_  create_path : boolean, default=false
#_
#_**Returns:**
#_  Path        : string
#_
#_**Description:**
#_  Returns the path in the cache directory.
#_  If *create_path* is true then the function tries
#_  to create the path up to the last slash.
#_
#_**Note:**
#_  The function is not part of Far API.
#_  It uses the undocumented *utils* library which is part of far2m sources.
#_
#_@@@
#_

article id=516 dt=Text ctime=3881479391 mtime=3891885004 nm=far.InMyTemp
#_Path = far.InMyTemp(subpath)
#_
#_**Parameters:**
#_  subpath : string, default=nil
#_
#_**Returns:**
#_  Path    : string
#_
#_**Description:**
#_  Returns the path in the tmp directory.
#_
#_**Note:**
#_  The function is not part of Far API.
#_  It uses the undocumented *utils* library which is part of far2m sources.
#_
#_@@@
#_

article id=517 dt=Text ctime=3881479399 mtime=3891884985 nm=far.GetMyHome
#_Dir = far.GetMyHome()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  Dir : string
#_
#_**Description:**
#_  Returns the home directory.
#_
#_**Note:**
#_  The function is not part of Far API.
#_  It uses the undocumented *utils* library which is part of far2m sources.
#_
#_@@@
#_

article id=522 dt=Text ctime=3884191334 mtime=3884191369 nm=far.FreeScreen
#_far.FreeScreen (handle)
#_
#_**Parameters:**
#_  handle: userdata
#_
#_**Returns:**
#_  nothing
#_
#_**Far API used:**
#_  FreeScreen
#_
#_@@@
#_

article id=523 dt=Text ctime=3889374043 mtime=3889374092 nm=win.GetLocalTime
#_result = win.GetLocalTime()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result   : table `tSystemTime`
#_
#_**Windows API used:**
#_  GetLocalTime
#_
#_@@@
#_[tSystemTime]: 218.html
#_

article id=525 dt=Text ctime=3890765803 mtime=3890766070 nm=actl.WinPortBackend
#_See `far.AdvControl` and `actl namespace`.
#_
#_@@@
#_[actl namespace]: 463.html
#_[far.AdvControl]: 153.html
#_

article id=526 dt=Text ctime=3892753646 mtime=3892753730 nm=far.GetFileGroup
#_result = far.GetFileGroup (Computer, Name)
#_
#_**Parameters:**
#_  Computer: string, or nil
#_  Name:     string
#_
#_**Returns:**
#_  result:   string, or nil
#_
#_**Far API used:**
#_  FSF.GetFileGroup
#_
#_@@@
#_

article id=528 dt=Text ctime=3892829915 mtime=3892838141 nm=ACTL_COMMIT
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_COMMIT
#_  Param:    none
#_
#_**Returns:**
#_  Result:   boolean
#_

article id=530 dt=Text ctime=3892829915 mtime=3892838157 nm=ACTL_GETARRAYCOLOR
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_GETARRAYCOLOR
#_  Param:    none
#_
#_**Returns:**
#_  Result:   table (array of integers)
#_

article id=531 dt=Text ctime=3892829915 mtime=3907780089 nm=ACTL_GETCOLOR
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_GETCOLOR
#_  Param:    flag
#_
#_**Returns:**
#_  Result:   integer or nil
#_
#_**Example:**
#_  color = actl.GetColor("COL_EDITORTEXT")

article id=532 dt=Text ctime=3892829915 mtime=3907826203 nm=ACTL_GETCONFIRMATIONS
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_GETCONFIRMATIONS
#_  Param:    none
#_
#_**Returns:**
#_  Result:   integer (flags combination)
#_

article id=533 dt=Text ctime=3892829915 mtime=3892838186 nm=ACTL_GETCURSORPOS
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_GETCURSORPOS
#_  Param:    none
#_
#_**Returns:**
#_  Result:   table (see its fields below), or nil
#_              X, Y: integers
#_

article id=534 dt=Text ctime=3892829915 mtime=3907826230 nm=ACTL_GETDESCSETTINGS
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_GETDESCSETTINGS
#_  Param:    none
#_
#_**Returns:**
#_  Result:   integer (flags combination)
#_
#_

article id=535 dt=Text ctime=3892829915 mtime=3907826240 nm=ACTL_GETDIALOGSETTINGS
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_GETDIALOGSETTINGS
#_  Param:    none
#_
#_**Returns:**
#_  Result:   integer (flags combination)
#_

article id=537 dt=Text ctime=3892829915 mtime=3892838217 nm=ACTL_GETFARRECT
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_GETFARRECT
#_  Param:    none
#_
#_**Returns:**
#_  Result:  table (see its fields below), or nil
#_             Left, Top, Right, Bottom: integers
#_

article id=538 dt=Text ctime=3892829915 mtime=3892838223 nm=ACTL_GETFARVERSION
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_GETFARVERSION
#_  Param:    boolean (optional)
#_
#_**Returns:**
#_  Result:  string (e.g. "2.4"), if Param==false;
#_           two numbers (e.g. 2,4), if Param==true;
#_

article id=539 dt=Text ctime=3892829915 mtime=3907826250 nm=ACTL_GETINTERFACESETTINGS
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_GETINTERFACESETTINGS
#_  Param:    none
#_
#_**Returns:**
#_  Result:   integer (flags combination)
#_

article id=540 dt=Text ctime=3892829915 mtime=3907826261 nm=ACTL_GETPANELSETTINGS
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_GETPANELSETTINGS
#_  Param:    none
#_
#_**Returns:**
#_  Result:   integer (flags combination)
#_

article id=541 dt=Text ctime=3892829915 mtime=3892838241 nm=ACTL_GETPLUGINMAXREADDATA
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_GETPLUGINMAXREADDATA
#_  Param:    none
#_
#_**Returns:**
#_  Result:   integer
#_

article id=542 dt=Text ctime=3892829915 mtime=3892838247 nm=ACTL_GETSHORTWINDOWINFO
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_GETSHORTWINDOWINFO
#_  Param:    window number; 1-based integer (optional; default=0)
#_
#_**Returns:**
#_  Result:   table (see its fields below), or nil
#_              Type:      integer
#_              Pos:       integer (1-based)
#_              Modified:  boolean
#_              Current:   boolean
#_
#_

article id=543 dt=Text ctime=3892829915 mtime=3907826274 nm=ACTL_GETSYSTEMSETTINGS
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_GETSYSTEMSETTINGS
#_  Param:    none
#_
#_**Returns:**
#_  Result:   integer (flags combination)
#_

article id=544 dt=Text ctime=3892829915 mtime=3892838258 nm=ACTL_GETSYSWORDDIV
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_GETSYSWORDDIV
#_  Param:    none
#_
#_**Returns:**
#_  Result:   string
#_

article id=545 dt=Text ctime=3892829915 mtime=3892838263 nm=ACTL_GETWINDOWCOUNT
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_GETWINDOWCOUNT
#_  Param:    none
#_
#_**Returns:**
#_  Result:   integer
#_

article id=546 dt=Text ctime=3892829915 mtime=3892838271 nm=ACTL_GETWINDOWINFO
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_GETWINDOWINFO
#_  Param:    window number; 1-based integer (optional; default=0)
#_
#_**Returns:**
#_  Result:   table (see its fields below), or nil
#_              Type:      integer
#_              Pos:       integer (1-based)
#_              Modified:  boolean
#_              Current:   boolean
#_              TypeName:  string
#_              Name:      string
#_

article id=547 dt=Text ctime=3892829915 mtime=3907827257 nm=ACTL_KEYMACRO
#_<markdown>
#_Not supported, replaced by [Macro Control](428.html) functions.
#_

article id=549 dt=Text ctime=3892829915 mtime=3918451996 nm=ACTL_QUIT
#_far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_QUIT
#_  Param:    integer (default=0)
#_
#_**Returns:**
#_  The function either returns integer or does not return.
#_

article id=550 dt=Text ctime=3892829915 mtime=3892838294 nm=ACTL_REDRAWALL
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_REDRAWALL
#_  Param:    none
#_
#_**Returns:**
#_  Result:   boolean
#_

article id=551 dt=Text ctime=3892829915 mtime=3892838300 nm=ACTL_SETARRAYCOLOR
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_SETARRAYCOLOR
#_  Param:    table (see its fields below):
#_              Flags:       flags combination
#_              StartIndex:  integer
#_            Its array part contains integers.
#_
#_**Returns:**
#_  Result:   boolean
#_

article id=552 dt=Text ctime=3892829915 mtime=3892835367 nm=ACTL_SETCURRENTWINDOW
#_Result = far.AdvControl (Command, Param [, Param2])
#_
#_**Parameters:**
#_  Command:  ACTL_SETCURRENTWINDOW
#_  Param:    integer (1-based)
#_  Param2:   boolean (if true then ACTL_COMMIT is called after ACTL_SETCURRENTWINDOW)
#_
#_**Returns:**
#_  Result:   boolean
#_

article id=553 dt=Text ctime=3892829915 mtime=3892838312 nm=ACTL_SETCURSORPOS
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_SETCURSORPOS
#_  Param:    table (see its fields below)
#_              X, Y: integers
#_
#_**Returns:**
#_  Result:   boolean
#_

article id=556 dt=Text ctime=3892829915 mtime=3911294802 nm=ACTL_SYNCHRO
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_SYNCHRO
#_  Param:    integer
#_
#_**Returns:**
#_  Result:   integer
#_
#_

article id=557 dt=Text ctime=3892829915 mtime=3907830939 nm=ACTL_WAITKEY
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_WAITKEY
#_  Param:    flag (optional; default=0)
#_
#_**Returns:**
#_  Result:   integer
#_
#_**Example:**
#_  actl.WaitKey("KEY_F5")
#_

article id=558 dt=Text ctime=3892829915 mtime=3892838339 nm=ACTL_WINPORTBACKEND
#_Result = far.AdvControl (Command, Param)
#_
#_**Parameters:**
#_  Command:  ACTL_WINPORTBACKEND
#_  Param:    none
#_
#_**Returns:**
#_  Result:   string
#_            (either of "GUI", "TTY", "TTY|F", "TTY|X", "TTY|Xi")
#_

article id=559 dt=Text ctime=3892837992 mtime=3892837992 nm=Advanced Control

article id=560 dt=Text ctime=3894691937 mtime=3894692005 nm=tPluginMenuItem
#_<markdown>
#_**`tPluginMenuItem`** is a table with the following predefined fields:
#_
#_      Count:    integer
#_      Strings:  array of strings
#_
#_

article id=561 dt=Text ctime=3894870504 mtime=3895043731 nm=far.GetPluginGlobalInfo
#_Info = far.GetPluginGlobalInfo()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  Info:  table
#_    SysID:          integer
#_    Version:        table (array of 4 integers)
#_    Title:          string
#_    Description:    string
#_    Author:         string
#_
#_@@@
#_

article id=562 dt=Text ctime=3896535740 mtime=3896536081 nm=far.WriteConsole
#_Result = far.WriteConsole ([str])
#_
#_**Parameters:**
#_  str    : string (defaults to "")
#_
#_**Returns:**
#_  Result : boolean
#_
#_**Description:**
#_  Writes the given string to Far console
#_
#_**Note:**
#_  The function is not part of Far API.
#_
#_@@@
#_

article id=563 dt=Text ctime=3899430803 mtime=3899432491 nm=win.ExpandEnv
#_result = win.ExpandEnv (str [, remove])
#_
#_**Parameters:**
#_  str:     string
#_  remove:  boolean (default=false)
#_
#_**Returns:**
#_  result:  string
#_
#_**Description:**
#_  Replaces all occurrences of *$(var)* in *str* with the current value
#_  of environment variable *var* and returns the resulting string.
#_  
#_  *var* may be any string not containing character *)*
#_  
#_  If an environment variable *var* does not exist then *$(var)*
#_  is either left intact or removed (when *remove* is true).
#_
#_**Example:**
#_  win.ExpandEnv("-$(HOME)-$(SHELL)-") --> -/home/shmuel-/bin/bash-
#_
#_@@@
#_

article id=564 dt=Text ctime=3901029765 mtime=3901029939 nm=far.GetDlgItem
#_result = far.GetDlgItem (hDlg, numitem [,item])
#_
#_**Parameters:**
#_  hDlg:    userdata
#_  numitem: integer (1-based)
#_  item:    table, or nil
#_
#_**Returns:**
#_  result: table, or nil
#_
#_**Note:**
#_  This function is equivalent to
#_    `far.SendDlgMessage`(hDlg, "DM_GETDLGITEM", numitem, item)
#_
#_**Far API used:**
#_  SendDlgMessage, DM_GETDLGITEM
#_
#_@@@
#_[far.SendDlgMessage]: 71.html
#_
#_{dm_getdlgitem}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getdlgitem.html
#_{senddlgmessage}: http://api.farmanager.com/ru/service_functions/senddlgmessage.html
#_

article id=565 dt=Text ctime=3901029786 mtime=3901029815 nm=far.SetDlgItem
#_result = far.SetDlgItem (hDlg, numitem, item)
#_
#_**Parameters:**
#_  hDlg:    userdata
#_  numitem: integer (1-based)
#_  item:    table
#_
#_**Returns:**
#_  result: boolean
#_
#_**Note:**
#_  This function is equivalent to
#_    `far.SendDlgMessage`(hDlg, "DM_SETDLGITEM", numitem, item)
#_
#_**Far API used:**
#_  SendDlgMessage, DM_SETDLGITEM
#_
#_@@@
#_[far.SendDlgMessage]: 71.html
#_
#_{dm_setdlgitem}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setdlgitem.html
#_{senddlgmessage}: http://api.farmanager.com/ru/service_functions/senddlgmessage.html
#_

article id=566 dt=Text ctime=3902554961 mtime=3902555013 nm=win.system
#_result = win.system ([command])
#_
#_**Parameters:**
#_  command:  string, or nil
#_            (when command==nil or no arguments are passed, the underlying
#_            function *system* is called with a NULL argument)
#_
#_**Returns:**
#_  result:   integer
#_
#_**Description:**
#_  Executes a command.
#_
#_**API used:**
#_  system
#_

article id=567 dt=Text ctime=3906133864 mtime=3916572540 nm=panel.SetPanelLocation
#_result = panel.SetPanelLocation (handle, whatpanel, location)
#_
#_**Parameters:**
#_  handle:    panel handle
#_  whatpanel: 1=active panel; 0=passive panel;
#_  location:  table
#_               PluginName : string  (optional)
#_               HostFile   : string  (optional)
#_               Item       : integer (optional)
#_               Path       : string  (optional)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_SETPANELLOCATION
#_
#_@@@
#_

article id=568 dt=Text ctime=3907582185 mtime=3907582267 nm=far.SubscribeDialogDrawEvents
#_far.SubscribeDialogDrawEvents ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  nothing
#_
#_**Description:**
#_  This function affects the action of `export.ProcessDialogEvent`.
#_
#_  There is a group of frequently called events that slow down the processing.
#_  This occurs due to conversion of arguments between C and Lua.
#_
#_  For each new dialog, `export.ProcessDialogEvent` will **not** be called for the following
#_  values of *Param.Msg*:
#_      `DN_CTLCOLORDIALOG`
#_      `DN_CTLCOLORDLGITEM`
#_      `DN_CTLCOLORDLGLIST`
#_      `DN_DRAWDIALOG`
#_      `DN_DRAWDIALOGDONE`
#_      `DN_DRAWDLGITEM`
#_
#_  In order to start receiving this group of messages, call far.SubscribeDialogDrawEvents()
#_  after the dialog creation, e.g. when `DN_INITDIALOG` comes.
#_
#_**Far API used:**
#_  none
#_
#_@@@
#_

article id=569 dt=Text ctime=3909482400 mtime=3909482621 nm=win.EnsureColorsAreInverted
#_win.EnsureColorsAreInverted (X, Y)
#_
#_**Parameters:**
#_  X:  integer
#_  Y:  integer
#_
#_**Returns:**
#_  nothing
#_
#_**Note:**
#_  This function is used in the Lua implementation of ColorDialog.
#_
#_@@@
#_

article id=570 dt=Text ctime=3910123429 mtime=3910123464 nm=far.FormatFileSize
#_result = far.FormatFileSize (Size, Width, Flags [, MinSizeIndex])
#_
#_**Parameters:**
#_  Size:         number
#_  Width:        integer
#_  Flags:        flags
#_  MinSizeIndex: integer (only takes effect when *Flags* contain FFFS_MINSIZEINDEX)
#_
#_**Returns:**
#_  result:       string
#_
#_**Far API used:**
#_  FormatFileSize
#_
#_@@@
#_{fffs_minsizeindex}: http://api.farmanager.com/ru/fsf/formatfilesize.html#FFFS_MINSIZEINDEX
#_{formatfilesize}: http://api.farmanager.com/ru/fsf/formatfilesize.html
#_

article id=571 dt=Text ctime=3910446119 mtime=3910446219 nm=GetLuaState
#_<markdown>
#_
#_`lua_State* GetLuaState()`
#_
#_Returns the current main `lua_State` of the plugin.
#_
#_Do not store the returned value for further use, as it may be invalidated
#_by reloading the plugin. Instead, call this function again whenever needed.
#_
#_[1]: 495.html
#_

article id=572 dt=Text ctime=3910446132 mtime=3910446158 nm=luaopen_luaplug
#_<markdown>
#_
#_<a name="luaopen_luaplug"></a>
#_### Extra exported function: `luaopen_luaplug`
#_Some libraries (e.g. `rings`) can create additional `lua_State` instances from Lua scripts. To initialize those instances with libraries included in LuaFAR (`far`, `panel`, `editor`, etc.), call `luaopen_luaplug`. The function must be loaded via `package.loadlib`. Internally, it calls [`LF_InitOtherLuaState`](385.html).
#_
#_### Example:
#_```
#_  local rings = require "rings"
#_  local r1 = rings.new()
#_  r1:dostring([[
#_    local modname = ...
#_    assert(package.loadlib(modname, "luaopen_luaplug"))()
#_    far.Message ("Hello world", "Called from a ring")
#_  ]], far.PluginStartupInfo().ModuleName)
#_```
#_

article id=573 dt=Text ctime=3910513952 mtime=3910516051 nm=tFarTrueColorForeAndBack
#_<markdown>
#_**`tFarTrueColorForAndBack`** is a table with the following predefined fields:
#_
#_      ForegroundColor:  integer
#_      BackgroundColor:  integer
#_
#_When passing data to Far it is also possible to use integer keys
#_1 and 2 instead of the string keys, i.e., the following tables A
#_and B are equivalent in the sense of defining a color:
#_
#_      A = { ForegroundColor=0x123456; BackgroundColor=0x789ABC; }
#_      B = { 0x123456; 0x789ABC; }
#_
#_If both string and integer keys are present the string key has higher priority.
#_
#_When the data comes from Far the string keys are always used.
#_

article id=574 dt=Text ctime=3911294479 mtime=3911294514 nm=export.ProcessSynchroEvent
#_ret = export.ProcessSynchroEvent (event, param)
#_
#_**Parameters:**
#_  event: integer
#_  param: integer
#_
#_**Returns:**
#_  ret:   integer
#_
#_**Far API used:**
#_  ProcessSynchroEventW
#_
#_@@@
#_

article id=575 dt=Text ctime=3911500947 mtime=3911501132 nm=methods gmatch, gmatchW
#_for c1 [,c2 ...] in regex_object:gmatch (s) do
#_  ......
#_end
#_
#_**Parameters:**
#_  s       :  string
#_
#_**Returns:**
#_  c1,...  :  strings (there can be *false* in place of captures
#_                     not participated in the match)
#_
#_**Note:**
#_*regex_object:gmatchW* receives its 1-st argument
#_and returns captures in UTF-32LE encoding.
#_
#_**Far API used:**
#_  `RegExpControl`
#_
#_@@@
#_[RegExpControl]: https://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_

article id=577 dt=Text ctime=3912014683 mtime=3912014683 nm=actl

article id=578 dt=Text ctime=3912014694 mtime=3912014694 nm=export

article id=579 dt=Text ctime=3912014705 mtime=3912014705 nm=far

article id=580 dt=Text ctime=3912014756 mtime=3912014756 nm=panel

article id=581 dt=Text ctime=3912014765 mtime=3912014765 nm=win

article id=582 dt=Text ctime=3912631426 mtime=3912631486 nm=far.RunDefaultScript
#_Result = far.RunDefaultScript ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  Result: boolean (true = success)
#_
#_**Description:**
#_  Runs the default script of the plugin.
#_  This usually means that all plugin's code is **immediately** reloaded.
#_  This is different from setting *far.ReloadDefaultScript = true* which causes
#_  a deferred reload (that occurs when `export.Open` is called the next time).
#_
#_**See also:**
#_  `LF_RunDefaultScript`
#_  `far.ReloadDefaultScript`
#_
#_@@@
#_[LF_RunDefaultScript]: 130.html
#_[far.ReloadDefaultScript]: 173.html
#_[export.Open]: 109.html
#_

article id=583 dt=Text ctime=3912956918 mtime=3913010668 nm=far.SplitCmdLine
#_... = far.SplitCmdLine (str)
#_
#_**Parameters:**
#_  str : string
#_
#_**Returns:**
#_  ... : 0 or more strings (up to 64)
#_
#_**Description:**
#_  The function treats its parameter as consisting of space-delimitered
#_  parts and those parts are returned.
#_
#_  A part can contain spaces if it is either enclosed in double quotes
#_  or if those spaces are escaped with backslashes.
#_
#_  A part can contain double quotes if they are escaped with backslashes.
#_
#_  Unescaped backslashes are skipped.
#_

article id=584 dt=Text ctime=3914307387 mtime=3914307646 nm=export.GetLinkTarget
#_Target = export.GetLinkTarget (object, handle, Item, OpMode)
#_
#_**Parameters:**
#_  object:  plugin object
#_  handle:  plugin handle
#_  Item  :  table (`tPluginPanelItem`)
#_  OpMode:  integer
#_
#_**Returns:**
#_  Target:  string, or nil
#_
#_**Far API used:**
#_  GetLinkTargetW
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_

article id=585 dt=Text ctime=3916822129 mtime=3916822250 nm=far.IsPluginLoaded
#_result = far.IsPluginLoaded (SysId)
#_
#_**Parameters:**
#_  SysId:   integer
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Description:**
#_  Returns *true* if the plugin is loaded in memory.
#_
#_**Far API used:**
#_  PluginsControl: PCTL_FINDPLUGIN, PCTL_GETPLUGININFORMATION
#_
#_@@@
#_

article id=586 dt=Text ctime=3917348005 mtime=3917348041 nm=win.ExtractKeyEx
#_result = win.ExtractKeyEx ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result: table `tInputRecord`, or nil
#_
#_**Description:**
#_  If a key was pressed or released, the input record is returned.
#_  Otherwise, a nil is returned.
#_
#_**Windows API used:**
#_  PeekConsoleInput, ReadConsoleInput
#_
#_@@@
#_[tInputRecord]: 187.html
#_
#_{peekconsoleinput}: http://api.farmanager.com/ru/winapi/peekconsoleinput.html
#_{readconsoleinput}: http://api.farmanager.com/ru/winapi/readconsoleinput.html
#_

article id=588 dt=Text ctime=3919692575 mtime=3919693411 nm=far.SudoCRCall
#_OK, ... = far.SudoCRCall (func, ...)
#_
#_**Parameters:**
#_  func : function
#_  ...  : arguments (0 or more values)
#_
#_**Returns:**
#_  OK   : boolean
#_  ...  : return values
#_           on success : 0 or more values
#_           on failure : string (error message)
#_
#_**Description:**
#_  This function is similar to *pcall* except that it creates
#_  internally a *SudoClientRegion* object that is guaranteed
#_  to be destroyed on both normal and error returns.
#_
#_@@@
#_

article id=589 dt=Text ctime=3920101177 mtime=3920256599 nm=win.OpenFile
#_Handle = win.OpenFile (FileName [, Mode])
#_
#_**Parameters:**
#_  FileName  : string
#_  Mode      : string ("r", "w", "a") default = "r";
#_              it may also contain 'b' at the end which is ignored
#_
#_**Returns:**
#_  Handle    : userdata (success) or nil (failure)
#_
#_**Windows API used:**
#_  CreateFileW
#_
#_@@@
#_

article id=590 dt=Text ctime=3920102364 mtime=3920104176 nm=read
#_str = Handle:read (numbytes)
#_
#_**Parameters:**
#_  numbytes : integer
#_
#_**Returns:**
#_  str      : string or nil
#_
#_**Windows API used:**
#_  ReadFile
#_
#_@@@
#_

article id=591 dt=Text ctime=3920102372 mtime=3920104221 nm=seek
#_pos = Handle:seek (whence, offset)
#_
#_**Parameters:**
#_  whence :  string ("set", "cur", "end"; defaults to "cur")
#_  offset :  integer (defaults to 0)
#_
#_**Returns:**
#_  pos    :  integer or nil
#_
#_**Windows API used:**
#_  SetFilePointer
#_
#_@@@
#_

article id=592 dt=Text ctime=3920102377 mtime=3920105148 nm=write
#_Handle:write (str1 [, ...])
#_
#_**Parameters:**
#_  str1 : string
#_  ...  : zero or more strings
#_
#_**Returns:**
#_  nothing
#_
#_**Windows API used:**
#_  WriteFile
#_
#_@@@
#_

article id=593 dt=Text ctime=3920104990 mtime=3920105194 nm=close
#_Handle:close()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  true or nil
#_
#_**Windows API used:**
#_  CloseHandle
#_
#_@@@
#_

